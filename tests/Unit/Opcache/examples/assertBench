
$_main:
     ; (lines=7, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/autoload.php:1-8
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INCLUDE_OR_EVAL (require_once) string("/home/daniel/www/phpbench/phpbench/vendor/composer/autoload_real.php")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("ComposerAutoloaderInited1dad5bad5e40595560d28332c7af39") string("getLoader")
0004 V1 = DO_FCALL
0005 RETURN V1
0006 RETURN int(1)

$_main:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/autoload_real.php:1-76
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN int(1)

composerRequireed1dad5bad5e40595560d28332c7af39:
     ; (lines=16, args=2, vars=2, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/autoload_real.php:68-75
     ; return  [] RANGE[0..0]
0000 CV0($fileIdentifier) = RECV 1
0001 CV1($file) = RECV 2
0002 EXT_STMT
0003 T2 = FETCH_IS (global) string("GLOBALS")
0004 T3 = FETCH_DIM_IS T2 string("__composer_autoload_files")
0005 T4 = ISSET_ISEMPTY_DIM_OBJ (empty) T3 CV0($fileIdentifier)
0006 JMPZ T4 0014
0007 EXT_STMT
0008 INCLUDE_OR_EVAL (require) CV1($file)
0009 EXT_STMT
0010 V6 = FETCH_W (global) string("GLOBALS")
0011 V7 = FETCH_DIM_W V6 string("__composer_autoload_files")
0012 ASSIGN_DIM V7 CV0($fileIdentifier)
0013 OP_DATA bool(true)
0014 EXT_STMT
0015 RETURN null

ComposerAutoloaderInited1dad5bad5e40595560d28332c7af39::loadClassLoader:
     ; (lines=8, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/autoload_real.php:9-14
     ; return  [] RANGE[0..0]
0000 CV0($class) = RECV 1
0001 EXT_STMT
0002 T1 = IS_IDENTICAL CV0($class) string("Composer\Autoload\ClassLoader")
0003 JMPZ T1 0006
0004 EXT_STMT
0005 INCLUDE_OR_EVAL (require) string("/home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php")
0006 EXT_STMT
0007 RETURN null

ComposerAutoloaderInited1dad5bad5e40595560d28332c7af39::getLoader:
     ; (lines=124, args=0, vars=9, tmps=47)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/autoload_real.php:19-65
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T9 = FETCH_STATIC_PROP_R string("loader") (self) (exception)
0002 T10 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] T9
0003 JMPZ T10 0007
0004 EXT_STMT
0005 T11 = FETCH_STATIC_PROP_R string("loader") (self) (exception)
0006 RETURN T11
0007 EXT_STMT
0008 INCLUDE_OR_EVAL (require) string("/home/daniel/www/phpbench/phpbench/vendor/composer/platform_check.php")
0009 EXT_STMT
0010 INIT_FCALL 3 128 string("spl_autoload_register")
0011 SEND_VAL array(...) 1
0012 SEND_VAL bool(true) 2
0013 SEND_VAL bool(true) 3
0014 DO_FCALL
0015 EXT_STMT
0016 V15 = NEW 1 string("Composer\Autoload\ClassLoader")
0017 INIT_FCALL 1 96 string("dirname")
0018 INIT_FCALL 1 96 string("dirname")
0019 SEND_VAL string("/home/daniel/www/phpbench/phpbench/vendor/composer/autoload_real.php") 1
0020 V16 = DO_FCALL
0021 SEND_VAR V16 1
0022 V17 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V17 1
0024 DO_FCALL
0025 T19 = ASSIGN CV0($loader) V15
0026 ASSIGN_STATIC_PROP string("loader")
0027 OP_DATA T19
0028 EXT_STMT
0029 INIT_FCALL 1 96 string("spl_autoload_unregister")
0030 SEND_VAL array(...) 1
0031 DO_FCALL
0032 EXT_STMT
0033 T21 = DEFINED string("HHVM_VERSION")
0034 T22 = BOOL_NOT T21
0035 T23 = BOOL T22
0036 T23 = JMPZ_EX T23 0047
0037 INIT_FCALL 1 96 string("function_exists")
0038 SEND_VAL string("zend_loader_file_encoded") 1
0039 V24 = DO_FCALL
0040 T25 = BOOL_NOT V24
0041 T25 = JMPNZ_EX T25 0046
0042 INIT_FCALL_BY_NAME 0 string("zend_loader_file_encoded")
0043 V26 = DO_FCALL
0044 T27 = BOOL_NOT V26
0045 T25 = BOOL T27
0046 T23 = BOOL T25
0047 ASSIGN CV1($useStaticLoader) T23
0048 EXT_STMT
0049 JMPZ CV1($useStaticLoader) 0059
0050 EXT_STMT
0051 INCLUDE_OR_EVAL (require) string("/home/daniel/www/phpbench/phpbench/vendor/composer/autoload_static.php")
0052 EXT_STMT
0053 INIT_STATIC_METHOD_CALL 1 string("Composer\Autoload\ComposerStaticInited1dad5bad5e40595560d28332c7af39") string("getInitializer")
0054 SEND_VAR_EX CV0($loader) 1
0055 V30 = DO_FCALL
0056 INIT_USER_CALL 0 string("call_user_func") V30
0057 DO_FCALL
0058 JMP 0096
0059 EXT_STMT
0060 V32 = INCLUDE_OR_EVAL (require) string("/home/daniel/www/phpbench/phpbench/vendor/composer/autoload_namespaces.php")
0061 ASSIGN CV2($map) V32
0062 EXT_STMT
0063 V34 = FE_RESET_R CV2($map) 0072
0064 T35 = FE_FETCH_R V34 CV3($path) 0072
0065 ASSIGN CV4($namespace) T35
0066 EXT_STMT
0067 INIT_METHOD_CALL 2 CV0($loader) string("set")
0068 SEND_VAR_EX CV4($namespace) 1
0069 SEND_VAR_EX CV3($path) 2
0070 DO_FCALL
0071 JMP 0064
0072 FE_FREE V34
0073 EXT_STMT
0074 V38 = INCLUDE_OR_EVAL (require) string("/home/daniel/www/phpbench/phpbench/vendor/composer/autoload_psr4.php")
0075 ASSIGN CV2($map) V38
0076 EXT_STMT
0077 V40 = FE_RESET_R CV2($map) 0086
0078 T41 = FE_FETCH_R V40 CV3($path) 0086
0079 ASSIGN CV4($namespace) T41
0080 EXT_STMT
0081 INIT_METHOD_CALL 2 CV0($loader) string("setPsr4")
0082 SEND_VAR_EX CV4($namespace) 1
0083 SEND_VAR_EX CV3($path) 2
0084 DO_FCALL
0085 JMP 0078
0086 FE_FREE V40
0087 EXT_STMT
0088 V44 = INCLUDE_OR_EVAL (require) string("/home/daniel/www/phpbench/phpbench/vendor/composer/autoload_classmap.php")
0089 ASSIGN CV5($classMap) V44
0090 EXT_STMT
0091 JMPZ CV5($classMap) 0096
0092 EXT_STMT
0093 INIT_METHOD_CALL 1 CV0($loader) string("addClassMap")
0094 SEND_VAR_EX CV5($classMap) 1
0095 DO_FCALL
0096 EXT_STMT
0097 INIT_METHOD_CALL 1 CV0($loader) string("register")
0098 SEND_VAL_EX bool(true) 1
0099 DO_FCALL
0100 EXT_STMT
0101 JMPZ CV1($useStaticLoader) 0106
0102 EXT_STMT
0103 T48 = FETCH_STATIC_PROP_R string("files") string("Composer\Autoload\ComposerStaticInited1dad5bad5e40595560d28332c7af39")
0104 ASSIGN CV6($includeFiles) T48
0105 JMP 0109
0106 EXT_STMT
0107 V50 = INCLUDE_OR_EVAL (require) string("/home/daniel/www/phpbench/phpbench/vendor/composer/autoload_files.php")
0108 ASSIGN CV6($includeFiles) V50
0109 EXT_STMT
0110 V52 = FE_RESET_R CV6($includeFiles) 0119
0111 T53 = FE_FETCH_R V52 CV7($file) 0119
0112 ASSIGN CV8($fileIdentifier) T53
0113 EXT_STMT
0114 INIT_FCALL_BY_NAME 2 string("composerRequireed1dad5bad5e40595560d28332c7af39")
0115 SEND_VAR_EX CV8($fileIdentifier) 1
0116 SEND_VAR_EX CV7($file) 2
0117 DO_FCALL
0118 JMP 0111
0119 FE_FREE V52
0120 EXT_STMT
0121 RETURN CV0($loader)
0122 EXT_STMT
0123 RETURN null
LIVE RANGES:
     15: 0017 - 0025 (new)
     34: 0064 - 0072 (loop)
     40: 0078 - 0086 (loop)
     52: 0111 - 0119 (loop)

$_main:
     ; (lines=69, args=0, vars=1, tmps=23)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/platform_check.php:1-27
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 ASSIGN CV0($issues) array(...)
0002 EXT_STMT
0003 JMPZ bool(false) 0007
0004 EXT_STMT
0005 ASSIGN_DIM CV0($issues) NEXT
0006 OP_DATA string("Your Composer dependencies require a PHP version ">= 8.0.0". You are running 8.0.1.")
0007 EXT_STMT
0008 JMPZ CV0($issues) 0068
0009 EXT_STMT
0010 INIT_FCALL 0 80 string("headers_sent")
0011 V3 = DO_FCALL
0012 T4 = BOOL_NOT V3
0013 JMPZ T4 0018
0014 EXT_STMT
0015 INIT_FCALL 1 96 string("header")
0016 SEND_VAL string("HTTP/1.1 500 Internal Server Error") 1
0017 DO_FCALL
0018 EXT_STMT
0019 INIT_FCALL 1 96 string("ini_get")
0020 SEND_VAL string("display_errors") 1
0021 V6 = DO_FCALL
0022 T7 = BOOL_NOT V6
0023 JMPZ T7 0058
0024 EXT_STMT
0025 JMPZ bool(true) 0040
0026 EXT_STMT
0027 INIT_FCALL 2 112 string("fwrite")
0028 T8 = FETCH_CONSTANT string("STDERR")
0029 SEND_VAL T8 1
0030 INIT_FCALL 2 112 string("implode")
0031 SEND_VAL string("
") 1
0032 SEND_VAR CV0($issues) 2
0033 V9 = DO_FCALL
0034 T10 = CONCAT string("Composer detected issues in your platform:

") V9
0035 T11 = CONCAT T10 string("
")
0036 T12 = CONCAT T11 string("
")
0037 SEND_VAL T12 2
0038 DO_FCALL
0039 JMP 0058
0040 INIT_FCALL 0 80 string("headers_sent")
0041 V14 = DO_FCALL
0042 T15 = BOOL_NOT V14
0043 JMPZ T15 0058
0044 EXT_STMT
0045 INIT_FCALL 3 128 string("str_replace")
0046 SEND_VAL string("You are running 8.0.1.") 1
0047 SEND_VAL string("") 2
0048 INIT_FCALL 2 112 string("implode")
0049 SEND_VAL string("
") 1
0050 SEND_VAR CV0($issues) 2
0051 V16 = DO_FCALL
0052 SEND_VAR V16 3
0053 V17 = DO_FCALL
0054 T18 = CONCAT string("Composer detected issues in your platform:

") V17
0055 T19 = CONCAT T18 string("
")
0056 T20 = CONCAT T19 string("
")
0057 ECHO T20
0058 EXT_STMT
0059 INIT_FCALL 2 112 string("trigger_error")
0060 INIT_FCALL 2 112 string("implode")
0061 SEND_VAL string(" ") 1
0062 SEND_VAR CV0($issues) 2
0063 V21 = DO_FCALL
0064 T22 = CONCAT string("Composer detected issues in your platform: ") V21
0065 SEND_VAL T22 1
0066 SEND_VAL int(256) 2
0067 DO_FCALL
0068 RETURN int(1)

$_main:
     ; (lines=14, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:1-482
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 NOP
0012 EXT_STMT
0013 RETURN int(1)

Composer\Autoload\includeFile:
     ; (lines=5, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:478-481
     ; return  [] RANGE[0..0]
0000 CV0($file) = RECV 1
0001 EXT_STMT
0002 INCLUDE_OR_EVAL (include) CV0($file)
0003 EXT_STMT
0004 RETURN null

Composer\Autoload\ClassLoader::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:64-67
     ; return  [] RANGE[0..0]
0000 CV0($vendorDir) = RECV_INIT 1 null
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("vendorDir")
0003 OP_DATA CV0($vendorDir)
0004 EXT_STMT
0005 RETURN null

Composer\Autoload\ClassLoader::getPrefixes:
     ; (lines=19, args=0, vars=0, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:69-76
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = ISSET_ISEMPTY_PROP_OBJ (empty) THIS string("prefixesPsr0")
0002 T1 = BOOL_NOT T0
0003 JMPZ T1 0015
0004 EXT_STMT
0005 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\call_user_func_array")
0006 SEND_VAL_EX string("array_merge") 1
0007 INIT_NS_FCALL_BY_NAME 1 string("Composer\Autoload\array_values")
0008 CHECK_FUNC_ARG 1
0009 V2 = FETCH_OBJ_FUNC_ARG (ref) THIS string("prefixesPsr0")
0010 SEND_FUNC_ARG V2 1
0011 V3 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V3 2
0013 V4 = DO_FCALL
0014 RETURN V4
0015 EXT_STMT
0016 RETURN array(...)
0017 EXT_STMT
0018 RETURN null

Composer\Autoload\ClassLoader::getPrefixesPsr4:
     ; (lines=5, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:78-81
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("prefixDirsPsr4")
0002 RETURN T0
0003 EXT_STMT
0004 RETURN null

Composer\Autoload\ClassLoader::getFallbackDirs:
     ; (lines=5, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:83-86
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("fallbackDirsPsr0")
0002 RETURN T0
0003 EXT_STMT
0004 RETURN null

Composer\Autoload\ClassLoader::getFallbackDirsPsr4:
     ; (lines=5, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:88-91
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("fallbackDirsPsr4")
0002 RETURN T0
0003 EXT_STMT
0004 RETURN null

Composer\Autoload\ClassLoader::getClassMap:
     ; (lines=5, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:93-96
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("classMap")
0002 RETURN T0
0003 EXT_STMT
0004 RETURN null

Composer\Autoload\ClassLoader::addClassMap:
     ; (lines=19, args=1, vars=1, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:101-108
     ; return  [] RANGE[0..0]
0000 CV0($classMap) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_R THIS string("classMap")
0003 JMPZ T1 0014
0004 EXT_STMT
0005 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\array_merge")
0006 CHECK_FUNC_ARG 1
0007 V3 = FETCH_OBJ_FUNC_ARG (ref) THIS string("classMap")
0008 SEND_FUNC_ARG V3 1
0009 SEND_VAR_EX CV0($classMap) 2
0010 V4 = DO_FCALL
0011 ASSIGN_OBJ THIS string("classMap")
0012 OP_DATA V4
0013 JMP 0017
0014 EXT_STMT
0015 ASSIGN_OBJ THIS string("classMap")
0016 OP_DATA CV0($classMap)
0017 EXT_STMT
0018 RETURN null

Composer\Autoload\ClassLoader::add:
     ; (lines=81, args=3, vars=4, tmps=35)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:118-153
     ; return  [] RANGE[0..0]
0000 CV0($prefix) = RECV 1
0001 CV1($paths) = RECV 2
0002 CV2($prepend) = RECV_INIT 3 bool(false)
0003 EXT_STMT
0004 T4 = BOOL_NOT CV0($prefix)
0005 JMPZ T4 0031
0006 EXT_STMT
0007 JMPZ CV2($prepend) 0019
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\array_merge")
0010 T6 = CAST (array) CV1($paths)
0011 SEND_VAL_EX T6 1
0012 CHECK_FUNC_ARG 2
0013 V7 = FETCH_OBJ_FUNC_ARG (ref) THIS string("fallbackDirsPsr0")
0014 SEND_FUNC_ARG V7 2
0015 V8 = DO_FCALL
0016 ASSIGN_OBJ THIS string("fallbackDirsPsr0")
0017 OP_DATA V8
0018 JMP 0029
0019 EXT_STMT
0020 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\array_merge")
0021 CHECK_FUNC_ARG 1
0022 V10 = FETCH_OBJ_FUNC_ARG (ref) THIS string("fallbackDirsPsr0")
0023 SEND_FUNC_ARG V10 1
0024 T11 = CAST (array) CV1($paths)
0025 SEND_VAL_EX T11 2
0026 V12 = DO_FCALL
0027 ASSIGN_OBJ THIS string("fallbackDirsPsr0")
0028 OP_DATA V12
0029 EXT_STMT
0030 RETURN null
0031 EXT_STMT
0032 T13 = FETCH_DIM_R CV0($prefix) int(0)
0033 ASSIGN CV3($first) T13
0034 EXT_STMT
0035 T15 = FETCH_OBJ_IS THIS string("prefixesPsr0")
0036 T16 = FETCH_DIM_IS T15 CV3($first)
0037 T17 = ISSET_ISEMPTY_DIM_OBJ (isset) T16 CV0($prefix)
0038 T18 = BOOL_NOT T17
0039 JMPZ T18 0048
0040 EXT_STMT
0041 T22 = CAST (array) CV1($paths)
0042 V19 = FETCH_OBJ_W (dim write) THIS string("prefixesPsr0")
0043 V20 = FETCH_DIM_W V19 CV3($first)
0044 ASSIGN_DIM V20 CV0($prefix)
0045 OP_DATA T22
0046 EXT_STMT
0047 RETURN null
0048 EXT_STMT
0049 JMPZ CV2($prepend) 0065
0050 EXT_STMT
0051 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\array_merge")
0052 T26 = CAST (array) CV1($paths)
0053 SEND_VAL_EX T26 1
0054 CHECK_FUNC_ARG 2
0055 V27 = FETCH_OBJ_FUNC_ARG THIS string("prefixesPsr0")
0056 V28 = FETCH_DIM_FUNC_ARG V27 CV3($first)
0057 V29 = FETCH_DIM_FUNC_ARG V28 CV0($prefix)
0058 SEND_FUNC_ARG V29 2
0059 V30 = DO_FCALL
0060 V23 = FETCH_OBJ_W (dim write) THIS string("prefixesPsr0")
0061 V24 = FETCH_DIM_W V23 CV3($first)
0062 ASSIGN_DIM V24 CV0($prefix)
0063 OP_DATA V30
0064 JMP 0079
0065 EXT_STMT
0066 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\array_merge")
0067 CHECK_FUNC_ARG 1
0068 V34 = FETCH_OBJ_FUNC_ARG THIS string("prefixesPsr0")
0069 V35 = FETCH_DIM_FUNC_ARG V34 CV3($first)
0070 V36 = FETCH_DIM_FUNC_ARG V35 CV0($prefix)
0071 SEND_FUNC_ARG V36 1
0072 T37 = CAST (array) CV1($paths)
0073 SEND_VAL_EX T37 2
0074 V38 = DO_FCALL
0075 V31 = FETCH_OBJ_W (dim write) THIS string("prefixesPsr0")
0076 V32 = FETCH_DIM_W V31 CV3($first)
0077 ASSIGN_DIM V32 CV0($prefix)
0078 OP_DATA V38
0079 EXT_STMT
0080 RETURN null
LIVE RANGES:
     22: 0042 - 0044 (tmp/var)
     30: 0060 - 0062 (tmp/var)
     38: 0075 - 0077 (tmp/var)

Composer\Autoload\ClassLoader::addPsr4:
     ; (lines=89, args=3, vars=4, tmps=38)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:165-201
     ; return  [] RANGE[0..0]
0000 CV0($prefix) = RECV 1
0001 CV1($paths) = RECV 2
0002 CV2($prepend) = RECV_INIT 3 bool(false)
0003 EXT_STMT
0004 T4 = BOOL_NOT CV0($prefix)
0005 JMPZ T4 0030
0006 EXT_STMT
0007 JMPZ CV2($prepend) 0019
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\array_merge")
0010 T6 = CAST (array) CV1($paths)
0011 SEND_VAL_EX T6 1
0012 CHECK_FUNC_ARG 2
0013 V7 = FETCH_OBJ_FUNC_ARG (ref) THIS string("fallbackDirsPsr4")
0014 SEND_FUNC_ARG V7 2
0015 V8 = DO_FCALL
0016 ASSIGN_OBJ THIS string("fallbackDirsPsr4")
0017 OP_DATA V8
0018 JMP 0029
0019 EXT_STMT
0020 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\array_merge")
0021 CHECK_FUNC_ARG 1
0022 V10 = FETCH_OBJ_FUNC_ARG (ref) THIS string("fallbackDirsPsr4")
0023 SEND_FUNC_ARG V10 1
0024 T11 = CAST (array) CV1($paths)
0025 SEND_VAL_EX T11 2
0026 V12 = DO_FCALL
0027 ASSIGN_OBJ THIS string("fallbackDirsPsr4")
0028 OP_DATA V12
0029 JMP 0087
0030 T13 = FETCH_OBJ_IS THIS string("prefixDirsPsr4")
0031 T14 = ISSET_ISEMPTY_DIM_OBJ (isset) T13 CV0($prefix)
0032 T15 = BOOL_NOT T14
0033 JMPZ T15 0061
0034 EXT_STMT
0035 INIT_NS_FCALL_BY_NAME 1 string("Composer\Autoload\strlen")
0036 SEND_VAR_EX CV0($prefix) 1
0037 V16 = DO_FCALL
0038 ASSIGN CV3($length) V16
0039 EXT_STMT
0040 T18 = SUB CV3($length) int(1)
0041 T19 = FETCH_DIM_R CV0($prefix) T18
0042 T20 = IS_NOT_IDENTICAL T19 string("\")
0043 JMPZ T20 0049
0044 EXT_STMT
0045 V21 = NEW 1 string("InvalidArgumentException")
0046 SEND_VAL_EX string("A non-empty PSR-4 prefix must end with a namespace separator.") 1
0047 DO_FCALL
0048 THROW V21
0049 EXT_STMT
0050 T24 = FETCH_DIM_R CV0($prefix) int(0)
0051 V23 = FETCH_OBJ_W (dim write) THIS string("prefixLengthsPsr4")
0052 V25 = FETCH_DIM_W V23 T24
0053 ASSIGN_DIM V25 CV0($prefix)
0054 OP_DATA CV3($length)
0055 EXT_STMT
0056 T29 = CAST (array) CV1($paths)
0057 V27 = FETCH_OBJ_W (dim write) THIS string("prefixDirsPsr4")
0058 ASSIGN_DIM V27 CV0($prefix)
0059 OP_DATA T29
0060 JMP 0087
0061 JMPZ CV2($prepend) 0075
0062 EXT_STMT
0063 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\array_merge")
0064 T32 = CAST (array) CV1($paths)
0065 SEND_VAL_EX T32 1
0066 CHECK_FUNC_ARG 2
0067 V33 = FETCH_OBJ_FUNC_ARG THIS string("prefixDirsPsr4")
0068 V34 = FETCH_DIM_FUNC_ARG V33 CV0($prefix)
0069 SEND_FUNC_ARG V34 2
0070 V35 = DO_FCALL
0071 V30 = FETCH_OBJ_W (dim write) THIS string("prefixDirsPsr4")
0072 ASSIGN_DIM V30 CV0($prefix)
0073 OP_DATA V35
0074 JMP 0087
0075 EXT_STMT
0076 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\array_merge")
0077 CHECK_FUNC_ARG 1
0078 V38 = FETCH_OBJ_FUNC_ARG THIS string("prefixDirsPsr4")
0079 V39 = FETCH_DIM_FUNC_ARG V38 CV0($prefix)
0080 SEND_FUNC_ARG V39 1
0081 T40 = CAST (array) CV1($paths)
0082 SEND_VAL_EX T40 2
0083 V41 = DO_FCALL
0084 V36 = FETCH_OBJ_W (dim write) THIS string("prefixDirsPsr4")
0085 ASSIGN_DIM V36 CV0($prefix)
0086 OP_DATA V41
0087 EXT_STMT
0088 RETURN null
LIVE RANGES:
     21: 0046 - 0048 (new)
     24: 0051 - 0052 (tmp/var)
     29: 0057 - 0058 (tmp/var)
     35: 0071 - 0072 (tmp/var)
     41: 0084 - 0085 (tmp/var)

Composer\Autoload\ClassLoader::set:
     ; (lines=19, args=2, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:210-217
     ; return  [] RANGE[0..0]
0000 CV0($prefix) = RECV 1
0001 CV1($paths) = RECV 2
0002 EXT_STMT
0003 T2 = BOOL_NOT CV0($prefix)
0004 JMPZ T2 0010
0005 EXT_STMT
0006 T4 = CAST (array) CV1($paths)
0007 ASSIGN_OBJ THIS string("fallbackDirsPsr0")
0008 OP_DATA T4
0009 JMP 0017
0010 EXT_STMT
0011 T6 = FETCH_DIM_R CV0($prefix) int(0)
0012 T9 = CAST (array) CV1($paths)
0013 V5 = FETCH_OBJ_W (dim write) THIS string("prefixesPsr0")
0014 V7 = FETCH_DIM_W V5 T6
0015 ASSIGN_DIM V7 CV0($prefix)
0016 OP_DATA T9
0017 EXT_STMT
0018 RETURN null
LIVE RANGES:
     6: 0012 - 0014 (tmp/var)
     9: 0013 - 0015 (tmp/var)

Composer\Autoload\ClassLoader::setPsr4:
     ; (lines=38, args=2, vars=3, tmps=17)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:228-240
     ; return  [] RANGE[0..0]
0000 CV0($prefix) = RECV 1
0001 CV1($paths) = RECV 2
0002 EXT_STMT
0003 T3 = BOOL_NOT CV0($prefix)
0004 JMPZ T3 0010
0005 EXT_STMT
0006 T5 = CAST (array) CV1($paths)
0007 ASSIGN_OBJ THIS string("fallbackDirsPsr4")
0008 OP_DATA T5
0009 JMP 0036
0010 EXT_STMT
0011 INIT_NS_FCALL_BY_NAME 1 string("Composer\Autoload\strlen")
0012 SEND_VAR_EX CV0($prefix) 1
0013 V6 = DO_FCALL
0014 ASSIGN CV2($length) V6
0015 EXT_STMT
0016 T8 = SUB CV2($length) int(1)
0017 T9 = FETCH_DIM_R CV0($prefix) T8
0018 T10 = IS_NOT_IDENTICAL T9 string("\")
0019 JMPZ T10 0025
0020 EXT_STMT
0021 V11 = NEW 1 string("InvalidArgumentException")
0022 SEND_VAL_EX string("A non-empty PSR-4 prefix must end with a namespace separator.") 1
0023 DO_FCALL
0024 THROW V11
0025 EXT_STMT
0026 T14 = FETCH_DIM_R CV0($prefix) int(0)
0027 V13 = FETCH_OBJ_W (dim write) THIS string("prefixLengthsPsr4")
0028 V15 = FETCH_DIM_W V13 T14
0029 ASSIGN_DIM V15 CV0($prefix)
0030 OP_DATA CV2($length)
0031 EXT_STMT
0032 T19 = CAST (array) CV1($paths)
0033 V17 = FETCH_OBJ_W (dim write) THIS string("prefixDirsPsr4")
0034 ASSIGN_DIM V17 CV0($prefix)
0035 OP_DATA T19
0036 EXT_STMT
0037 RETURN null
LIVE RANGES:
     11: 0022 - 0024 (new)
     14: 0027 - 0028 (tmp/var)
     19: 0033 - 0034 (tmp/var)

Composer\Autoload\ClassLoader::setUseIncludePath:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:247-250
     ; return  [] RANGE[0..0]
0000 CV0($useIncludePath) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("useIncludePath")
0003 OP_DATA CV0($useIncludePath)
0004 EXT_STMT
0005 RETURN null

Composer\Autoload\ClassLoader::getUseIncludePath:
     ; (lines=5, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:258-261
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("useIncludePath")
0002 RETURN T0
0003 EXT_STMT
0004 RETURN null

Composer\Autoload\ClassLoader::setClassMapAuthoritative:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:269-272
     ; return  [] RANGE[0..0]
0000 CV0($classMapAuthoritative) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("classMapAuthoritative")
0003 OP_DATA CV0($classMapAuthoritative)
0004 EXT_STMT
0005 RETURN null

Composer\Autoload\ClassLoader::isClassMapAuthoritative:
     ; (lines=5, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:279-282
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("classMapAuthoritative")
0002 RETURN T0
0003 EXT_STMT
0004 RETURN null

Composer\Autoload\ClassLoader::setApcuPrefix:
     ; (lines=23, args=1, vars=1, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:289-292
     ; return  [] RANGE[0..0]
0000 CV0($apcuPrefix) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 1 string("Composer\Autoload\function_exists")
0003 SEND_VAL_EX string("apcu_fetch") 1
0004 V2 = DO_FCALL
0005 T3 = JMPZ_EX V2 0015
0006 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\filter_var")
0007 INIT_NS_FCALL_BY_NAME 1 string("Composer\Autoload\ini_get")
0008 SEND_VAL_EX string("apc.enabled") 1
0009 V4 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V4 1
0011 T5 = FETCH_CONSTANT (unqualified-in-namespace) string("Composer\Autoload\FILTER_VALIDATE_BOOLEAN")
0012 SEND_VAL_EX T5 2
0013 V6 = DO_FCALL
0014 T3 = BOOL V6
0015 JMPZ T3 0018
0016 T7 = QM_ASSIGN CV0($apcuPrefix)
0017 JMP 0019
0018 T7 = QM_ASSIGN null
0019 ASSIGN_OBJ THIS string("apcuPrefix")
0020 OP_DATA T7
0021 EXT_STMT
0022 RETURN null

Composer\Autoload\ClassLoader::getApcuPrefix:
     ; (lines=5, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:299-302
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("apcuPrefix")
0002 RETURN T0
0003 EXT_STMT
0004 RETURN null

Composer\Autoload\ClassLoader::register:
     ; (lines=39, args=1, vars=1, tmps=17)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:309-323
     ; return  [] RANGE[0..0]
0000 CV0($prepend) = RECV_INIT 1 bool(false)
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 3 string("Composer\Autoload\spl_autoload_register")
0003 T1 = FETCH_THIS
0004 T2 = INIT_ARRAY 2 (packed) T1 NEXT
0005 T2 = ADD_ARRAY_ELEMENT string("loadClass") NEXT
0006 SEND_VAL_EX T2 1
0007 SEND_VAL_EX bool(true) 2
0008 SEND_VAR_EX CV0($prepend) 3
0009 DO_FCALL
0010 EXT_STMT
0011 T4 = FETCH_OBJ_R THIS string("vendorDir")
0012 T5 = TYPE_CHECK (null) T4
0013 JMPZ T5 0016
0014 EXT_STMT
0015 RETURN null
0016 EXT_STMT
0017 JMPZ CV0($prepend) 0027
0018 EXT_STMT
0019 T7 = FETCH_OBJ_R THIS string("vendorDir")
0020 T8 = FETCH_THIS
0021 T9 = INIT_ARRAY 1 (packed) T8 T7
0022 T10 = FETCH_STATIC_PROP_R string("registeredLoaders") (self) (exception)
0023 T11 = ADD T9 T10
0024 ASSIGN_STATIC_PROP string("registeredLoaders")
0025 OP_DATA T11
0026 JMP 0037
0027 EXT_STMT
0028 T13 = FETCH_OBJ_R THIS string("vendorDir")
0029 V12 = FETCH_STATIC_PROP_UNSET string("registeredLoaders") (self) (exception)
0030 UNSET_DIM V12 T13
0031 EXT_STMT
0032 T15 = FETCH_OBJ_R THIS string("vendorDir")
0033 T17 = FETCH_THIS
0034 V14 = FETCH_STATIC_PROP_W (dim write) string("registeredLoaders") (self) (exception)
0035 ASSIGN_DIM V14 T15
0036 OP_DATA T17
0037 EXT_STMT
0038 RETURN null
LIVE RANGES:
     2: 0005 - 0006 (tmp/var)
     7: 0020 - 0021 (tmp/var)
     9: 0022 - 0023 (tmp/var)
     13: 0029 - 0030 (tmp/var)
     15: 0033 - 0035 (tmp/var)
     17: 0034 - 0035 (tmp/var)

Composer\Autoload\ClassLoader::unregister:
     ; (lines=17, args=0, vars=0, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:328-335
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 1 string("Composer\Autoload\spl_autoload_unregister")
0002 T0 = FETCH_THIS
0003 T1 = INIT_ARRAY 2 (packed) T0 NEXT
0004 T1 = ADD_ARRAY_ELEMENT string("loadClass") NEXT
0005 SEND_VAL_EX T1 1
0006 DO_FCALL
0007 EXT_STMT
0008 T3 = FETCH_OBJ_R THIS string("vendorDir")
0009 T4 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] T3
0010 JMPZ T4 0015
0011 EXT_STMT
0012 T6 = FETCH_OBJ_R THIS string("vendorDir")
0013 V5 = FETCH_STATIC_PROP_UNSET string("registeredLoaders") (self) (exception)
0014 UNSET_DIM V5 T6
0015 EXT_STMT
0016 RETURN null
LIVE RANGES:
     1: 0004 - 0005 (tmp/var)
     6: 0013 - 0014 (tmp/var)

Composer\Autoload\ClassLoader::loadClass:
     ; (lines=17, args=1, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:343-352
     ; return  [] RANGE[0..0]
0000 CV0($class) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 THIS string("findFile")
0003 SEND_VAR_EX CV0($class) 1
0004 V2 = DO_FCALL
0005 T3 = ASSIGN CV1($file) V2
0006 JMPZ T3 0013
0007 EXT_STMT
0008 INIT_NS_FCALL_BY_NAME 1 string("Composer\Autoload\includeFile")
0009 SEND_VAR_EX CV1($file) 1
0010 DO_FCALL
0011 EXT_STMT
0012 RETURN bool(true)
0013 EXT_STMT
0014 RETURN null
0015 EXT_STMT
0016 RETURN null

Composer\Autoload\ClassLoader::findFile:
     ; (lines=76, args=1, vars=3, tmps=27)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:361-394
     ; return  [] RANGE[0..0]
0000 CV0($class) = RECV 1
0001 EXT_STMT
0002 T3 = FETCH_OBJ_IS THIS string("classMap")
0003 T4 = ISSET_ISEMPTY_DIM_OBJ (isset) T3 CV0($class)
0004 JMPZ T4 0009
0005 EXT_STMT
0006 T5 = FETCH_OBJ_R THIS string("classMap")
0007 T6 = FETCH_DIM_R T5 CV0($class)
0008 RETURN T6
0009 EXT_STMT
0010 T7 = FETCH_OBJ_R THIS string("classMapAuthoritative")
0011 T7 = JMPNZ_EX T7 0015
0012 T8 = FETCH_OBJ_IS THIS string("missingClasses")
0013 T9 = ISSET_ISEMPTY_DIM_OBJ (isset) T8 CV0($class)
0014 T7 = BOOL T9
0015 JMPZ T7 0018
0016 EXT_STMT
0017 RETURN bool(false)
0018 EXT_STMT
0019 T10 = FETCH_OBJ_R THIS string("apcuPrefix")
0020 T11 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] T10
0021 JMPZ T11 0034
0022 EXT_STMT
0023 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\apcu_fetch")
0024 T12 = FETCH_OBJ_R THIS string("apcuPrefix")
0025 T13 = CONCAT T12 CV0($class)
0026 SEND_VAL_EX T13 1
0027 SEND_VAR_EX CV2($hit) 2
0028 V14 = DO_FCALL
0029 ASSIGN CV1($file) V14
0030 EXT_STMT
0031 JMPZ CV2($hit) 0034
0032 EXT_STMT
0033 RETURN CV1($file)
0034 EXT_STMT
0035 INIT_METHOD_CALL 2 THIS string("findFileWithExtension")
0036 SEND_VAR_EX CV0($class) 1
0037 SEND_VAL_EX string(".php") 2
0038 V16 = DO_FCALL
0039 ASSIGN CV1($file) V16
0040 EXT_STMT
0041 T18 = TYPE_CHECK (false) CV1($file)
0042 T18 = JMPZ_EX T18 0047
0043 INIT_NS_FCALL_BY_NAME 1 string("Composer\Autoload\defined")
0044 SEND_VAL_EX string("HHVM_VERSION") 1
0045 V19 = DO_FCALL
0046 T18 = BOOL V19
0047 JMPZ T18 0054
0048 EXT_STMT
0049 INIT_METHOD_CALL 2 THIS string("findFileWithExtension")
0050 SEND_VAR_EX CV0($class) 1
0051 SEND_VAL_EX string(".hh") 2
0052 V20 = DO_FCALL
0053 ASSIGN CV1($file) V20
0054 EXT_STMT
0055 T22 = FETCH_OBJ_R THIS string("apcuPrefix")
0056 T23 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] T22
0057 JMPZ T23 0065
0058 EXT_STMT
0059 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\apcu_add")
0060 T24 = FETCH_OBJ_R THIS string("apcuPrefix")
0061 T25 = CONCAT T24 CV0($class)
0062 SEND_VAL_EX T25 1
0063 SEND_VAR_EX CV1($file) 2
0064 DO_FCALL
0065 EXT_STMT
0066 T27 = TYPE_CHECK (false) CV1($file)
0067 JMPZ T27 0072
0068 EXT_STMT
0069 V28 = FETCH_OBJ_W (dim write) THIS string("missingClasses")
0070 ASSIGN_DIM V28 CV0($class)
0071 OP_DATA bool(true)
0072 EXT_STMT
0073 RETURN CV1($file)
0074 EXT_STMT
0075 RETURN null

Composer\Autoload\ClassLoader::getRegisteredLoaders:
     ; (lines=5, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:401-404
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_STATIC_PROP_R string("registeredLoaders") (self) (exception)
0002 RETURN T0
0003 EXT_STMT
0004 RETURN null

Composer\Autoload\ClassLoader::findFileWithExtension:
     ; (lines=195, args=2, vars=14, tmps=76)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/ClassLoader.php:406-470
     ; return  [] RANGE[0..0]
0000 CV0($class) = RECV 1
0001 CV1($ext) = RECV 2
0002 EXT_STMT
0003 INIT_NS_FCALL_BY_NAME 3 string("Composer\Autoload\strtr")
0004 SEND_VAR_EX CV0($class) 1
0005 SEND_VAL_EX string("\") 2
0006 T14 = FETCH_CONSTANT (unqualified-in-namespace) string("Composer\Autoload\DIRECTORY_SEPARATOR")
0007 SEND_VAL_EX T14 3
0008 V15 = DO_FCALL
0009 T16 = CONCAT V15 CV1($ext)
0010 ASSIGN CV2($logicalPathPsr4) T16
0011 EXT_STMT
0012 T18 = FETCH_DIM_R CV0($class) int(0)
0013 ASSIGN CV3($first) T18
0014 EXT_STMT
0015 T20 = FETCH_OBJ_IS THIS string("prefixLengthsPsr4")
0016 T21 = ISSET_ISEMPTY_DIM_OBJ (isset) T20 CV3($first)
0017 JMPZ T21 0069
0018 EXT_STMT
0019 ASSIGN CV4($subPath) CV0($class)
0020 EXT_STMT
0021 JMP 0062
0022 EXT_STMT
0023 INIT_NS_FCALL_BY_NAME 3 string("Composer\Autoload\substr")
0024 SEND_VAR_EX CV4($subPath) 1
0025 SEND_VAL_EX int(0) 2
0026 SEND_VAR_EX CV5($lastPos) 3
0027 V23 = DO_FCALL
0028 ASSIGN CV4($subPath) V23
0029 EXT_STMT
0030 T25 = CONCAT CV4($subPath) string("\")
0031 ASSIGN CV6($search) T25
0032 EXT_STMT
0033 T27 = FETCH_OBJ_IS THIS string("prefixDirsPsr4")
0034 T28 = ISSET_ISEMPTY_DIM_OBJ (isset) T27 CV6($search)
0035 JMPZ T28 0062
0036 EXT_STMT
0037 T29 = FETCH_CONSTANT (unqualified-in-namespace) string("Composer\Autoload\DIRECTORY_SEPARATOR")
0038 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\substr")
0039 SEND_VAR_EX CV2($logicalPathPsr4) 1
0040 T30 = ADD CV5($lastPos) int(1)
0041 SEND_VAL_EX T30 2
0042 V31 = DO_FCALL
0043 T32 = CONCAT T29 V31
0044 ASSIGN CV7($pathEnd) T32
0045 EXT_STMT
0046 T34 = FETCH_OBJ_R THIS string("prefixDirsPsr4")
0047 T35 = FETCH_DIM_R T34 CV6($search)
0048 V36 = FE_RESET_R T35 0061
0049 FE_FETCH_R V36 CV8($dir) 0061
0050 EXT_STMT
0051 INIT_NS_FCALL_BY_NAME 1 string("Composer\Autoload\file_exists")
0052 T37 = CONCAT CV8($dir) CV7($pathEnd)
0053 T38 = ASSIGN CV9($file) T37
0054 SEND_VAL_EX T38 1
0055 V39 = DO_FCALL
0056 JMPZ V39 0060
0057 EXT_STMT
0058 FE_FREE V36
0059 RETURN CV9($file)
0060 JMP 0049
0061 FE_FREE V36
0062 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\strrpos")
0063 SEND_VAR_EX CV4($subPath) 1
0064 SEND_VAL_EX string("\") 2
0065 V40 = DO_FCALL
0066 T41 = ASSIGN CV5($lastPos) V40
0067 T42 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] T41
0068 JMPNZ T42 0022
0069 EXT_STMT
0070 T43 = FETCH_OBJ_R THIS string("fallbackDirsPsr4")
0071 V44 = FE_RESET_R T43 0086
0072 FE_FETCH_R V44 CV8($dir) 0086
0073 EXT_STMT
0074 INIT_NS_FCALL_BY_NAME 1 string("Composer\Autoload\file_exists")
0075 T45 = FETCH_CONSTANT (unqualified-in-namespace) string("Composer\Autoload\DIRECTORY_SEPARATOR")
0076 T46 = CONCAT CV8($dir) T45
0077 T47 = CONCAT T46 CV2($logicalPathPsr4)
0078 T48 = ASSIGN CV9($file) T47
0079 SEND_VAL_EX T48 1
0080 V49 = DO_FCALL
0081 JMPZ V49 0085
0082 EXT_STMT
0083 FE_FREE V44
0084 RETURN CV9($file)
0085 JMP 0072
0086 FE_FREE V44
0087 EXT_STMT
0088 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\strrpos")
0089 SEND_VAR_EX CV0($class) 1
0090 SEND_VAL_EX string("\") 2
0091 V50 = DO_FCALL
0092 T51 = ASSIGN CV10($pos) V50
0093 T52 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] T51
0094 JMPZ T52 0116
0095 EXT_STMT
0096 INIT_NS_FCALL_BY_NAME 3 string("Composer\Autoload\substr")
0097 SEND_VAR_EX CV2($logicalPathPsr4) 1
0098 SEND_VAL_EX int(0) 2
0099 T53 = ADD CV10($pos) int(1)
0100 SEND_VAL_EX T53 3
0101 V54 = DO_FCALL
0102 INIT_NS_FCALL_BY_NAME 3 string("Composer\Autoload\strtr")
0103 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\substr")
0104 SEND_VAR_EX CV2($logicalPathPsr4) 1
0105 T55 = ADD CV10($pos) int(1)
0106 SEND_VAL_EX T55 2
0107 V56 = DO_FCALL
0108 SEND_VAR_NO_REF_EX V56 1
0109 SEND_VAL_EX string("_") 2
0110 T57 = FETCH_CONSTANT (unqualified-in-namespace) string("Composer\Autoload\DIRECTORY_SEPARATOR")
0111 SEND_VAL_EX T57 3
0112 V58 = DO_FCALL
0113 T59 = CONCAT V54 V58
0114 ASSIGN CV11($logicalPathPsr0) T59
0115 JMP 0125
0116 EXT_STMT
0117 INIT_NS_FCALL_BY_NAME 3 string("Composer\Autoload\strtr")
0118 SEND_VAR_EX CV0($class) 1
0119 SEND_VAL_EX string("_") 2
0120 T61 = FETCH_CONSTANT (unqualified-in-namespace) string("Composer\Autoload\DIRECTORY_SEPARATOR")
0121 SEND_VAL_EX T61 3
0122 V62 = DO_FCALL
0123 T63 = CONCAT V62 CV1($ext)
0124 ASSIGN CV11($logicalPathPsr0) T63
0125 EXT_STMT
0126 T65 = FETCH_OBJ_IS THIS string("prefixesPsr0")
0127 T66 = ISSET_ISEMPTY_DIM_OBJ (isset) T65 CV3($first)
0128 JMPZ T66 0162
0129 EXT_STMT
0130 T67 = FETCH_OBJ_R THIS string("prefixesPsr0")
0131 T68 = FETCH_DIM_R T67 CV3($first)
0132 V69 = FE_RESET_R T68 0161
0133 T70 = FE_FETCH_R V69 CV12($dirs) 0161
0134 ASSIGN CV13($prefix) T70
0135 EXT_STMT
0136 INIT_NS_FCALL_BY_NAME 2 string("Composer\Autoload\strpos")
0137 SEND_VAR_EX CV0($class) 1
0138 SEND_VAR_EX CV13($prefix) 2
0139 V72 = DO_FCALL
0140 T73 = IS_IDENTICAL V72 int(0)
0141 JMPZ T73 0160
0142 EXT_STMT
0143 V74 = FE_RESET_R CV12($dirs) 0159
0144 FE_FETCH_R V74 CV8($dir) 0159
0145 EXT_STMT
0146 INIT_NS_FCALL_BY_NAME 1 string("Composer\Autoload\file_exists")
0147 T75 = FETCH_CONSTANT (unqualified-in-namespace) string("Composer\Autoload\DIRECTORY_SEPARATOR")
0148 T76 = CONCAT CV8($dir) T75
0149 T77 = CONCAT T76 CV11($logicalPathPsr0)
0150 T78 = ASSIGN CV9($file) T77
0151 SEND_VAL_EX T78 1
0152 V79 = DO_FCALL
0153 JMPZ V79 0158
0154 EXT_STMT
0155 FE_FREE V74
0156 FE_FREE V69
0157 RETURN CV9($file)
0158 JMP 0144
0159 FE_FREE V74
0160 JMP 0133
0161 FE_FREE V69
0162 EXT_STMT
0163 T80 = FETCH_OBJ_R THIS string("fallbackDirsPsr0")
0164 V81 = FE_RESET_R T80 0179
0165 FE_FETCH_R V81 CV8($dir) 0179
0166 EXT_STMT
0167 INIT_NS_FCALL_BY_NAME 1 string("Composer\Autoload\file_exists")
0168 T82 = FETCH_CONSTANT (unqualified-in-namespace) string("Composer\Autoload\DIRECTORY_SEPARATOR")
0169 T83 = CONCAT CV8($dir) T82
0170 T84 = CONCAT T83 CV11($logicalPathPsr0)
0171 T85 = ASSIGN CV9($file) T84
0172 SEND_VAL_EX T85 1
0173 V86 = DO_FCALL
0174 JMPZ V86 0178
0175 EXT_STMT
0176 FE_FREE V81
0177 RETURN CV9($file)
0178 JMP 0165
0179 FE_FREE V81
0180 EXT_STMT
0181 T87 = FETCH_OBJ_R THIS string("useIncludePath")
0182 T87 = JMPZ_EX T87 0188
0183 INIT_NS_FCALL_BY_NAME 1 string("Composer\Autoload\stream_resolve_include_path")
0184 SEND_VAR_EX CV11($logicalPathPsr0) 1
0185 V88 = DO_FCALL
0186 T89 = ASSIGN CV9($file) V88
0187 T87 = BOOL T89
0188 JMPZ T87 0191
0189 EXT_STMT
0190 RETURN CV9($file)
0191 EXT_STMT
0192 RETURN bool(false)
0193 EXT_STMT
0194 RETURN null
LIVE RANGES:
     29: 0038 - 0043 (tmp/var)
     36: 0049 - 0061 (loop)
     44: 0072 - 0086 (loop)
     54: 0102 - 0113 (tmp/var)
     69: 0133 - 0161 (loop)
     74: 0144 - 0159 (loop)
     81: 0165 - 0179 (loop)

$_main:
     ; (lines=6, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/autoload_static.php:1-981
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 RETURN int(1)

Composer\Autoload\{closure}:
     ; (lines=15, args=0, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/autoload_static.php:973-978
     ; return  [] RANGE[0..0]
0000 BIND_STATIC CV0($loader)
0001 EXT_STMT
0002 T2 = FETCH_STATIC_PROP_R string("prefixLengthsPsr4") string("Composer\Autoload\ComposerStaticInited1dad5bad5e40595560d28332c7af39")
0003 ASSIGN_OBJ CV0($loader) string("prefixLengthsPsr4")
0004 OP_DATA T2
0005 EXT_STMT
0006 T4 = FETCH_STATIC_PROP_R string("prefixDirsPsr4") string("Composer\Autoload\ComposerStaticInited1dad5bad5e40595560d28332c7af39")
0007 ASSIGN_OBJ CV0($loader) string("prefixDirsPsr4")
0008 OP_DATA T4
0009 EXT_STMT
0010 T6 = FETCH_STATIC_PROP_R string("classMap") string("Composer\Autoload\ComposerStaticInited1dad5bad5e40595560d28332c7af39")
0011 ASSIGN_OBJ CV0($loader) string("classMap")
0012 OP_DATA T6
0013 EXT_STMT
0014 RETURN null

Composer\Autoload\ComposerStaticInited1dad5bad5e40595560d28332c7af39::getInitializer:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/composer/autoload_static.php:971-979
     ; return  [] RANGE[0..0]
0000 CV0($loader) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 3 string("Closure") string("bind")
0003 T1 = DECLARE_LAMBDA_FUNCTION string("")
0004 BIND_LEXICAL T1 CV0($loader)
0005 SEND_VAL T1 1
0006 SEND_VAL null 2
0007 SEND_VAL string("Composer\Autoload\ClassLoader") 3
0008 V2 = DO_FCALL
0009 RETURN V2
0010 EXT_STMT
0011 RETURN null
LIVE RANGES:
     1: 0004 - 0005 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpstan/phpstan/bootstrap.php:1-61
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 INIT_NS_FCALL_BY_NAME 1 string("PHPStan\spl_autoload_register")
0006 SEND_VAL_EX array(...) 1
0007 DO_FCALL
0008 RETURN int(1)

PHPStan\PharAutoloader::loadClass:
     ; (lines=148, args=1, vars=3, tmps=51)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpstan/phpstan/bootstrap.php:12-57
     ; return  [] RANGE[0..0]
0000 CV0($class) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 1 string("PHPStan\extension_loaded")
0003 SEND_VAL_EX string("phar") 1
0004 V3 = DO_FCALL
0005 T4 = BOOL_NOT V3
0006 T4 = JMPNZ_EX T4 0011
0007 INIT_NS_FCALL_BY_NAME 1 string("PHPStan\defined")
0008 SEND_VAL_EX string("__PHPSTAN_RUNNING__") 1
0009 V5 = DO_FCALL
0010 T4 = BOOL V5
0011 JMPZ T4 0014
0012 EXT_STMT
0013 RETURN null
0014 EXT_STMT
0015 INIT_NS_FCALL_BY_NAME 2 string("PHPStan\strpos")
0016 SEND_VAR_EX CV0($class) 1
0017 SEND_VAL_EX string("_PHPStan_") 2
0018 V6 = DO_FCALL
0019 T7 = IS_IDENTICAL V6 int(0)
0020 JMPZ T7 0063
0021 EXT_STMT
0022 INIT_NS_FCALL_BY_NAME 3 string("PHPStan\in_array")
0023 SEND_VAL_EX string("phar") 1
0024 INIT_NS_FCALL_BY_NAME 0 string("PHPStan\stream_get_wrappers")
0025 V8 = DO_FCALL
0026 SEND_VAR_NO_REF_EX V8 2
0027 SEND_VAL_EX bool(true) 3
0028 V9 = DO_FCALL
0029 T10 = BOOL_NOT V9
0030 JMPZ T10 0036
0031 EXT_STMT
0032 V11 = NEW 1 string("Exception")
0033 SEND_VAL_EX string("Phar wrapper is not registered. Please review your php.ini settings.") 1
0034 DO_FCALL
0035 THROW V11
0036 EXT_STMT
0037 T13 = FETCH_STATIC_PROP_R string("composerAutoloader") (self) (exception)
0038 T14 = TYPE_CHECK (null) T13
0039 JMPZ T14 0056
0040 EXT_STMT
0041 V16 = INCLUDE_OR_EVAL (require) string("phar:///home/daniel/www/phpbench/phpbench/vendor/phpstan/phpstan/phpstan.phar/vendor/autoload.php")
0042 ASSIGN_STATIC_PROP string("composerAutoloader")
0043 OP_DATA V16
0044 EXT_STMT
0045 INCLUDE_OR_EVAL (require_once) string("phar:///home/daniel/www/phpbench/phpbench/vendor/phpstan/phpstan/phpstan.phar/vendor/clue/block-react/src/functions_include.php")
0046 EXT_STMT
0047 INCLUDE_OR_EVAL (require_once) string("phar:///home/daniel/www/phpbench/phpbench/vendor/phpstan/phpstan/phpstan.phar/vendor/jetbrains/phpstorm-stubs/PhpStormStubsMap.php")
0048 EXT_STMT
0049 INCLUDE_OR_EVAL (require_once) string("phar:///home/daniel/www/phpbench/phpbench/vendor/phpstan/phpstan/phpstan.phar/vendor/react/promise-stream/src/functions_include.php")
0050 EXT_STMT
0051 INCLUDE_OR_EVAL (require_once) string("phar:///home/daniel/www/phpbench/phpbench/vendor/phpstan/phpstan/phpstan.phar/vendor/react/promise-timer/src/functions_include.php")
0052 EXT_STMT
0053 INCLUDE_OR_EVAL (require_once) string("phar:///home/daniel/www/phpbench/phpbench/vendor/phpstan/phpstan/phpstan.phar/vendor/react/promise/src/functions_include.php")
0054 EXT_STMT
0055 INCLUDE_OR_EVAL (require_once) string("phar:///home/daniel/www/phpbench/phpbench/vendor/phpstan/phpstan/phpstan.phar/vendor/ringcentral/psr7/src/functions_include.php")
0056 EXT_STMT
0057 T23 = FETCH_STATIC_PROP_R string("composerAutoloader") (self) (exception)
0058 INIT_METHOD_CALL 1 T23 string("loadClass")
0059 SEND_VAR_EX CV0($class) 1
0060 DO_FCALL
0061 EXT_STMT
0062 RETURN null
0063 EXT_STMT
0064 INIT_NS_FCALL_BY_NAME 2 string("PHPStan\strpos")
0065 SEND_VAR_EX CV0($class) 1
0066 SEND_VAL_EX string("PHPStan\") 2
0067 V25 = DO_FCALL
0068 T26 = IS_NOT_IDENTICAL V25 int(0)
0069 T26 = JMPNZ_EX T26 0076
0070 INIT_NS_FCALL_BY_NAME 2 string("PHPStan\strpos")
0071 SEND_VAR_EX CV0($class) 1
0072 SEND_VAL_EX string("PHPStan\PhpDocParser\") 2
0073 V27 = DO_FCALL
0074 T28 = IS_IDENTICAL V27 int(0)
0075 T26 = BOOL T28
0076 JMPZ T26 0079
0077 EXT_STMT
0078 RETURN null
0079 EXT_STMT
0080 INIT_NS_FCALL_BY_NAME 3 string("PHPStan\in_array")
0081 SEND_VAL_EX string("phar") 1
0082 INIT_NS_FCALL_BY_NAME 0 string("PHPStan\stream_get_wrappers")
0083 V29 = DO_FCALL
0084 SEND_VAR_NO_REF_EX V29 2
0085 SEND_VAL_EX bool(true) 3
0086 V30 = DO_FCALL
0087 T31 = BOOL_NOT V30
0088 JMPZ T31 0094
0089 EXT_STMT
0090 V32 = NEW 1 string("Exception")
0091 SEND_VAL_EX string("Phar wrapper is not registered. Please review your php.ini settings.") 1
0092 DO_FCALL
0093 THROW V32
0094 EXT_STMT
0095 INIT_NS_FCALL_BY_NAME 3 string("PHPStan\str_replace")
0096 SEND_VAL_EX string("\") 1
0097 T34 = FETCH_CONSTANT (unqualified-in-namespace) string("PHPStan\DIRECTORY_SEPARATOR")
0098 SEND_VAL_EX T34 2
0099 SEND_VAR_EX CV0($class) 3
0100 V35 = DO_FCALL
0101 ASSIGN CV1($filename) V35
0102 EXT_STMT
0103 INIT_NS_FCALL_BY_NAME 2 string("PHPStan\strpos")
0104 SEND_VAR_EX CV0($class) 1
0105 SEND_VAL_EX string("PHPStan\BetterReflection\") 2
0106 V37 = DO_FCALL
0107 T38 = IS_IDENTICAL V37 int(0)
0108 JMPZ T38 0123
0109 EXT_STMT
0110 INIT_NS_FCALL_BY_NAME 2 string("PHPStan\substr")
0111 SEND_VAR_EX CV1($filename) 1
0112 INIT_NS_FCALL_BY_NAME 1 string("PHPStan\strlen")
0113 SEND_VAL_EX string("PHPStan\BetterReflection\") 1
0114 V39 = DO_FCALL
0115 SEND_VAR_NO_REF_EX V39 2
0116 V40 = DO_FCALL
0117 ASSIGN CV1($filename) V40
0118 EXT_STMT
0119 T42 = CONCAT string("phar:///home/daniel/www/phpbench/phpbench/vendor/phpstan/phpstan/phpstan.phar/vendor/ondrejmirtes/better-reflection/src/") CV1($filename)
0120 T43 = CONCAT T42 string(".php")
0121 ASSIGN CV2($filepath) T43
0122 JMP 0136
0123 EXT_STMT
0124 INIT_NS_FCALL_BY_NAME 2 string("PHPStan\substr")
0125 SEND_VAR_EX CV1($filename) 1
0126 INIT_NS_FCALL_BY_NAME 1 string("PHPStan\strlen")
0127 SEND_VAL_EX string("PHPStan\") 1
0128 V45 = DO_FCALL
0129 SEND_VAR_NO_REF_EX V45 2
0130 V46 = DO_FCALL
0131 ASSIGN CV1($filename) V46
0132 EXT_STMT
0133 T48 = CONCAT string("phar:///home/daniel/www/phpbench/phpbench/vendor/phpstan/phpstan/phpstan.phar/src/") CV1($filename)
0134 T49 = CONCAT T48 string(".php")
0135 ASSIGN CV2($filepath) T49
0136 EXT_STMT
0137 INIT_NS_FCALL_BY_NAME 1 string("PHPStan\file_exists")
0138 SEND_VAR_EX CV2($filepath) 1
0139 V51 = DO_FCALL
0140 T52 = BOOL_NOT V51
0141 JMPZ T52 0144
0142 EXT_STMT
0143 RETURN null
0144 EXT_STMT
0145 INCLUDE_OR_EVAL (require) CV2($filepath)
0146 EXT_STMT
0147 RETURN null
LIVE RANGES:
     11: 0033 - 0035 (new)
     32: 0091 - 0093 (new)

$_main:
     ; (lines=1640, args=0, vars=0, tmps=394)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1-3036
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 NOP
0012 NOP
0013 NOP
0014 NOP
0015 NOP
0016 NOP
0017 NOP
0018 NOP
0019 NOP
0020 NOP
0021 NOP
0022 NOP
0023 NOP
0024 NOP
0025 NOP
0026 NOP
0027 NOP
0028 NOP
0029 NOP
0030 NOP
0031 NOP
0032 NOP
0033 NOP
0034 NOP
0035 NOP
0036 NOP
0037 NOP
0038 NOP
0039 NOP
0040 NOP
0041 NOP
0042 NOP
0043 NOP
0044 NOP
0045 NOP
0046 NOP
0047 NOP
0048 NOP
0049 NOP
0050 NOP
0051 NOP
0052 NOP
0053 NOP
0054 NOP
0055 NOP
0056 NOP
0057 NOP
0058 NOP
0059 NOP
0060 NOP
0061 NOP
0062 NOP
0063 EXT_STMT
0064 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0065 SEND_VAL_EX string("PHPUnit\Framework\assertArrayHasKey") 1
0066 V0 = DO_FCALL
0067 T1 = BOOL_NOT V0
0068 JMPZ T1 0071
0069 EXT_STMT
0070 DECLARE_FUNCTION string("phpunit\framework\assertarrayhaskey")
0071 EXT_STMT
0072 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0073 SEND_VAL_EX string("PHPUnit\Framework\assertArrayNotHasKey") 1
0074 V2 = DO_FCALL
0075 T3 = BOOL_NOT V2
0076 JMPZ T3 0079
0077 EXT_STMT
0078 DECLARE_FUNCTION string("phpunit\framework\assertarraynothaskey")
0079 EXT_STMT
0080 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0081 SEND_VAL_EX string("PHPUnit\Framework\assertContains") 1
0082 V4 = DO_FCALL
0083 T5 = BOOL_NOT V4
0084 JMPZ T5 0087
0085 EXT_STMT
0086 DECLARE_FUNCTION string("phpunit\framework\assertcontains")
0087 EXT_STMT
0088 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0089 SEND_VAL_EX string("PHPUnit\Framework\assertContainsEquals") 1
0090 V6 = DO_FCALL
0091 T7 = BOOL_NOT V6
0092 JMPZ T7 0095
0093 EXT_STMT
0094 DECLARE_FUNCTION string("phpunit\framework\assertcontainsequals")
0095 EXT_STMT
0096 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0097 SEND_VAL_EX string("PHPUnit\Framework\assertNotContains") 1
0098 V8 = DO_FCALL
0099 T9 = BOOL_NOT V8
0100 JMPZ T9 0103
0101 EXT_STMT
0102 DECLARE_FUNCTION string("phpunit\framework\assertnotcontains")
0103 EXT_STMT
0104 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0105 SEND_VAL_EX string("PHPUnit\Framework\assertNotContainsEquals") 1
0106 V10 = DO_FCALL
0107 T11 = BOOL_NOT V10
0108 JMPZ T11 0111
0109 EXT_STMT
0110 DECLARE_FUNCTION string("phpunit\framework\assertnotcontainsequals")
0111 EXT_STMT
0112 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0113 SEND_VAL_EX string("PHPUnit\Framework\assertContainsOnly") 1
0114 V12 = DO_FCALL
0115 T13 = BOOL_NOT V12
0116 JMPZ T13 0119
0117 EXT_STMT
0118 DECLARE_FUNCTION string("phpunit\framework\assertcontainsonly")
0119 EXT_STMT
0120 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0121 SEND_VAL_EX string("PHPUnit\Framework\assertContainsOnlyInstancesOf") 1
0122 V14 = DO_FCALL
0123 T15 = BOOL_NOT V14
0124 JMPZ T15 0127
0125 EXT_STMT
0126 DECLARE_FUNCTION string("phpunit\framework\assertcontainsonlyinstancesof")
0127 EXT_STMT
0128 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0129 SEND_VAL_EX string("PHPUnit\Framework\assertNotContainsOnly") 1
0130 V16 = DO_FCALL
0131 T17 = BOOL_NOT V16
0132 JMPZ T17 0135
0133 EXT_STMT
0134 DECLARE_FUNCTION string("phpunit\framework\assertnotcontainsonly")
0135 EXT_STMT
0136 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0137 SEND_VAL_EX string("PHPUnit\Framework\assertCount") 1
0138 V18 = DO_FCALL
0139 T19 = BOOL_NOT V18
0140 JMPZ T19 0143
0141 EXT_STMT
0142 DECLARE_FUNCTION string("phpunit\framework\assertcount")
0143 EXT_STMT
0144 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0145 SEND_VAL_EX string("PHPUnit\Framework\assertNotCount") 1
0146 V20 = DO_FCALL
0147 T21 = BOOL_NOT V20
0148 JMPZ T21 0151
0149 EXT_STMT
0150 DECLARE_FUNCTION string("phpunit\framework\assertnotcount")
0151 EXT_STMT
0152 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0153 SEND_VAL_EX string("PHPUnit\Framework\assertEquals") 1
0154 V22 = DO_FCALL
0155 T23 = BOOL_NOT V22
0156 JMPZ T23 0159
0157 EXT_STMT
0158 DECLARE_FUNCTION string("phpunit\framework\assertequals")
0159 EXT_STMT
0160 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0161 SEND_VAL_EX string("PHPUnit\Framework\assertEqualsCanonicalizing") 1
0162 V24 = DO_FCALL
0163 T25 = BOOL_NOT V24
0164 JMPZ T25 0167
0165 EXT_STMT
0166 DECLARE_FUNCTION string("phpunit\framework\assertequalscanonicalizing")
0167 EXT_STMT
0168 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0169 SEND_VAL_EX string("PHPUnit\Framework\assertEqualsIgnoringCase") 1
0170 V26 = DO_FCALL
0171 T27 = BOOL_NOT V26
0172 JMPZ T27 0175
0173 EXT_STMT
0174 DECLARE_FUNCTION string("phpunit\framework\assertequalsignoringcase")
0175 EXT_STMT
0176 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0177 SEND_VAL_EX string("PHPUnit\Framework\assertEqualsWithDelta") 1
0178 V28 = DO_FCALL
0179 T29 = BOOL_NOT V28
0180 JMPZ T29 0183
0181 EXT_STMT
0182 DECLARE_FUNCTION string("phpunit\framework\assertequalswithdelta")
0183 EXT_STMT
0184 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0185 SEND_VAL_EX string("PHPUnit\Framework\assertNotEquals") 1
0186 V30 = DO_FCALL
0187 T31 = BOOL_NOT V30
0188 JMPZ T31 0191
0189 EXT_STMT
0190 DECLARE_FUNCTION string("phpunit\framework\assertnotequals")
0191 EXT_STMT
0192 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0193 SEND_VAL_EX string("PHPUnit\Framework\assertNotEqualsCanonicalizing") 1
0194 V32 = DO_FCALL
0195 T33 = BOOL_NOT V32
0196 JMPZ T33 0199
0197 EXT_STMT
0198 DECLARE_FUNCTION string("phpunit\framework\assertnotequalscanonicalizing")
0199 EXT_STMT
0200 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0201 SEND_VAL_EX string("PHPUnit\Framework\assertNotEqualsIgnoringCase") 1
0202 V34 = DO_FCALL
0203 T35 = BOOL_NOT V34
0204 JMPZ T35 0207
0205 EXT_STMT
0206 DECLARE_FUNCTION string("phpunit\framework\assertnotequalsignoringcase")
0207 EXT_STMT
0208 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0209 SEND_VAL_EX string("PHPUnit\Framework\assertNotEqualsWithDelta") 1
0210 V36 = DO_FCALL
0211 T37 = BOOL_NOT V36
0212 JMPZ T37 0215
0213 EXT_STMT
0214 DECLARE_FUNCTION string("phpunit\framework\assertnotequalswithdelta")
0215 EXT_STMT
0216 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0217 SEND_VAL_EX string("PHPUnit\Framework\assertObjectEquals") 1
0218 V38 = DO_FCALL
0219 T39 = BOOL_NOT V38
0220 JMPZ T39 0223
0221 EXT_STMT
0222 DECLARE_FUNCTION string("phpunit\framework\assertobjectequals")
0223 EXT_STMT
0224 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0225 SEND_VAL_EX string("PHPUnit\Framework\assertEmpty") 1
0226 V40 = DO_FCALL
0227 T41 = BOOL_NOT V40
0228 JMPZ T41 0231
0229 EXT_STMT
0230 DECLARE_FUNCTION string("phpunit\framework\assertempty")
0231 EXT_STMT
0232 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0233 SEND_VAL_EX string("PHPUnit\Framework\assertNotEmpty") 1
0234 V42 = DO_FCALL
0235 T43 = BOOL_NOT V42
0236 JMPZ T43 0239
0237 EXT_STMT
0238 DECLARE_FUNCTION string("phpunit\framework\assertnotempty")
0239 EXT_STMT
0240 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0241 SEND_VAL_EX string("PHPUnit\Framework\assertGreaterThan") 1
0242 V44 = DO_FCALL
0243 T45 = BOOL_NOT V44
0244 JMPZ T45 0247
0245 EXT_STMT
0246 DECLARE_FUNCTION string("phpunit\framework\assertgreaterthan")
0247 EXT_STMT
0248 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0249 SEND_VAL_EX string("PHPUnit\Framework\assertGreaterThanOrEqual") 1
0250 V46 = DO_FCALL
0251 T47 = BOOL_NOT V46
0252 JMPZ T47 0255
0253 EXT_STMT
0254 DECLARE_FUNCTION string("phpunit\framework\assertgreaterthanorequal")
0255 EXT_STMT
0256 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0257 SEND_VAL_EX string("PHPUnit\Framework\assertLessThan") 1
0258 V48 = DO_FCALL
0259 T49 = BOOL_NOT V48
0260 JMPZ T49 0263
0261 EXT_STMT
0262 DECLARE_FUNCTION string("phpunit\framework\assertlessthan")
0263 EXT_STMT
0264 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0265 SEND_VAL_EX string("PHPUnit\Framework\assertLessThanOrEqual") 1
0266 V50 = DO_FCALL
0267 T51 = BOOL_NOT V50
0268 JMPZ T51 0271
0269 EXT_STMT
0270 DECLARE_FUNCTION string("phpunit\framework\assertlessthanorequal")
0271 EXT_STMT
0272 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0273 SEND_VAL_EX string("PHPUnit\Framework\assertFileEquals") 1
0274 V52 = DO_FCALL
0275 T53 = BOOL_NOT V52
0276 JMPZ T53 0279
0277 EXT_STMT
0278 DECLARE_FUNCTION string("phpunit\framework\assertfileequals")
0279 EXT_STMT
0280 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0281 SEND_VAL_EX string("PHPUnit\Framework\assertFileEqualsCanonicalizing") 1
0282 V54 = DO_FCALL
0283 T55 = BOOL_NOT V54
0284 JMPZ T55 0287
0285 EXT_STMT
0286 DECLARE_FUNCTION string("phpunit\framework\assertfileequalscanonicalizing")
0287 EXT_STMT
0288 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0289 SEND_VAL_EX string("PHPUnit\Framework\assertFileEqualsIgnoringCase") 1
0290 V56 = DO_FCALL
0291 T57 = BOOL_NOT V56
0292 JMPZ T57 0295
0293 EXT_STMT
0294 DECLARE_FUNCTION string("phpunit\framework\assertfileequalsignoringcase")
0295 EXT_STMT
0296 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0297 SEND_VAL_EX string("PHPUnit\Framework\assertFileNotEquals") 1
0298 V58 = DO_FCALL
0299 T59 = BOOL_NOT V58
0300 JMPZ T59 0303
0301 EXT_STMT
0302 DECLARE_FUNCTION string("phpunit\framework\assertfilenotequals")
0303 EXT_STMT
0304 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0305 SEND_VAL_EX string("PHPUnit\Framework\assertFileNotEqualsCanonicalizing") 1
0306 V60 = DO_FCALL
0307 T61 = BOOL_NOT V60
0308 JMPZ T61 0311
0309 EXT_STMT
0310 DECLARE_FUNCTION string("phpunit\framework\assertfilenotequalscanonicalizing")
0311 EXT_STMT
0312 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0313 SEND_VAL_EX string("PHPUnit\Framework\assertFileNotEqualsIgnoringCase") 1
0314 V62 = DO_FCALL
0315 T63 = BOOL_NOT V62
0316 JMPZ T63 0319
0317 EXT_STMT
0318 DECLARE_FUNCTION string("phpunit\framework\assertfilenotequalsignoringcase")
0319 EXT_STMT
0320 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0321 SEND_VAL_EX string("PHPUnit\Framework\assertStringEqualsFile") 1
0322 V64 = DO_FCALL
0323 T65 = BOOL_NOT V64
0324 JMPZ T65 0327
0325 EXT_STMT
0326 DECLARE_FUNCTION string("phpunit\framework\assertstringequalsfile")
0327 EXT_STMT
0328 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0329 SEND_VAL_EX string("PHPUnit\Framework\assertStringEqualsFileCanonicalizing") 1
0330 V66 = DO_FCALL
0331 T67 = BOOL_NOT V66
0332 JMPZ T67 0335
0333 EXT_STMT
0334 DECLARE_FUNCTION string("phpunit\framework\assertstringequalsfilecanonicalizing")
0335 EXT_STMT
0336 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0337 SEND_VAL_EX string("PHPUnit\Framework\assertStringEqualsFileIgnoringCase") 1
0338 V68 = DO_FCALL
0339 T69 = BOOL_NOT V68
0340 JMPZ T69 0343
0341 EXT_STMT
0342 DECLARE_FUNCTION string("phpunit\framework\assertstringequalsfileignoringcase")
0343 EXT_STMT
0344 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0345 SEND_VAL_EX string("PHPUnit\Framework\assertStringNotEqualsFile") 1
0346 V70 = DO_FCALL
0347 T71 = BOOL_NOT V70
0348 JMPZ T71 0351
0349 EXT_STMT
0350 DECLARE_FUNCTION string("phpunit\framework\assertstringnotequalsfile")
0351 EXT_STMT
0352 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0353 SEND_VAL_EX string("PHPUnit\Framework\assertStringNotEqualsFileCanonicalizing") 1
0354 V72 = DO_FCALL
0355 T73 = BOOL_NOT V72
0356 JMPZ T73 0359
0357 EXT_STMT
0358 DECLARE_FUNCTION string("phpunit\framework\assertstringnotequalsfilecanonicalizing")
0359 EXT_STMT
0360 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0361 SEND_VAL_EX string("PHPUnit\Framework\assertStringNotEqualsFileIgnoringCase") 1
0362 V74 = DO_FCALL
0363 T75 = BOOL_NOT V74
0364 JMPZ T75 0367
0365 EXT_STMT
0366 DECLARE_FUNCTION string("phpunit\framework\assertstringnotequalsfileignoringcase")
0367 EXT_STMT
0368 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0369 SEND_VAL_EX string("PHPUnit\Framework\assertIsReadable") 1
0370 V76 = DO_FCALL
0371 T77 = BOOL_NOT V76
0372 JMPZ T77 0375
0373 EXT_STMT
0374 DECLARE_FUNCTION string("phpunit\framework\assertisreadable")
0375 EXT_STMT
0376 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0377 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotReadable") 1
0378 V78 = DO_FCALL
0379 T79 = BOOL_NOT V78
0380 JMPZ T79 0383
0381 EXT_STMT
0382 DECLARE_FUNCTION string("phpunit\framework\assertisnotreadable")
0383 EXT_STMT
0384 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0385 SEND_VAL_EX string("PHPUnit\Framework\assertNotIsReadable") 1
0386 V80 = DO_FCALL
0387 T81 = BOOL_NOT V80
0388 JMPZ T81 0391
0389 EXT_STMT
0390 DECLARE_FUNCTION string("phpunit\framework\assertnotisreadable")
0391 EXT_STMT
0392 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0393 SEND_VAL_EX string("PHPUnit\Framework\assertIsWritable") 1
0394 V82 = DO_FCALL
0395 T83 = BOOL_NOT V82
0396 JMPZ T83 0399
0397 EXT_STMT
0398 DECLARE_FUNCTION string("phpunit\framework\assertiswritable")
0399 EXT_STMT
0400 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0401 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotWritable") 1
0402 V84 = DO_FCALL
0403 T85 = BOOL_NOT V84
0404 JMPZ T85 0407
0405 EXT_STMT
0406 DECLARE_FUNCTION string("phpunit\framework\assertisnotwritable")
0407 EXT_STMT
0408 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0409 SEND_VAL_EX string("PHPUnit\Framework\assertNotIsWritable") 1
0410 V86 = DO_FCALL
0411 T87 = BOOL_NOT V86
0412 JMPZ T87 0415
0413 EXT_STMT
0414 DECLARE_FUNCTION string("phpunit\framework\assertnotiswritable")
0415 EXT_STMT
0416 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0417 SEND_VAL_EX string("PHPUnit\Framework\assertDirectoryExists") 1
0418 V88 = DO_FCALL
0419 T89 = BOOL_NOT V88
0420 JMPZ T89 0423
0421 EXT_STMT
0422 DECLARE_FUNCTION string("phpunit\framework\assertdirectoryexists")
0423 EXT_STMT
0424 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0425 SEND_VAL_EX string("PHPUnit\Framework\assertDirectoryDoesNotExist") 1
0426 V90 = DO_FCALL
0427 T91 = BOOL_NOT V90
0428 JMPZ T91 0431
0429 EXT_STMT
0430 DECLARE_FUNCTION string("phpunit\framework\assertdirectorydoesnotexist")
0431 EXT_STMT
0432 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0433 SEND_VAL_EX string("PHPUnit\Framework\assertDirectoryNotExists") 1
0434 V92 = DO_FCALL
0435 T93 = BOOL_NOT V92
0436 JMPZ T93 0439
0437 EXT_STMT
0438 DECLARE_FUNCTION string("phpunit\framework\assertdirectorynotexists")
0439 EXT_STMT
0440 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0441 SEND_VAL_EX string("PHPUnit\Framework\assertDirectoryIsReadable") 1
0442 V94 = DO_FCALL
0443 T95 = BOOL_NOT V94
0444 JMPZ T95 0447
0445 EXT_STMT
0446 DECLARE_FUNCTION string("phpunit\framework\assertdirectoryisreadable")
0447 EXT_STMT
0448 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0449 SEND_VAL_EX string("PHPUnit\Framework\assertDirectoryIsNotReadable") 1
0450 V96 = DO_FCALL
0451 T97 = BOOL_NOT V96
0452 JMPZ T97 0455
0453 EXT_STMT
0454 DECLARE_FUNCTION string("phpunit\framework\assertdirectoryisnotreadable")
0455 EXT_STMT
0456 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0457 SEND_VAL_EX string("PHPUnit\Framework\assertDirectoryNotIsReadable") 1
0458 V98 = DO_FCALL
0459 T99 = BOOL_NOT V98
0460 JMPZ T99 0463
0461 EXT_STMT
0462 DECLARE_FUNCTION string("phpunit\framework\assertdirectorynotisreadable")
0463 EXT_STMT
0464 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0465 SEND_VAL_EX string("PHPUnit\Framework\assertDirectoryIsWritable") 1
0466 V100 = DO_FCALL
0467 T101 = BOOL_NOT V100
0468 JMPZ T101 0471
0469 EXT_STMT
0470 DECLARE_FUNCTION string("phpunit\framework\assertdirectoryiswritable")
0471 EXT_STMT
0472 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0473 SEND_VAL_EX string("PHPUnit\Framework\assertDirectoryIsNotWritable") 1
0474 V102 = DO_FCALL
0475 T103 = BOOL_NOT V102
0476 JMPZ T103 0479
0477 EXT_STMT
0478 DECLARE_FUNCTION string("phpunit\framework\assertdirectoryisnotwritable")
0479 EXT_STMT
0480 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0481 SEND_VAL_EX string("PHPUnit\Framework\assertDirectoryNotIsWritable") 1
0482 V104 = DO_FCALL
0483 T105 = BOOL_NOT V104
0484 JMPZ T105 0487
0485 EXT_STMT
0486 DECLARE_FUNCTION string("phpunit\framework\assertdirectorynotiswritable")
0487 EXT_STMT
0488 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0489 SEND_VAL_EX string("PHPUnit\Framework\assertFileExists") 1
0490 V106 = DO_FCALL
0491 T107 = BOOL_NOT V106
0492 JMPZ T107 0495
0493 EXT_STMT
0494 DECLARE_FUNCTION string("phpunit\framework\assertfileexists")
0495 EXT_STMT
0496 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0497 SEND_VAL_EX string("PHPUnit\Framework\assertFileDoesNotExist") 1
0498 V108 = DO_FCALL
0499 T109 = BOOL_NOT V108
0500 JMPZ T109 0503
0501 EXT_STMT
0502 DECLARE_FUNCTION string("phpunit\framework\assertfiledoesnotexist")
0503 EXT_STMT
0504 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0505 SEND_VAL_EX string("PHPUnit\Framework\assertFileNotExists") 1
0506 V110 = DO_FCALL
0507 T111 = BOOL_NOT V110
0508 JMPZ T111 0511
0509 EXT_STMT
0510 DECLARE_FUNCTION string("phpunit\framework\assertfilenotexists")
0511 EXT_STMT
0512 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0513 SEND_VAL_EX string("PHPUnit\Framework\assertFileIsReadable") 1
0514 V112 = DO_FCALL
0515 T113 = BOOL_NOT V112
0516 JMPZ T113 0519
0517 EXT_STMT
0518 DECLARE_FUNCTION string("phpunit\framework\assertfileisreadable")
0519 EXT_STMT
0520 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0521 SEND_VAL_EX string("PHPUnit\Framework\assertFileIsNotReadable") 1
0522 V114 = DO_FCALL
0523 T115 = BOOL_NOT V114
0524 JMPZ T115 0527
0525 EXT_STMT
0526 DECLARE_FUNCTION string("phpunit\framework\assertfileisnotreadable")
0527 EXT_STMT
0528 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0529 SEND_VAL_EX string("PHPUnit\Framework\assertFileNotIsReadable") 1
0530 V116 = DO_FCALL
0531 T117 = BOOL_NOT V116
0532 JMPZ T117 0535
0533 EXT_STMT
0534 DECLARE_FUNCTION string("phpunit\framework\assertfilenotisreadable")
0535 EXT_STMT
0536 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0537 SEND_VAL_EX string("PHPUnit\Framework\assertFileIsWritable") 1
0538 V118 = DO_FCALL
0539 T119 = BOOL_NOT V118
0540 JMPZ T119 0543
0541 EXT_STMT
0542 DECLARE_FUNCTION string("phpunit\framework\assertfileiswritable")
0543 EXT_STMT
0544 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0545 SEND_VAL_EX string("PHPUnit\Framework\assertFileIsNotWritable") 1
0546 V120 = DO_FCALL
0547 T121 = BOOL_NOT V120
0548 JMPZ T121 0551
0549 EXT_STMT
0550 DECLARE_FUNCTION string("phpunit\framework\assertfileisnotwritable")
0551 EXT_STMT
0552 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0553 SEND_VAL_EX string("PHPUnit\Framework\assertFileNotIsWritable") 1
0554 V122 = DO_FCALL
0555 T123 = BOOL_NOT V122
0556 JMPZ T123 0559
0557 EXT_STMT
0558 DECLARE_FUNCTION string("phpunit\framework\assertfilenotiswritable")
0559 EXT_STMT
0560 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0561 SEND_VAL_EX string("PHPUnit\Framework\assertTrue") 1
0562 V124 = DO_FCALL
0563 T125 = BOOL_NOT V124
0564 JMPZ T125 0567
0565 EXT_STMT
0566 DECLARE_FUNCTION string("phpunit\framework\asserttrue")
0567 EXT_STMT
0568 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0569 SEND_VAL_EX string("PHPUnit\Framework\assertNotTrue") 1
0570 V126 = DO_FCALL
0571 T127 = BOOL_NOT V126
0572 JMPZ T127 0575
0573 EXT_STMT
0574 DECLARE_FUNCTION string("phpunit\framework\assertnottrue")
0575 EXT_STMT
0576 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0577 SEND_VAL_EX string("PHPUnit\Framework\assertFalse") 1
0578 V128 = DO_FCALL
0579 T129 = BOOL_NOT V128
0580 JMPZ T129 0583
0581 EXT_STMT
0582 DECLARE_FUNCTION string("phpunit\framework\assertfalse")
0583 EXT_STMT
0584 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0585 SEND_VAL_EX string("PHPUnit\Framework\assertNotFalse") 1
0586 V130 = DO_FCALL
0587 T131 = BOOL_NOT V130
0588 JMPZ T131 0591
0589 EXT_STMT
0590 DECLARE_FUNCTION string("phpunit\framework\assertnotfalse")
0591 EXT_STMT
0592 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0593 SEND_VAL_EX string("PHPUnit\Framework\assertNull") 1
0594 V132 = DO_FCALL
0595 T133 = BOOL_NOT V132
0596 JMPZ T133 0599
0597 EXT_STMT
0598 DECLARE_FUNCTION string("phpunit\framework\assertnull")
0599 EXT_STMT
0600 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0601 SEND_VAL_EX string("PHPUnit\Framework\assertNotNull") 1
0602 V134 = DO_FCALL
0603 T135 = BOOL_NOT V134
0604 JMPZ T135 0607
0605 EXT_STMT
0606 DECLARE_FUNCTION string("phpunit\framework\assertnotnull")
0607 EXT_STMT
0608 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0609 SEND_VAL_EX string("PHPUnit\Framework\assertFinite") 1
0610 V136 = DO_FCALL
0611 T137 = BOOL_NOT V136
0612 JMPZ T137 0615
0613 EXT_STMT
0614 DECLARE_FUNCTION string("phpunit\framework\assertfinite")
0615 EXT_STMT
0616 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0617 SEND_VAL_EX string("PHPUnit\Framework\assertInfinite") 1
0618 V138 = DO_FCALL
0619 T139 = BOOL_NOT V138
0620 JMPZ T139 0623
0621 EXT_STMT
0622 DECLARE_FUNCTION string("phpunit\framework\assertinfinite")
0623 EXT_STMT
0624 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0625 SEND_VAL_EX string("PHPUnit\Framework\assertNan") 1
0626 V140 = DO_FCALL
0627 T141 = BOOL_NOT V140
0628 JMPZ T141 0631
0629 EXT_STMT
0630 DECLARE_FUNCTION string("phpunit\framework\assertnan")
0631 EXT_STMT
0632 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0633 SEND_VAL_EX string("PHPUnit\Framework\assertClassHasAttribute") 1
0634 V142 = DO_FCALL
0635 T143 = BOOL_NOT V142
0636 JMPZ T143 0639
0637 EXT_STMT
0638 DECLARE_FUNCTION string("phpunit\framework\assertclasshasattribute")
0639 EXT_STMT
0640 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0641 SEND_VAL_EX string("PHPUnit\Framework\assertClassNotHasAttribute") 1
0642 V144 = DO_FCALL
0643 T145 = BOOL_NOT V144
0644 JMPZ T145 0647
0645 EXT_STMT
0646 DECLARE_FUNCTION string("phpunit\framework\assertclassnothasattribute")
0647 EXT_STMT
0648 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0649 SEND_VAL_EX string("PHPUnit\Framework\assertClassHasStaticAttribute") 1
0650 V146 = DO_FCALL
0651 T147 = BOOL_NOT V146
0652 JMPZ T147 0655
0653 EXT_STMT
0654 DECLARE_FUNCTION string("phpunit\framework\assertclasshasstaticattribute")
0655 EXT_STMT
0656 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0657 SEND_VAL_EX string("PHPUnit\Framework\assertClassNotHasStaticAttribute") 1
0658 V148 = DO_FCALL
0659 T149 = BOOL_NOT V148
0660 JMPZ T149 0663
0661 EXT_STMT
0662 DECLARE_FUNCTION string("phpunit\framework\assertclassnothasstaticattribute")
0663 EXT_STMT
0664 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0665 SEND_VAL_EX string("PHPUnit\Framework\assertObjectHasAttribute") 1
0666 V150 = DO_FCALL
0667 T151 = BOOL_NOT V150
0668 JMPZ T151 0671
0669 EXT_STMT
0670 DECLARE_FUNCTION string("phpunit\framework\assertobjecthasattribute")
0671 EXT_STMT
0672 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0673 SEND_VAL_EX string("PHPUnit\Framework\assertObjectNotHasAttribute") 1
0674 V152 = DO_FCALL
0675 T153 = BOOL_NOT V152
0676 JMPZ T153 0679
0677 EXT_STMT
0678 DECLARE_FUNCTION string("phpunit\framework\assertobjectnothasattribute")
0679 EXT_STMT
0680 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0681 SEND_VAL_EX string("PHPUnit\Framework\assertSame") 1
0682 V154 = DO_FCALL
0683 T155 = BOOL_NOT V154
0684 JMPZ T155 0687
0685 EXT_STMT
0686 DECLARE_FUNCTION string("phpunit\framework\assertsame")
0687 EXT_STMT
0688 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0689 SEND_VAL_EX string("PHPUnit\Framework\assertNotSame") 1
0690 V156 = DO_FCALL
0691 T157 = BOOL_NOT V156
0692 JMPZ T157 0695
0693 EXT_STMT
0694 DECLARE_FUNCTION string("phpunit\framework\assertnotsame")
0695 EXT_STMT
0696 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0697 SEND_VAL_EX string("PHPUnit\Framework\assertInstanceOf") 1
0698 V158 = DO_FCALL
0699 T159 = BOOL_NOT V158
0700 JMPZ T159 0703
0701 EXT_STMT
0702 DECLARE_FUNCTION string("phpunit\framework\assertinstanceof")
0703 EXT_STMT
0704 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0705 SEND_VAL_EX string("PHPUnit\Framework\assertNotInstanceOf") 1
0706 V160 = DO_FCALL
0707 T161 = BOOL_NOT V160
0708 JMPZ T161 0711
0709 EXT_STMT
0710 DECLARE_FUNCTION string("phpunit\framework\assertnotinstanceof")
0711 EXT_STMT
0712 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0713 SEND_VAL_EX string("PHPUnit\Framework\assertIsArray") 1
0714 V162 = DO_FCALL
0715 T163 = BOOL_NOT V162
0716 JMPZ T163 0719
0717 EXT_STMT
0718 DECLARE_FUNCTION string("phpunit\framework\assertisarray")
0719 EXT_STMT
0720 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0721 SEND_VAL_EX string("PHPUnit\Framework\assertIsBool") 1
0722 V164 = DO_FCALL
0723 T165 = BOOL_NOT V164
0724 JMPZ T165 0727
0725 EXT_STMT
0726 DECLARE_FUNCTION string("phpunit\framework\assertisbool")
0727 EXT_STMT
0728 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0729 SEND_VAL_EX string("PHPUnit\Framework\assertIsFloat") 1
0730 V166 = DO_FCALL
0731 T167 = BOOL_NOT V166
0732 JMPZ T167 0735
0733 EXT_STMT
0734 DECLARE_FUNCTION string("phpunit\framework\assertisfloat")
0735 EXT_STMT
0736 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0737 SEND_VAL_EX string("PHPUnit\Framework\assertIsInt") 1
0738 V168 = DO_FCALL
0739 T169 = BOOL_NOT V168
0740 JMPZ T169 0743
0741 EXT_STMT
0742 DECLARE_FUNCTION string("phpunit\framework\assertisint")
0743 EXT_STMT
0744 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0745 SEND_VAL_EX string("PHPUnit\Framework\assertIsNumeric") 1
0746 V170 = DO_FCALL
0747 T171 = BOOL_NOT V170
0748 JMPZ T171 0751
0749 EXT_STMT
0750 DECLARE_FUNCTION string("phpunit\framework\assertisnumeric")
0751 EXT_STMT
0752 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0753 SEND_VAL_EX string("PHPUnit\Framework\assertIsObject") 1
0754 V172 = DO_FCALL
0755 T173 = BOOL_NOT V172
0756 JMPZ T173 0759
0757 EXT_STMT
0758 DECLARE_FUNCTION string("phpunit\framework\assertisobject")
0759 EXT_STMT
0760 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0761 SEND_VAL_EX string("PHPUnit\Framework\assertIsResource") 1
0762 V174 = DO_FCALL
0763 T175 = BOOL_NOT V174
0764 JMPZ T175 0767
0765 EXT_STMT
0766 DECLARE_FUNCTION string("phpunit\framework\assertisresource")
0767 EXT_STMT
0768 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0769 SEND_VAL_EX string("PHPUnit\Framework\assertIsClosedResource") 1
0770 V176 = DO_FCALL
0771 T177 = BOOL_NOT V176
0772 JMPZ T177 0775
0773 EXT_STMT
0774 DECLARE_FUNCTION string("phpunit\framework\assertisclosedresource")
0775 EXT_STMT
0776 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0777 SEND_VAL_EX string("PHPUnit\Framework\assertIsString") 1
0778 V178 = DO_FCALL
0779 T179 = BOOL_NOT V178
0780 JMPZ T179 0783
0781 EXT_STMT
0782 DECLARE_FUNCTION string("phpunit\framework\assertisstring")
0783 EXT_STMT
0784 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0785 SEND_VAL_EX string("PHPUnit\Framework\assertIsScalar") 1
0786 V180 = DO_FCALL
0787 T181 = BOOL_NOT V180
0788 JMPZ T181 0791
0789 EXT_STMT
0790 DECLARE_FUNCTION string("phpunit\framework\assertisscalar")
0791 EXT_STMT
0792 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0793 SEND_VAL_EX string("PHPUnit\Framework\assertIsCallable") 1
0794 V182 = DO_FCALL
0795 T183 = BOOL_NOT V182
0796 JMPZ T183 0799
0797 EXT_STMT
0798 DECLARE_FUNCTION string("phpunit\framework\assertiscallable")
0799 EXT_STMT
0800 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0801 SEND_VAL_EX string("PHPUnit\Framework\assertIsIterable") 1
0802 V184 = DO_FCALL
0803 T185 = BOOL_NOT V184
0804 JMPZ T185 0807
0805 EXT_STMT
0806 DECLARE_FUNCTION string("phpunit\framework\assertisiterable")
0807 EXT_STMT
0808 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0809 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotArray") 1
0810 V186 = DO_FCALL
0811 T187 = BOOL_NOT V186
0812 JMPZ T187 0815
0813 EXT_STMT
0814 DECLARE_FUNCTION string("phpunit\framework\assertisnotarray")
0815 EXT_STMT
0816 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0817 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotBool") 1
0818 V188 = DO_FCALL
0819 T189 = BOOL_NOT V188
0820 JMPZ T189 0823
0821 EXT_STMT
0822 DECLARE_FUNCTION string("phpunit\framework\assertisnotbool")
0823 EXT_STMT
0824 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0825 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotFloat") 1
0826 V190 = DO_FCALL
0827 T191 = BOOL_NOT V190
0828 JMPZ T191 0831
0829 EXT_STMT
0830 DECLARE_FUNCTION string("phpunit\framework\assertisnotfloat")
0831 EXT_STMT
0832 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0833 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotInt") 1
0834 V192 = DO_FCALL
0835 T193 = BOOL_NOT V192
0836 JMPZ T193 0839
0837 EXT_STMT
0838 DECLARE_FUNCTION string("phpunit\framework\assertisnotint")
0839 EXT_STMT
0840 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0841 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotNumeric") 1
0842 V194 = DO_FCALL
0843 T195 = BOOL_NOT V194
0844 JMPZ T195 0847
0845 EXT_STMT
0846 DECLARE_FUNCTION string("phpunit\framework\assertisnotnumeric")
0847 EXT_STMT
0848 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0849 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotObject") 1
0850 V196 = DO_FCALL
0851 T197 = BOOL_NOT V196
0852 JMPZ T197 0855
0853 EXT_STMT
0854 DECLARE_FUNCTION string("phpunit\framework\assertisnotobject")
0855 EXT_STMT
0856 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0857 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotResource") 1
0858 V198 = DO_FCALL
0859 T199 = BOOL_NOT V198
0860 JMPZ T199 0863
0861 EXT_STMT
0862 DECLARE_FUNCTION string("phpunit\framework\assertisnotresource")
0863 EXT_STMT
0864 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0865 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotClosedResource") 1
0866 V200 = DO_FCALL
0867 T201 = BOOL_NOT V200
0868 JMPZ T201 0871
0869 EXT_STMT
0870 DECLARE_FUNCTION string("phpunit\framework\assertisnotclosedresource")
0871 EXT_STMT
0872 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0873 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotString") 1
0874 V202 = DO_FCALL
0875 T203 = BOOL_NOT V202
0876 JMPZ T203 0879
0877 EXT_STMT
0878 DECLARE_FUNCTION string("phpunit\framework\assertisnotstring")
0879 EXT_STMT
0880 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0881 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotScalar") 1
0882 V204 = DO_FCALL
0883 T205 = BOOL_NOT V204
0884 JMPZ T205 0887
0885 EXT_STMT
0886 DECLARE_FUNCTION string("phpunit\framework\assertisnotscalar")
0887 EXT_STMT
0888 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0889 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotCallable") 1
0890 V206 = DO_FCALL
0891 T207 = BOOL_NOT V206
0892 JMPZ T207 0895
0893 EXT_STMT
0894 DECLARE_FUNCTION string("phpunit\framework\assertisnotcallable")
0895 EXT_STMT
0896 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0897 SEND_VAL_EX string("PHPUnit\Framework\assertIsNotIterable") 1
0898 V208 = DO_FCALL
0899 T209 = BOOL_NOT V208
0900 JMPZ T209 0903
0901 EXT_STMT
0902 DECLARE_FUNCTION string("phpunit\framework\assertisnotiterable")
0903 EXT_STMT
0904 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0905 SEND_VAL_EX string("PHPUnit\Framework\assertMatchesRegularExpression") 1
0906 V210 = DO_FCALL
0907 T211 = BOOL_NOT V210
0908 JMPZ T211 0911
0909 EXT_STMT
0910 DECLARE_FUNCTION string("phpunit\framework\assertmatchesregularexpression")
0911 EXT_STMT
0912 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0913 SEND_VAL_EX string("PHPUnit\Framework\assertRegExp") 1
0914 V212 = DO_FCALL
0915 T213 = BOOL_NOT V212
0916 JMPZ T213 0919
0917 EXT_STMT
0918 DECLARE_FUNCTION string("phpunit\framework\assertregexp")
0919 EXT_STMT
0920 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0921 SEND_VAL_EX string("PHPUnit\Framework\assertDoesNotMatchRegularExpression") 1
0922 V214 = DO_FCALL
0923 T215 = BOOL_NOT V214
0924 JMPZ T215 0927
0925 EXT_STMT
0926 DECLARE_FUNCTION string("phpunit\framework\assertdoesnotmatchregularexpression")
0927 EXT_STMT
0928 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0929 SEND_VAL_EX string("PHPUnit\Framework\assertNotRegExp") 1
0930 V216 = DO_FCALL
0931 T217 = BOOL_NOT V216
0932 JMPZ T217 0935
0933 EXT_STMT
0934 DECLARE_FUNCTION string("phpunit\framework\assertnotregexp")
0935 EXT_STMT
0936 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0937 SEND_VAL_EX string("PHPUnit\Framework\assertSameSize") 1
0938 V218 = DO_FCALL
0939 T219 = BOOL_NOT V218
0940 JMPZ T219 0943
0941 EXT_STMT
0942 DECLARE_FUNCTION string("phpunit\framework\assertsamesize")
0943 EXT_STMT
0944 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0945 SEND_VAL_EX string("PHPUnit\Framework\assertNotSameSize") 1
0946 V220 = DO_FCALL
0947 T221 = BOOL_NOT V220
0948 JMPZ T221 0951
0949 EXT_STMT
0950 DECLARE_FUNCTION string("phpunit\framework\assertnotsamesize")
0951 EXT_STMT
0952 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0953 SEND_VAL_EX string("PHPUnit\Framework\assertStringMatchesFormat") 1
0954 V222 = DO_FCALL
0955 T223 = BOOL_NOT V222
0956 JMPZ T223 0959
0957 EXT_STMT
0958 DECLARE_FUNCTION string("phpunit\framework\assertstringmatchesformat")
0959 EXT_STMT
0960 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0961 SEND_VAL_EX string("PHPUnit\Framework\assertStringNotMatchesFormat") 1
0962 V224 = DO_FCALL
0963 T225 = BOOL_NOT V224
0964 JMPZ T225 0967
0965 EXT_STMT
0966 DECLARE_FUNCTION string("phpunit\framework\assertstringnotmatchesformat")
0967 EXT_STMT
0968 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0969 SEND_VAL_EX string("PHPUnit\Framework\assertStringMatchesFormatFile") 1
0970 V226 = DO_FCALL
0971 T227 = BOOL_NOT V226
0972 JMPZ T227 0975
0973 EXT_STMT
0974 DECLARE_FUNCTION string("phpunit\framework\assertstringmatchesformatfile")
0975 EXT_STMT
0976 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0977 SEND_VAL_EX string("PHPUnit\Framework\assertStringNotMatchesFormatFile") 1
0978 V228 = DO_FCALL
0979 T229 = BOOL_NOT V228
0980 JMPZ T229 0983
0981 EXT_STMT
0982 DECLARE_FUNCTION string("phpunit\framework\assertstringnotmatchesformatfile")
0983 EXT_STMT
0984 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0985 SEND_VAL_EX string("PHPUnit\Framework\assertStringStartsWith") 1
0986 V230 = DO_FCALL
0987 T231 = BOOL_NOT V230
0988 JMPZ T231 0991
0989 EXT_STMT
0990 DECLARE_FUNCTION string("phpunit\framework\assertstringstartswith")
0991 EXT_STMT
0992 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
0993 SEND_VAL_EX string("PHPUnit\Framework\assertStringStartsNotWith") 1
0994 V232 = DO_FCALL
0995 T233 = BOOL_NOT V232
0996 JMPZ T233 0999
0997 EXT_STMT
0998 DECLARE_FUNCTION string("phpunit\framework\assertstringstartsnotwith")
0999 EXT_STMT
1000 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1001 SEND_VAL_EX string("PHPUnit\Framework\assertStringContainsString") 1
1002 V234 = DO_FCALL
1003 T235 = BOOL_NOT V234
1004 JMPZ T235 1007
1005 EXT_STMT
1006 DECLARE_FUNCTION string("phpunit\framework\assertstringcontainsstring")
1007 EXT_STMT
1008 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1009 SEND_VAL_EX string("PHPUnit\Framework\assertStringContainsStringIgnoringCase") 1
1010 V236 = DO_FCALL
1011 T237 = BOOL_NOT V236
1012 JMPZ T237 1015
1013 EXT_STMT
1014 DECLARE_FUNCTION string("phpunit\framework\assertstringcontainsstringignoringcase")
1015 EXT_STMT
1016 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1017 SEND_VAL_EX string("PHPUnit\Framework\assertStringNotContainsString") 1
1018 V238 = DO_FCALL
1019 T239 = BOOL_NOT V238
1020 JMPZ T239 1023
1021 EXT_STMT
1022 DECLARE_FUNCTION string("phpunit\framework\assertstringnotcontainsstring")
1023 EXT_STMT
1024 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1025 SEND_VAL_EX string("PHPUnit\Framework\assertStringNotContainsStringIgnoringCase") 1
1026 V240 = DO_FCALL
1027 T241 = BOOL_NOT V240
1028 JMPZ T241 1031
1029 EXT_STMT
1030 DECLARE_FUNCTION string("phpunit\framework\assertstringnotcontainsstringignoringcase")
1031 EXT_STMT
1032 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1033 SEND_VAL_EX string("PHPUnit\Framework\assertStringEndsWith") 1
1034 V242 = DO_FCALL
1035 T243 = BOOL_NOT V242
1036 JMPZ T243 1039
1037 EXT_STMT
1038 DECLARE_FUNCTION string("phpunit\framework\assertstringendswith")
1039 EXT_STMT
1040 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1041 SEND_VAL_EX string("PHPUnit\Framework\assertStringEndsNotWith") 1
1042 V244 = DO_FCALL
1043 T245 = BOOL_NOT V244
1044 JMPZ T245 1047
1045 EXT_STMT
1046 DECLARE_FUNCTION string("phpunit\framework\assertstringendsnotwith")
1047 EXT_STMT
1048 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1049 SEND_VAL_EX string("PHPUnit\Framework\assertXmlFileEqualsXmlFile") 1
1050 V246 = DO_FCALL
1051 T247 = BOOL_NOT V246
1052 JMPZ T247 1055
1053 EXT_STMT
1054 DECLARE_FUNCTION string("phpunit\framework\assertxmlfileequalsxmlfile")
1055 EXT_STMT
1056 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1057 SEND_VAL_EX string("PHPUnit\Framework\assertXmlFileNotEqualsXmlFile") 1
1058 V248 = DO_FCALL
1059 T249 = BOOL_NOT V248
1060 JMPZ T249 1063
1061 EXT_STMT
1062 DECLARE_FUNCTION string("phpunit\framework\assertxmlfilenotequalsxmlfile")
1063 EXT_STMT
1064 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1065 SEND_VAL_EX string("PHPUnit\Framework\assertXmlStringEqualsXmlFile") 1
1066 V250 = DO_FCALL
1067 T251 = BOOL_NOT V250
1068 JMPZ T251 1071
1069 EXT_STMT
1070 DECLARE_FUNCTION string("phpunit\framework\assertxmlstringequalsxmlfile")
1071 EXT_STMT
1072 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1073 SEND_VAL_EX string("PHPUnit\Framework\assertXmlStringNotEqualsXmlFile") 1
1074 V252 = DO_FCALL
1075 T253 = BOOL_NOT V252
1076 JMPZ T253 1079
1077 EXT_STMT
1078 DECLARE_FUNCTION string("phpunit\framework\assertxmlstringnotequalsxmlfile")
1079 EXT_STMT
1080 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1081 SEND_VAL_EX string("PHPUnit\Framework\assertXmlStringEqualsXmlString") 1
1082 V254 = DO_FCALL
1083 T255 = BOOL_NOT V254
1084 JMPZ T255 1087
1085 EXT_STMT
1086 DECLARE_FUNCTION string("phpunit\framework\assertxmlstringequalsxmlstring")
1087 EXT_STMT
1088 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1089 SEND_VAL_EX string("PHPUnit\Framework\assertXmlStringNotEqualsXmlString") 1
1090 V256 = DO_FCALL
1091 T257 = BOOL_NOT V256
1092 JMPZ T257 1095
1093 EXT_STMT
1094 DECLARE_FUNCTION string("phpunit\framework\assertxmlstringnotequalsxmlstring")
1095 EXT_STMT
1096 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1097 SEND_VAL_EX string("PHPUnit\Framework\assertEqualXMLStructure") 1
1098 V258 = DO_FCALL
1099 T259 = BOOL_NOT V258
1100 JMPZ T259 1103
1101 EXT_STMT
1102 DECLARE_FUNCTION string("phpunit\framework\assertequalxmlstructure")
1103 EXT_STMT
1104 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1105 SEND_VAL_EX string("PHPUnit\Framework\assertThat") 1
1106 V260 = DO_FCALL
1107 T261 = BOOL_NOT V260
1108 JMPZ T261 1111
1109 EXT_STMT
1110 DECLARE_FUNCTION string("phpunit\framework\assertthat")
1111 EXT_STMT
1112 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1113 SEND_VAL_EX string("PHPUnit\Framework\assertJson") 1
1114 V262 = DO_FCALL
1115 T263 = BOOL_NOT V262
1116 JMPZ T263 1119
1117 EXT_STMT
1118 DECLARE_FUNCTION string("phpunit\framework\assertjson")
1119 EXT_STMT
1120 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1121 SEND_VAL_EX string("PHPUnit\Framework\assertJsonStringEqualsJsonString") 1
1122 V264 = DO_FCALL
1123 T265 = BOOL_NOT V264
1124 JMPZ T265 1127
1125 EXT_STMT
1126 DECLARE_FUNCTION string("phpunit\framework\assertjsonstringequalsjsonstring")
1127 EXT_STMT
1128 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1129 SEND_VAL_EX string("PHPUnit\Framework\assertJsonStringNotEqualsJsonString") 1
1130 V266 = DO_FCALL
1131 T267 = BOOL_NOT V266
1132 JMPZ T267 1135
1133 EXT_STMT
1134 DECLARE_FUNCTION string("phpunit\framework\assertjsonstringnotequalsjsonstring")
1135 EXT_STMT
1136 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1137 SEND_VAL_EX string("PHPUnit\Framework\assertJsonStringEqualsJsonFile") 1
1138 V268 = DO_FCALL
1139 T269 = BOOL_NOT V268
1140 JMPZ T269 1143
1141 EXT_STMT
1142 DECLARE_FUNCTION string("phpunit\framework\assertjsonstringequalsjsonfile")
1143 EXT_STMT
1144 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1145 SEND_VAL_EX string("PHPUnit\Framework\assertJsonStringNotEqualsJsonFile") 1
1146 V270 = DO_FCALL
1147 T271 = BOOL_NOT V270
1148 JMPZ T271 1151
1149 EXT_STMT
1150 DECLARE_FUNCTION string("phpunit\framework\assertjsonstringnotequalsjsonfile")
1151 EXT_STMT
1152 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1153 SEND_VAL_EX string("PHPUnit\Framework\assertJsonFileEqualsJsonFile") 1
1154 V272 = DO_FCALL
1155 T273 = BOOL_NOT V272
1156 JMPZ T273 1159
1157 EXT_STMT
1158 DECLARE_FUNCTION string("phpunit\framework\assertjsonfileequalsjsonfile")
1159 EXT_STMT
1160 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1161 SEND_VAL_EX string("PHPUnit\Framework\assertJsonFileNotEqualsJsonFile") 1
1162 V274 = DO_FCALL
1163 T275 = BOOL_NOT V274
1164 JMPZ T275 1167
1165 EXT_STMT
1166 DECLARE_FUNCTION string("phpunit\framework\assertjsonfilenotequalsjsonfile")
1167 EXT_STMT
1168 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1169 SEND_VAL_EX string("PHPUnit\Framework\logicalAnd") 1
1170 V276 = DO_FCALL
1171 T277 = BOOL_NOT V276
1172 JMPZ T277 1175
1173 EXT_STMT
1174 DECLARE_FUNCTION string("phpunit\framework\logicaland")
1175 EXT_STMT
1176 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1177 SEND_VAL_EX string("PHPUnit\Framework\logicalOr") 1
1178 V278 = DO_FCALL
1179 T279 = BOOL_NOT V278
1180 JMPZ T279 1183
1181 EXT_STMT
1182 DECLARE_FUNCTION string("phpunit\framework\logicalor")
1183 EXT_STMT
1184 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1185 SEND_VAL_EX string("PHPUnit\Framework\logicalNot") 1
1186 V280 = DO_FCALL
1187 T281 = BOOL_NOT V280
1188 JMPZ T281 1191
1189 EXT_STMT
1190 DECLARE_FUNCTION string("phpunit\framework\logicalnot")
1191 EXT_STMT
1192 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1193 SEND_VAL_EX string("PHPUnit\Framework\logicalXor") 1
1194 V282 = DO_FCALL
1195 T283 = BOOL_NOT V282
1196 JMPZ T283 1199
1197 EXT_STMT
1198 DECLARE_FUNCTION string("phpunit\framework\logicalxor")
1199 EXT_STMT
1200 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1201 SEND_VAL_EX string("PHPUnit\Framework\anything") 1
1202 V284 = DO_FCALL
1203 T285 = BOOL_NOT V284
1204 JMPZ T285 1207
1205 EXT_STMT
1206 DECLARE_FUNCTION string("phpunit\framework\anything")
1207 EXT_STMT
1208 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1209 SEND_VAL_EX string("PHPUnit\Framework\isTrue") 1
1210 V286 = DO_FCALL
1211 T287 = BOOL_NOT V286
1212 JMPZ T287 1215
1213 EXT_STMT
1214 DECLARE_FUNCTION string("phpunit\framework\istrue")
1215 EXT_STMT
1216 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1217 SEND_VAL_EX string("PHPUnit\Framework\callback") 1
1218 V288 = DO_FCALL
1219 T289 = BOOL_NOT V288
1220 JMPZ T289 1223
1221 EXT_STMT
1222 DECLARE_FUNCTION string("phpunit\framework\callback")
1223 EXT_STMT
1224 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1225 SEND_VAL_EX string("PHPUnit\Framework\isFalse") 1
1226 V290 = DO_FCALL
1227 T291 = BOOL_NOT V290
1228 JMPZ T291 1231
1229 EXT_STMT
1230 DECLARE_FUNCTION string("phpunit\framework\isfalse")
1231 EXT_STMT
1232 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1233 SEND_VAL_EX string("PHPUnit\Framework\isJson") 1
1234 V292 = DO_FCALL
1235 T293 = BOOL_NOT V292
1236 JMPZ T293 1239
1237 EXT_STMT
1238 DECLARE_FUNCTION string("phpunit\framework\isjson")
1239 EXT_STMT
1240 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1241 SEND_VAL_EX string("PHPUnit\Framework\isNull") 1
1242 V294 = DO_FCALL
1243 T295 = BOOL_NOT V294
1244 JMPZ T295 1247
1245 EXT_STMT
1246 DECLARE_FUNCTION string("phpunit\framework\isnull")
1247 EXT_STMT
1248 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1249 SEND_VAL_EX string("PHPUnit\Framework\isFinite") 1
1250 V296 = DO_FCALL
1251 T297 = BOOL_NOT V296
1252 JMPZ T297 1255
1253 EXT_STMT
1254 DECLARE_FUNCTION string("phpunit\framework\isfinite")
1255 EXT_STMT
1256 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1257 SEND_VAL_EX string("PHPUnit\Framework\isInfinite") 1
1258 V298 = DO_FCALL
1259 T299 = BOOL_NOT V298
1260 JMPZ T299 1263
1261 EXT_STMT
1262 DECLARE_FUNCTION string("phpunit\framework\isinfinite")
1263 EXT_STMT
1264 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1265 SEND_VAL_EX string("PHPUnit\Framework\isNan") 1
1266 V300 = DO_FCALL
1267 T301 = BOOL_NOT V300
1268 JMPZ T301 1271
1269 EXT_STMT
1270 DECLARE_FUNCTION string("phpunit\framework\isnan")
1271 EXT_STMT
1272 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1273 SEND_VAL_EX string("PHPUnit\Framework\containsEqual") 1
1274 V302 = DO_FCALL
1275 T303 = BOOL_NOT V302
1276 JMPZ T303 1279
1277 EXT_STMT
1278 DECLARE_FUNCTION string("phpunit\framework\containsequal")
1279 EXT_STMT
1280 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1281 SEND_VAL_EX string("PHPUnit\Framework\containsIdentical") 1
1282 V304 = DO_FCALL
1283 T305 = BOOL_NOT V304
1284 JMPZ T305 1287
1285 EXT_STMT
1286 DECLARE_FUNCTION string("phpunit\framework\containsidentical")
1287 EXT_STMT
1288 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1289 SEND_VAL_EX string("PHPUnit\Framework\containsOnly") 1
1290 V306 = DO_FCALL
1291 T307 = BOOL_NOT V306
1292 JMPZ T307 1295
1293 EXT_STMT
1294 DECLARE_FUNCTION string("phpunit\framework\containsonly")
1295 EXT_STMT
1296 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1297 SEND_VAL_EX string("PHPUnit\Framework\containsOnlyInstancesOf") 1
1298 V308 = DO_FCALL
1299 T309 = BOOL_NOT V308
1300 JMPZ T309 1303
1301 EXT_STMT
1302 DECLARE_FUNCTION string("phpunit\framework\containsonlyinstancesof")
1303 EXT_STMT
1304 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1305 SEND_VAL_EX string("PHPUnit\Framework\arrayHasKey") 1
1306 V310 = DO_FCALL
1307 T311 = BOOL_NOT V310
1308 JMPZ T311 1311
1309 EXT_STMT
1310 DECLARE_FUNCTION string("phpunit\framework\arrayhaskey")
1311 EXT_STMT
1312 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1313 SEND_VAL_EX string("PHPUnit\Framework\equalTo") 1
1314 V312 = DO_FCALL
1315 T313 = BOOL_NOT V312
1316 JMPZ T313 1319
1317 EXT_STMT
1318 DECLARE_FUNCTION string("phpunit\framework\equalto")
1319 EXT_STMT
1320 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1321 SEND_VAL_EX string("PHPUnit\Framework\equalToCanonicalizing") 1
1322 V314 = DO_FCALL
1323 T315 = BOOL_NOT V314
1324 JMPZ T315 1327
1325 EXT_STMT
1326 DECLARE_FUNCTION string("phpunit\framework\equaltocanonicalizing")
1327 EXT_STMT
1328 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1329 SEND_VAL_EX string("PHPUnit\Framework\equalToIgnoringCase") 1
1330 V316 = DO_FCALL
1331 T317 = BOOL_NOT V316
1332 JMPZ T317 1335
1333 EXT_STMT
1334 DECLARE_FUNCTION string("phpunit\framework\equaltoignoringcase")
1335 EXT_STMT
1336 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1337 SEND_VAL_EX string("PHPUnit\Framework\equalToWithDelta") 1
1338 V318 = DO_FCALL
1339 T319 = BOOL_NOT V318
1340 JMPZ T319 1343
1341 EXT_STMT
1342 DECLARE_FUNCTION string("phpunit\framework\equaltowithdelta")
1343 EXT_STMT
1344 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1345 SEND_VAL_EX string("PHPUnit\Framework\isEmpty") 1
1346 V320 = DO_FCALL
1347 T321 = BOOL_NOT V320
1348 JMPZ T321 1351
1349 EXT_STMT
1350 DECLARE_FUNCTION string("phpunit\framework\isempty")
1351 EXT_STMT
1352 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1353 SEND_VAL_EX string("PHPUnit\Framework\isWritable") 1
1354 V322 = DO_FCALL
1355 T323 = BOOL_NOT V322
1356 JMPZ T323 1359
1357 EXT_STMT
1358 DECLARE_FUNCTION string("phpunit\framework\iswritable")
1359 EXT_STMT
1360 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1361 SEND_VAL_EX string("PHPUnit\Framework\isReadable") 1
1362 V324 = DO_FCALL
1363 T325 = BOOL_NOT V324
1364 JMPZ T325 1367
1365 EXT_STMT
1366 DECLARE_FUNCTION string("phpunit\framework\isreadable")
1367 EXT_STMT
1368 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1369 SEND_VAL_EX string("PHPUnit\Framework\directoryExists") 1
1370 V326 = DO_FCALL
1371 T327 = BOOL_NOT V326
1372 JMPZ T327 1375
1373 EXT_STMT
1374 DECLARE_FUNCTION string("phpunit\framework\directoryexists")
1375 EXT_STMT
1376 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1377 SEND_VAL_EX string("PHPUnit\Framework\fileExists") 1
1378 V328 = DO_FCALL
1379 T329 = BOOL_NOT V328
1380 JMPZ T329 1383
1381 EXT_STMT
1382 DECLARE_FUNCTION string("phpunit\framework\fileexists")
1383 EXT_STMT
1384 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1385 SEND_VAL_EX string("PHPUnit\Framework\greaterThan") 1
1386 V330 = DO_FCALL
1387 T331 = BOOL_NOT V330
1388 JMPZ T331 1391
1389 EXT_STMT
1390 DECLARE_FUNCTION string("phpunit\framework\greaterthan")
1391 EXT_STMT
1392 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1393 SEND_VAL_EX string("PHPUnit\Framework\greaterThanOrEqual") 1
1394 V332 = DO_FCALL
1395 T333 = BOOL_NOT V332
1396 JMPZ T333 1399
1397 EXT_STMT
1398 DECLARE_FUNCTION string("phpunit\framework\greaterthanorequal")
1399 EXT_STMT
1400 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1401 SEND_VAL_EX string("PHPUnit\Framework\classHasAttribute") 1
1402 V334 = DO_FCALL
1403 T335 = BOOL_NOT V334
1404 JMPZ T335 1407
1405 EXT_STMT
1406 DECLARE_FUNCTION string("phpunit\framework\classhasattribute")
1407 EXT_STMT
1408 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1409 SEND_VAL_EX string("PHPUnit\Framework\classHasStaticAttribute") 1
1410 V336 = DO_FCALL
1411 T337 = BOOL_NOT V336
1412 JMPZ T337 1415
1413 EXT_STMT
1414 DECLARE_FUNCTION string("phpunit\framework\classhasstaticattribute")
1415 EXT_STMT
1416 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1417 SEND_VAL_EX string("PHPUnit\Framework\objectHasAttribute") 1
1418 V338 = DO_FCALL
1419 T339 = BOOL_NOT V338
1420 JMPZ T339 1423
1421 EXT_STMT
1422 DECLARE_FUNCTION string("phpunit\framework\objecthasattribute")
1423 EXT_STMT
1424 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1425 SEND_VAL_EX string("PHPUnit\Framework\identicalTo") 1
1426 V340 = DO_FCALL
1427 T341 = BOOL_NOT V340
1428 JMPZ T341 1431
1429 EXT_STMT
1430 DECLARE_FUNCTION string("phpunit\framework\identicalto")
1431 EXT_STMT
1432 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1433 SEND_VAL_EX string("PHPUnit\Framework\isInstanceOf") 1
1434 V342 = DO_FCALL
1435 T343 = BOOL_NOT V342
1436 JMPZ T343 1439
1437 EXT_STMT
1438 DECLARE_FUNCTION string("phpunit\framework\isinstanceof")
1439 EXT_STMT
1440 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1441 SEND_VAL_EX string("PHPUnit\Framework\isType") 1
1442 V344 = DO_FCALL
1443 T345 = BOOL_NOT V344
1444 JMPZ T345 1447
1445 EXT_STMT
1446 DECLARE_FUNCTION string("phpunit\framework\istype")
1447 EXT_STMT
1448 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1449 SEND_VAL_EX string("PHPUnit\Framework\lessThan") 1
1450 V346 = DO_FCALL
1451 T347 = BOOL_NOT V346
1452 JMPZ T347 1455
1453 EXT_STMT
1454 DECLARE_FUNCTION string("phpunit\framework\lessthan")
1455 EXT_STMT
1456 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1457 SEND_VAL_EX string("PHPUnit\Framework\lessThanOrEqual") 1
1458 V348 = DO_FCALL
1459 T349 = BOOL_NOT V348
1460 JMPZ T349 1463
1461 EXT_STMT
1462 DECLARE_FUNCTION string("phpunit\framework\lessthanorequal")
1463 EXT_STMT
1464 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1465 SEND_VAL_EX string("PHPUnit\Framework\matchesRegularExpression") 1
1466 V350 = DO_FCALL
1467 T351 = BOOL_NOT V350
1468 JMPZ T351 1471
1469 EXT_STMT
1470 DECLARE_FUNCTION string("phpunit\framework\matchesregularexpression")
1471 EXT_STMT
1472 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1473 SEND_VAL_EX string("PHPUnit\Framework\matches") 1
1474 V352 = DO_FCALL
1475 T353 = BOOL_NOT V352
1476 JMPZ T353 1479
1477 EXT_STMT
1478 DECLARE_FUNCTION string("phpunit\framework\matches")
1479 EXT_STMT
1480 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1481 SEND_VAL_EX string("PHPUnit\Framework\stringStartsWith") 1
1482 V354 = DO_FCALL
1483 T355 = BOOL_NOT V354
1484 JMPZ T355 1487
1485 EXT_STMT
1486 DECLARE_FUNCTION string("phpunit\framework\stringstartswith")
1487 EXT_STMT
1488 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1489 SEND_VAL_EX string("PHPUnit\Framework\stringContains") 1
1490 V356 = DO_FCALL
1491 T357 = BOOL_NOT V356
1492 JMPZ T357 1495
1493 EXT_STMT
1494 DECLARE_FUNCTION string("phpunit\framework\stringcontains")
1495 EXT_STMT
1496 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1497 SEND_VAL_EX string("PHPUnit\Framework\stringEndsWith") 1
1498 V358 = DO_FCALL
1499 T359 = BOOL_NOT V358
1500 JMPZ T359 1503
1501 EXT_STMT
1502 DECLARE_FUNCTION string("phpunit\framework\stringendswith")
1503 EXT_STMT
1504 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1505 SEND_VAL_EX string("PHPUnit\Framework\countOf") 1
1506 V360 = DO_FCALL
1507 T361 = BOOL_NOT V360
1508 JMPZ T361 1511
1509 EXT_STMT
1510 DECLARE_FUNCTION string("phpunit\framework\countof")
1511 EXT_STMT
1512 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1513 SEND_VAL_EX string("PHPUnit\Framework\objectEquals") 1
1514 V362 = DO_FCALL
1515 T363 = BOOL_NOT V362
1516 JMPZ T363 1519
1517 EXT_STMT
1518 DECLARE_FUNCTION string("phpunit\framework\objectequals")
1519 EXT_STMT
1520 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1521 SEND_VAL_EX string("PHPUnit\Framework\any") 1
1522 V364 = DO_FCALL
1523 T365 = BOOL_NOT V364
1524 JMPZ T365 1527
1525 EXT_STMT
1526 DECLARE_FUNCTION string("phpunit\framework\any")
1527 EXT_STMT
1528 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1529 SEND_VAL_EX string("PHPUnit\Framework\never") 1
1530 V366 = DO_FCALL
1531 T367 = BOOL_NOT V366
1532 JMPZ T367 1535
1533 EXT_STMT
1534 DECLARE_FUNCTION string("phpunit\framework\never")
1535 EXT_STMT
1536 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1537 SEND_VAL_EX string("PHPUnit\Framework\atLeast") 1
1538 V368 = DO_FCALL
1539 T369 = BOOL_NOT V368
1540 JMPZ T369 1543
1541 EXT_STMT
1542 DECLARE_FUNCTION string("phpunit\framework\atleast")
1543 EXT_STMT
1544 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1545 SEND_VAL_EX string("PHPUnit\Framework\atLeastOnce") 1
1546 V370 = DO_FCALL
1547 T371 = BOOL_NOT V370
1548 JMPZ T371 1551
1549 EXT_STMT
1550 DECLARE_FUNCTION string("phpunit\framework\atleastonce")
1551 EXT_STMT
1552 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1553 SEND_VAL_EX string("PHPUnit\Framework\once") 1
1554 V372 = DO_FCALL
1555 T373 = BOOL_NOT V372
1556 JMPZ T373 1559
1557 EXT_STMT
1558 DECLARE_FUNCTION string("phpunit\framework\once")
1559 EXT_STMT
1560 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1561 SEND_VAL_EX string("PHPUnit\Framework\exactly") 1
1562 V374 = DO_FCALL
1563 T375 = BOOL_NOT V374
1564 JMPZ T375 1567
1565 EXT_STMT
1566 DECLARE_FUNCTION string("phpunit\framework\exactly")
1567 EXT_STMT
1568 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1569 SEND_VAL_EX string("PHPUnit\Framework\atMost") 1
1570 V376 = DO_FCALL
1571 T377 = BOOL_NOT V376
1572 JMPZ T377 1575
1573 EXT_STMT
1574 DECLARE_FUNCTION string("phpunit\framework\atmost")
1575 EXT_STMT
1576 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1577 SEND_VAL_EX string("PHPUnit\Framework\at") 1
1578 V378 = DO_FCALL
1579 T379 = BOOL_NOT V378
1580 JMPZ T379 1583
1581 EXT_STMT
1582 DECLARE_FUNCTION string("phpunit\framework\at")
1583 EXT_STMT
1584 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1585 SEND_VAL_EX string("PHPUnit\Framework\returnValue") 1
1586 V380 = DO_FCALL
1587 T381 = BOOL_NOT V380
1588 JMPZ T381 1591
1589 EXT_STMT
1590 DECLARE_FUNCTION string("phpunit\framework\returnvalue")
1591 EXT_STMT
1592 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1593 SEND_VAL_EX string("PHPUnit\Framework\returnValueMap") 1
1594 V382 = DO_FCALL
1595 T383 = BOOL_NOT V382
1596 JMPZ T383 1599
1597 EXT_STMT
1598 DECLARE_FUNCTION string("phpunit\framework\returnvaluemap")
1599 EXT_STMT
1600 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1601 SEND_VAL_EX string("PHPUnit\Framework\returnArgument") 1
1602 V384 = DO_FCALL
1603 T385 = BOOL_NOT V384
1604 JMPZ T385 1607
1605 EXT_STMT
1606 DECLARE_FUNCTION string("phpunit\framework\returnargument")
1607 EXT_STMT
1608 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1609 SEND_VAL_EX string("PHPUnit\Framework\returnCallback") 1
1610 V386 = DO_FCALL
1611 T387 = BOOL_NOT V386
1612 JMPZ T387 1615
1613 EXT_STMT
1614 DECLARE_FUNCTION string("phpunit\framework\returncallback")
1615 EXT_STMT
1616 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1617 SEND_VAL_EX string("PHPUnit\Framework\returnSelf") 1
1618 V388 = DO_FCALL
1619 T389 = BOOL_NOT V388
1620 JMPZ T389 1623
1621 EXT_STMT
1622 DECLARE_FUNCTION string("phpunit\framework\returnself")
1623 EXT_STMT
1624 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1625 SEND_VAL_EX string("PHPUnit\Framework\throwException") 1
1626 V390 = DO_FCALL
1627 T391 = BOOL_NOT V390
1628 JMPZ T391 1631
1629 EXT_STMT
1630 DECLARE_FUNCTION string("phpunit\framework\throwexception")
1631 EXT_STMT
1632 INIT_NS_FCALL_BY_NAME 1 string("PHPUnit\Framework\function_exists")
1633 SEND_VAL_EX string("PHPUnit\Framework\onConsecutiveCalls") 1
1634 V392 = DO_FCALL
1635 T393 = BOOL_NOT V392
1636 JMPZ T393 1639
1637 EXT_STMT
1638 DECLARE_FUNCTION string("phpunit\framework\onconsecutivecalls")
1639 RETURN int(1)

PHPUnit\Framework\assertArrayHasKey:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:89-92
     ; return  [] RANGE[0..0]
0000 CV0($key) = RECV 1
0001 CV1($array) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertArrayHasKey")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertArrayNotHasKey:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:110-113
     ; return  [] RANGE[0..0]
0000 CV0($key) = RECV 1
0001 CV1($array) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertArrayNotHasKey")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertContains:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:128-131
     ; return  [] RANGE[0..0]
0000 CV0($needle) = RECV 1
0001 CV1($haystack) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertContains")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertContainsEquals:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:135-138
     ; return  [] RANGE[0..0]
0000 CV0($needle) = RECV 1
0001 CV1($haystack) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertContainsEquals")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertNotContains:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:153-156
     ; return  [] RANGE[0..0]
0000 CV0($needle) = RECV 1
0001 CV1($haystack) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotContains")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertNotContainsEquals:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:160-163
     ; return  [] RANGE[0..0]
0000 CV0($needle) = RECV 1
0001 CV1($haystack) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotContainsEquals")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertContainsOnly:
     ; (lines=12, args=4, vars=4, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:177-180
     ; return  [] RANGE[0..0]
0000 CV0($type) = RECV 1
0001 CV1($haystack) = RECV 2
0002 CV2($isNativeType) = RECV_INIT 3 null
0003 CV3($message) = RECV_INIT 4 string("")
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertContainsOnly")
0006 T4 = FUNC_GET_ARGS
0007 SEND_UNPACK T4
0008 CHECK_UNDEF_ARGS
0009 DO_FCALL
0010 EXT_STMT
0011 RETURN null

PHPUnit\Framework\assertContainsOnlyInstancesOf:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:194-197
     ; return  [] RANGE[0..0]
0000 CV0($className) = RECV 1
0001 CV1($haystack) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertContainsOnlyInstancesOf")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertNotContainsOnly:
     ; (lines=12, args=4, vars=4, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:211-214
     ; return  [] RANGE[0..0]
0000 CV0($type) = RECV 1
0001 CV1($haystack) = RECV 2
0002 CV2($isNativeType) = RECV_INIT 3 null
0003 CV3($message) = RECV_INIT 4 string("")
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotContainsOnly")
0006 T4 = FUNC_GET_ARGS
0007 SEND_UNPACK T4
0008 CHECK_UNDEF_ARGS
0009 DO_FCALL
0010 EXT_STMT
0011 RETURN null

PHPUnit\Framework\assertCount:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:231-234
     ; return  [] RANGE[0..0]
0000 CV0($expectedCount) = RECV 1
0001 CV1($haystack) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertCount")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertNotCount:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:251-254
     ; return  [] RANGE[0..0]
0000 CV0($expectedCount) = RECV 1
0001 CV1($haystack) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotCount")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertEquals:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:268-271
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertEquals")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertEqualsCanonicalizing:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:285-288
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertEqualsCanonicalizing")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertEqualsIgnoringCase:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:302-305
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertEqualsIgnoringCase")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertEqualsWithDelta:
     ; (lines=12, args=4, vars=4, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:319-322
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($delta) = RECV 3
0003 CV3($message) = RECV_INIT 4 string("")
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertEqualsWithDelta")
0006 T4 = FUNC_GET_ARGS
0007 SEND_UNPACK T4
0008 CHECK_UNDEF_ARGS
0009 DO_FCALL
0010 EXT_STMT
0011 RETURN null

PHPUnit\Framework\assertNotEquals:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:336-339
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotEquals")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertNotEqualsCanonicalizing:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:353-356
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotEqualsCanonicalizing")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertNotEqualsIgnoringCase:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:370-373
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotEqualsIgnoringCase")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertNotEqualsWithDelta:
     ; (lines=12, args=4, vars=4, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:387-390
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($delta) = RECV 3
0003 CV3($message) = RECV_INIT 4 string("")
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotEqualsWithDelta")
0006 T4 = FUNC_GET_ARGS
0007 SEND_UNPACK T4
0008 CHECK_UNDEF_ARGS
0009 DO_FCALL
0010 EXT_STMT
0011 RETURN null

PHPUnit\Framework\assertObjectEquals:
     ; (lines=12, args=4, vars=4, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:401-404
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($method) = RECV_INIT 3 string("equals")
0003 CV3($message) = RECV_INIT 4 string("")
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertObjectEquals")
0006 T4 = FUNC_GET_ARGS
0007 SEND_UNPACK T4
0008 CHECK_UNDEF_ARGS
0009 DO_FCALL
0010 EXT_STMT
0011 RETURN null

PHPUnit\Framework\assertEmpty:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:420-423
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertEmpty")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertNotEmpty:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:439-442
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotEmpty")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertGreaterThan:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:456-459
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertGreaterThan")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertGreaterThanOrEqual:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:473-476
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertGreaterThanOrEqual")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertLessThan:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:490-493
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertLessThan")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertLessThanOrEqual:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:507-510
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertLessThanOrEqual")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertFileEquals:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:525-528
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileEquals")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertFileEqualsCanonicalizing:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:543-546
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileEqualsCanonicalizing")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertFileEqualsIgnoringCase:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:561-564
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileEqualsIgnoringCase")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertFileNotEquals:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:579-582
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileNotEquals")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertFileNotEqualsCanonicalizing:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:597-600
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileNotEqualsCanonicalizing")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertFileNotEqualsIgnoringCase:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:615-618
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileNotEqualsIgnoringCase")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringEqualsFile:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:633-636
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualString) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringEqualsFile")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringEqualsFileCanonicalizing:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:651-654
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualString) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringEqualsFileCanonicalizing")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringEqualsFileIgnoringCase:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:669-672
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualString) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringEqualsFileIgnoringCase")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringNotEqualsFile:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:687-690
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualString) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringNotEqualsFile")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringNotEqualsFileCanonicalizing:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:705-708
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualString) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringNotEqualsFileCanonicalizing")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringNotEqualsFileIgnoringCase:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:723-726
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualString) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringNotEqualsFileIgnoringCase")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertIsReadable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:740-743
     ; return  [] RANGE[0..0]
0000 CV0($filename) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsReadable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotReadable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:757-760
     ; return  [] RANGE[0..0]
0000 CV0($filename) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotReadable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertNotIsReadable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:778-781
     ; return  [] RANGE[0..0]
0000 CV0($filename) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotIsReadable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsWritable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:795-798
     ; return  [] RANGE[0..0]
0000 CV0($filename) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsWritable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotWritable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:812-815
     ; return  [] RANGE[0..0]
0000 CV0($filename) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotWritable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertNotIsWritable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:833-836
     ; return  [] RANGE[0..0]
0000 CV0($filename) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotIsWritable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertDirectoryExists:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:850-853
     ; return  [] RANGE[0..0]
0000 CV0($directory) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertDirectoryExists")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertDirectoryDoesNotExist:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:867-870
     ; return  [] RANGE[0..0]
0000 CV0($directory) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertDirectoryDoesNotExist")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertDirectoryNotExists:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:888-891
     ; return  [] RANGE[0..0]
0000 CV0($directory) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertDirectoryNotExists")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertDirectoryIsReadable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:905-908
     ; return  [] RANGE[0..0]
0000 CV0($directory) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertDirectoryIsReadable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertDirectoryIsNotReadable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:922-925
     ; return  [] RANGE[0..0]
0000 CV0($directory) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertDirectoryIsNotReadable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertDirectoryNotIsReadable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:943-946
     ; return  [] RANGE[0..0]
0000 CV0($directory) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertDirectoryNotIsReadable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertDirectoryIsWritable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:960-963
     ; return  [] RANGE[0..0]
0000 CV0($directory) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertDirectoryIsWritable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertDirectoryIsNotWritable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:977-980
     ; return  [] RANGE[0..0]
0000 CV0($directory) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertDirectoryIsNotWritable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertDirectoryNotIsWritable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:998-1001
     ; return  [] RANGE[0..0]
0000 CV0($directory) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertDirectoryNotIsWritable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertFileExists:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1015-1018
     ; return  [] RANGE[0..0]
0000 CV0($filename) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileExists")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertFileDoesNotExist:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1032-1035
     ; return  [] RANGE[0..0]
0000 CV0($filename) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileDoesNotExist")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertFileNotExists:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1053-1056
     ; return  [] RANGE[0..0]
0000 CV0($filename) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileNotExists")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertFileIsReadable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1070-1073
     ; return  [] RANGE[0..0]
0000 CV0($file) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileIsReadable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertFileIsNotReadable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1087-1090
     ; return  [] RANGE[0..0]
0000 CV0($file) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileIsNotReadable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertFileNotIsReadable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1108-1111
     ; return  [] RANGE[0..0]
0000 CV0($file) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileNotIsReadable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertFileIsWritable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1125-1128
     ; return  [] RANGE[0..0]
0000 CV0($file) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileIsWritable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertFileIsNotWritable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1142-1145
     ; return  [] RANGE[0..0]
0000 CV0($file) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileIsNotWritable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertFileNotIsWritable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1163-1166
     ; return  [] RANGE[0..0]
0000 CV0($file) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFileNotIsWritable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertTrue:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1182-1185
     ; return  [] RANGE[0..0]
0000 CV0($condition) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertTrue")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertNotTrue:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1201-1204
     ; return  [] RANGE[0..0]
0000 CV0($condition) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotTrue")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertFalse:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1220-1223
     ; return  [] RANGE[0..0]
0000 CV0($condition) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFalse")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertNotFalse:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1239-1242
     ; return  [] RANGE[0..0]
0000 CV0($condition) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotFalse")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertNull:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1258-1261
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNull")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertNotNull:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1277-1280
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotNull")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertFinite:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1294-1297
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertFinite")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertInfinite:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1311-1314
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertInfinite")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertNan:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1328-1331
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNan")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertClassHasAttribute:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1346-1349
     ; return  [] RANGE[0..0]
0000 CV0($attributeName) = RECV 1
0001 CV1($className) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertClassHasAttribute")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertClassNotHasAttribute:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1364-1367
     ; return  [] RANGE[0..0]
0000 CV0($attributeName) = RECV 1
0001 CV1($className) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertClassNotHasAttribute")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertClassHasStaticAttribute:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1382-1385
     ; return  [] RANGE[0..0]
0000 CV0($attributeName) = RECV 1
0001 CV1($className) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertClassHasStaticAttribute")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertClassNotHasStaticAttribute:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1400-1403
     ; return  [] RANGE[0..0]
0000 CV0($attributeName) = RECV 1
0001 CV1($className) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertClassNotHasStaticAttribute")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertObjectHasAttribute:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1420-1423
     ; return  [] RANGE[0..0]
0000 CV0($attributeName) = RECV 1
0001 CV1($object) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertObjectHasAttribute")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertObjectNotHasAttribute:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1440-1443
     ; return  [] RANGE[0..0]
0000 CV0($attributeName) = RECV 1
0001 CV1($object) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertObjectNotHasAttribute")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertSame:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1463-1466
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertSame")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertNotSame:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1482-1485
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotSame")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertInstanceOf:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1504-1507
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertInstanceOf")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertNotInstanceOf:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1526-1529
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotInstanceOf")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertIsArray:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1545-1548
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsArray")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsBool:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1564-1567
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsBool")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsFloat:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1583-1586
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsFloat")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsInt:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1602-1605
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsInt")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNumeric:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1621-1624
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNumeric")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsObject:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1640-1643
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsObject")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsResource:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1659-1662
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsResource")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsClosedResource:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1678-1681
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsClosedResource")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsString:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1697-1700
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsString")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsScalar:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1716-1719
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsScalar")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsCallable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1735-1738
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsCallable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsIterable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1754-1757
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsIterable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotArray:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1773-1776
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotArray")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotBool:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1792-1795
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotBool")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotFloat:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1811-1814
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotFloat")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotInt:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1830-1833
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotInt")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotNumeric:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1849-1852
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotNumeric")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotObject:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1868-1871
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotObject")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotResource:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1887-1890
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotResource")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotClosedResource:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1906-1909
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotClosedResource")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotString:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1925-1928
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotString")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotScalar:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1944-1947
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotScalar")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotCallable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1963-1966
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotCallable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertIsNotIterable:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1982-1985
     ; return  [] RANGE[0..0]
0000 CV0($actual) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertIsNotIterable")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertMatchesRegularExpression:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:1999-2002
     ; return  [] RANGE[0..0]
0000 CV0($pattern) = RECV 1
0001 CV1($string) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertMatchesRegularExpression")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertRegExp:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2020-2023
     ; return  [] RANGE[0..0]
0000 CV0($pattern) = RECV 1
0001 CV1($string) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertRegExp")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertDoesNotMatchRegularExpression:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2037-2040
     ; return  [] RANGE[0..0]
0000 CV0($pattern) = RECV 1
0001 CV1($string) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertDoesNotMatchRegularExpression")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertNotRegExp:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2058-2061
     ; return  [] RANGE[0..0]
0000 CV0($pattern) = RECV 1
0001 CV1($string) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotRegExp")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertSameSize:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2080-2083
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertSameSize")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertNotSameSize:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2102-2105
     ; return  [] RANGE[0..0]
0000 CV0($expected) = RECV 1
0001 CV1($actual) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertNotSameSize")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringMatchesFormat:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2119-2122
     ; return  [] RANGE[0..0]
0000 CV0($format) = RECV 1
0001 CV1($string) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringMatchesFormat")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringNotMatchesFormat:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2136-2139
     ; return  [] RANGE[0..0]
0000 CV0($format) = RECV 1
0001 CV1($string) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringNotMatchesFormat")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringMatchesFormatFile:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2153-2156
     ; return  [] RANGE[0..0]
0000 CV0($formatFile) = RECV 1
0001 CV1($string) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringMatchesFormatFile")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringNotMatchesFormatFile:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2170-2173
     ; return  [] RANGE[0..0]
0000 CV0($formatFile) = RECV 1
0001 CV1($string) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringNotMatchesFormatFile")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringStartsWith:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2187-2190
     ; return  [] RANGE[0..0]
0000 CV0($prefix) = RECV 1
0001 CV1($string) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringStartsWith")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringStartsNotWith:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2207-2210
     ; return  [] RANGE[0..0]
0000 CV0($prefix) = RECV 1
0001 CV1($string) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringStartsNotWith")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringContainsString:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2222-2225
     ; return  [] RANGE[0..0]
0000 CV0($needle) = RECV 1
0001 CV1($haystack) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringContainsString")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringContainsStringIgnoringCase:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2237-2240
     ; return  [] RANGE[0..0]
0000 CV0($needle) = RECV 1
0001 CV1($haystack) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringContainsStringIgnoringCase")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringNotContainsString:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2252-2255
     ; return  [] RANGE[0..0]
0000 CV0($needle) = RECV 1
0001 CV1($haystack) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringNotContainsString")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringNotContainsStringIgnoringCase:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2267-2270
     ; return  [] RANGE[0..0]
0000 CV0($needle) = RECV 1
0001 CV1($haystack) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringNotContainsStringIgnoringCase")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringEndsWith:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2284-2287
     ; return  [] RANGE[0..0]
0000 CV0($suffix) = RECV 1
0001 CV1($string) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringEndsWith")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertStringEndsNotWith:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2301-2304
     ; return  [] RANGE[0..0]
0000 CV0($suffix) = RECV 1
0001 CV1($string) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertStringEndsNotWith")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertXmlFileEqualsXmlFile:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2319-2322
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualFile) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertXmlFileEqualsXmlFile")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertXmlFileNotEqualsXmlFile:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2337-2340
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualFile) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertXmlFileNotEqualsXmlFile")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertXmlStringEqualsXmlFile:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2357-2360
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualXml) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertXmlStringEqualsXmlFile")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertXmlStringNotEqualsXmlFile:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2377-2380
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualXml) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertXmlStringNotEqualsXmlFile")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertXmlStringEqualsXmlString:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2398-2401
     ; return  [] RANGE[0..0]
0000 CV0($expectedXml) = RECV 1
0001 CV1($actualXml) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertXmlStringEqualsXmlString")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertXmlStringNotEqualsXmlString:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2419-2422
     ; return  [] RANGE[0..0]
0000 CV0($expectedXml) = RECV 1
0001 CV1($actualXml) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertXmlStringNotEqualsXmlString")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertEqualXMLStructure:
     ; (lines=12, args=4, vars=4, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2441-2444
     ; return  [] RANGE[0..0]
0000 CV0($expectedElement) = RECV 1
0001 CV1($actualElement) = RECV 2
0002 CV2($checkAttributes) = RECV_INIT 3 bool(false)
0003 CV3($message) = RECV_INIT 4 string("")
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertEqualXMLStructure")
0006 T4 = FUNC_GET_ARGS
0007 SEND_UNPACK T4
0008 CHECK_UNDEF_ARGS
0009 DO_FCALL
0010 EXT_STMT
0011 RETURN null

PHPUnit\Framework\assertThat:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2458-2461
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 CV1($constraint) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertThat")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertJson:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2475-2478
     ; return  [] RANGE[0..0]
0000 CV0($actualJson) = RECV 1
0001 CV1($message) = RECV_INIT 2 string("")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertJson")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PHPUnit\Framework\assertJsonStringEqualsJsonString:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2492-2495
     ; return  [] RANGE[0..0]
0000 CV0($expectedJson) = RECV 1
0001 CV1($actualJson) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertJsonStringEqualsJsonString")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertJsonStringNotEqualsJsonString:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2512-2515
     ; return  [] RANGE[0..0]
0000 CV0($expectedJson) = RECV 1
0001 CV1($actualJson) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertJsonStringNotEqualsJsonString")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertJsonStringEqualsJsonFile:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2529-2532
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualJson) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertJsonStringEqualsJsonFile")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertJsonStringNotEqualsJsonFile:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2546-2549
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualJson) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertJsonStringNotEqualsJsonFile")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertJsonFileEqualsJsonFile:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2563-2566
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualFile) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertJsonFileEqualsJsonFile")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\assertJsonFileNotEqualsJsonFile:
     ; (lines=11, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2580-2583
     ; return  [] RANGE[0..0]
0000 CV0($expectedFile) = RECV 1
0001 CV1($actualFile) = RECV 2
0002 CV2($message) = RECV_INIT 3 string("")
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("assertJsonFileNotEqualsJsonFile")
0005 T3 = FUNC_GET_ARGS
0006 SEND_UNPACK T3
0007 CHECK_UNDEF_ARGS
0008 DO_FCALL
0009 EXT_STMT
0010 RETURN null

PHPUnit\Framework\logicalAnd:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2587-2590
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("logicalAnd")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\logicalOr:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2594-2597
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("logicalOr")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\logicalNot:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2601-2604
     ; return  [] RANGE[0..0]
0000 CV0($constraint) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("logicalNot")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\logicalXor:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2608-2611
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("logicalXor")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\anything:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2615-2618
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("anything")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\isTrue:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2622-2625
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("isTrue")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\callback:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2629-2632
     ; return  [] RANGE[0..0]
0000 CV0($callback) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("callback")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\isFalse:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2636-2639
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("isFalse")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\isJson:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2643-2646
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("isJson")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\isNull:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2650-2653
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("isNull")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\isFinite:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2657-2660
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("isFinite")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\isInfinite:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2664-2667
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("isInfinite")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\isNan:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2671-2674
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("isNan")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\containsEqual:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2678-2681
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("containsEqual")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\containsIdentical:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2685-2688
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("containsIdentical")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\containsOnly:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2692-2695
     ; return  [] RANGE[0..0]
0000 CV0($type) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("containsOnly")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\containsOnlyInstancesOf:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2699-2702
     ; return  [] RANGE[0..0]
0000 CV0($className) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("containsOnlyInstancesOf")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\arrayHasKey:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2706-2709
     ; return  [] RANGE[0..0]
0000 CV0($key) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("arrayHasKey")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\equalTo:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2713-2716
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("equalTo")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\equalToCanonicalizing:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2720-2723
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("equalToCanonicalizing")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\equalToIgnoringCase:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2727-2730
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("equalToIgnoringCase")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\equalToWithDelta:
     ; (lines=13, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2734-2737
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 CV1($delta) = RECV 2
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("equalToWithDelta")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 V3 = DO_FCALL
0008 VERIFY_RETURN_TYPE V3
0009 RETURN V3
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     3: 0008 - 0009 (tmp/var)

PHPUnit\Framework\isEmpty:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2741-2744
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("isEmpty")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\isWritable:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2748-2751
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("isWritable")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\isReadable:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2755-2758
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("isReadable")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\directoryExists:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2762-2765
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("directoryExists")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\fileExists:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2769-2772
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("fileExists")
0002 T0 = FUNC_GET_ARGS
0003 SEND_UNPACK T0
0004 CHECK_UNDEF_ARGS
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PHPUnit\Framework\greaterThan:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2776-2779
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("greaterThan")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\greaterThanOrEqual:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2783-2786
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("greaterThanOrEqual")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\classHasAttribute:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2790-2793
     ; return  [] RANGE[0..0]
0000 CV0($attributeName) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("classHasAttribute")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\classHasStaticAttribute:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2797-2800
     ; return  [] RANGE[0..0]
0000 CV0($attributeName) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("classHasStaticAttribute")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\objectHasAttribute:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2804-2807
     ; return  [] RANGE[0..0]
0000 CV0($attributeName) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("objectHasAttribute")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\identicalTo:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2811-2814
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("identicalTo")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\isInstanceOf:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2818-2821
     ; return  [] RANGE[0..0]
0000 CV0($className) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("isInstanceOf")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\isType:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2825-2828
     ; return  [] RANGE[0..0]
0000 CV0($type) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("isType")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\lessThan:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2832-2835
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("lessThan")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\lessThanOrEqual:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2839-2842
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("lessThanOrEqual")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\matchesRegularExpression:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2846-2849
     ; return  [] RANGE[0..0]
0000 CV0($pattern) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("matchesRegularExpression")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\matches:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2853-2856
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("matches")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\stringStartsWith:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2860-2863
     ; return  [] RANGE[0..0]
0000 CV0($prefix) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("stringStartsWith")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\stringContains:
     ; (lines=13, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2867-2870
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($case) = RECV_INIT 2 bool(true)
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("stringContains")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 V3 = DO_FCALL
0008 VERIFY_RETURN_TYPE V3
0009 RETURN V3
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     3: 0008 - 0009 (tmp/var)

PHPUnit\Framework\stringEndsWith:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2874-2877
     ; return  [] RANGE[0..0]
0000 CV0($suffix) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("stringEndsWith")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\countOf:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2881-2884
     ; return  [] RANGE[0..0]
0000 CV0($count) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("countOf")
0003 T1 = FUNC_GET_ARGS
0004 SEND_UNPACK T1
0005 CHECK_UNDEF_ARGS
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PHPUnit\Framework\objectEquals:
     ; (lines=13, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2888-2891
     ; return  [] RANGE[0..0]
0000 CV0($object) = RECV 1
0001 CV1($method) = RECV_INIT 2 string("equals")
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 0 string("PHPUnit\Framework\Assert") string("objectEquals")
0004 T2 = FUNC_GET_ARGS
0005 SEND_UNPACK T2
0006 CHECK_UNDEF_ARGS
0007 V3 = DO_FCALL
0008 VERIFY_RETURN_TYPE V3
0009 RETURN V3
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     3: 0008 - 0009 (tmp/var)

PHPUnit\Framework\any:
     ; (lines=8, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2899-2902
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 0 string("PHPUnit\Framework\MockObject\Rule\AnyInvokedCount")
0002 DO_FCALL
0003 VERIFY_RETURN_TYPE V0
0004 RETURN V0
0005 EXT_STMT
0006 VERIFY_RETURN_TYPE
0007 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (new)
     0: 0003 - 0004 (tmp/var)

PHPUnit\Framework\never:
     ; (lines=9, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2909-2912
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 1 string("PHPUnit\Framework\MockObject\Rule\InvokedCount")
0002 SEND_VAL_EX int(0) 1
0003 DO_FCALL
0004 VERIFY_RETURN_TYPE V0
0005 RETURN V0
0006 EXT_STMT
0007 VERIFY_RETURN_TYPE
0008 RETURN null
LIVE RANGES:
     0: 0002 - 0004 (new)
     0: 0004 - 0005 (tmp/var)

PHPUnit\Framework\atLeast:
     ; (lines=10, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2920-2925
     ; return  [] RANGE[0..0]
0000 CV0($requiredInvocations) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PHPUnit\Framework\MockObject\Rule\InvokedAtLeastCount")
0003 SEND_VAR_EX CV0($requiredInvocations) 1
0004 DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0003 - 0005 (new)
     1: 0005 - 0006 (tmp/var)

PHPUnit\Framework\atLeastOnce:
     ; (lines=8, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2932-2935
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 0 string("PHPUnit\Framework\MockObject\Rule\InvokedAtLeastOnce")
0002 DO_FCALL
0003 VERIFY_RETURN_TYPE V0
0004 RETURN V0
0005 EXT_STMT
0006 VERIFY_RETURN_TYPE
0007 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (new)
     0: 0003 - 0004 (tmp/var)

PHPUnit\Framework\once:
     ; (lines=9, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2942-2945
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 1 string("PHPUnit\Framework\MockObject\Rule\InvokedCount")
0002 SEND_VAL_EX int(1) 1
0003 DO_FCALL
0004 VERIFY_RETURN_TYPE V0
0005 RETURN V0
0006 EXT_STMT
0007 VERIFY_RETURN_TYPE
0008 RETURN null
LIVE RANGES:
     0: 0002 - 0004 (new)
     0: 0004 - 0005 (tmp/var)

PHPUnit\Framework\exactly:
     ; (lines=10, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2953-2956
     ; return  [] RANGE[0..0]
0000 CV0($count) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PHPUnit\Framework\MockObject\Rule\InvokedCount")
0003 SEND_VAR_EX CV0($count) 1
0004 DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0003 - 0005 (new)
     1: 0005 - 0006 (tmp/var)

PHPUnit\Framework\atMost:
     ; (lines=10, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2964-2967
     ; return  [] RANGE[0..0]
0000 CV0($allowedInvocations) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PHPUnit\Framework\MockObject\Rule\InvokedAtMostCount")
0003 SEND_VAR_EX CV0($allowedInvocations) 1
0004 DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0003 - 0005 (new)
     1: 0005 - 0006 (tmp/var)

PHPUnit\Framework\at:
     ; (lines=10, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2975-2978
     ; return  [] RANGE[0..0]
0000 CV0($index) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PHPUnit\Framework\MockObject\Rule\InvokedAtIndex")
0003 SEND_VAR_EX CV0($index) 1
0004 DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0003 - 0005 (new)
     1: 0005 - 0006 (tmp/var)

PHPUnit\Framework\returnValue:
     ; (lines=10, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2982-2985
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PHPUnit\Framework\MockObject\Stub\ReturnStub")
0003 SEND_VAR_EX CV0($value) 1
0004 DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0003 - 0005 (new)
     1: 0005 - 0006 (tmp/var)

PHPUnit\Framework\returnValueMap:
     ; (lines=10, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2989-2992
     ; return  [] RANGE[0..0]
0000 CV0($valueMap) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PHPUnit\Framework\MockObject\Stub\ReturnValueMap")
0003 SEND_VAR_EX CV0($valueMap) 1
0004 DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0003 - 0005 (new)
     1: 0005 - 0006 (tmp/var)

PHPUnit\Framework\returnArgument:
     ; (lines=10, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:2996-2999
     ; return  [] RANGE[0..0]
0000 CV0($argumentIndex) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PHPUnit\Framework\MockObject\Stub\ReturnArgument")
0003 SEND_VAR_EX CV0($argumentIndex) 1
0004 DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0003 - 0005 (new)
     1: 0005 - 0006 (tmp/var)

PHPUnit\Framework\returnCallback:
     ; (lines=10, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:3003-3006
     ; return  [] RANGE[0..0]
0000 CV0($callback) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PHPUnit\Framework\MockObject\Stub\ReturnCallback")
0003 SEND_VAR_EX CV0($callback) 1
0004 DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0003 - 0005 (new)
     1: 0005 - 0006 (tmp/var)

PHPUnit\Framework\returnSelf:
     ; (lines=8, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:3015-3018
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 0 string("PHPUnit\Framework\MockObject\Stub\ReturnSelf")
0002 DO_FCALL
0003 VERIFY_RETURN_TYPE V0
0004 RETURN V0
0005 EXT_STMT
0006 VERIFY_RETURN_TYPE
0007 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (new)
     0: 0003 - 0004 (tmp/var)

PHPUnit\Framework\throwException:
     ; (lines=10, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:3022-3025
     ; return  [] RANGE[0..0]
0000 CV0($exception) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PHPUnit\Framework\MockObject\Stub\Exception")
0003 SEND_VAR_EX CV0($exception) 1
0004 DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0003 - 0005 (new)
     1: 0005 - 0006 (tmp/var)

PHPUnit\Framework\onConsecutiveCalls:
     ; (lines=12, args=0, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpunit/phpunit/src/Framework/Assert/Functions.php:3029-3034
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T1 = FUNC_GET_ARGS
0002 ASSIGN CV0($args) T1
0003 EXT_STMT
0004 V3 = NEW 1 string("PHPUnit\Framework\MockObject\Stub\ConsecutiveCalls")
0005 SEND_VAR_EX CV0($args) 1
0006 DO_FCALL
0007 VERIFY_RETURN_TYPE V3
0008 RETURN V3
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     3: 0005 - 0007 (new)
     3: 0007 - 0008 (tmp/var)

$_main:
     ; (lines=69, args=0, vars=0, tmps=15)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php80/bootstrap.php:1-43
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 JMPZ bool(true) 0005
0003 EXT_STMT
0004 RETURN null
0005 EXT_STMT
0006 JMPZ bool(false) 0012
0007 EXT_STMT
0008 INIT_FCALL 2 112 string("define")
0009 SEND_VAL string("FILTER_VALIDATE_BOOL") 1
0010 SEND_VAL int(258) 2
0011 DO_FCALL
0012 EXT_STMT
0013 INIT_FCALL 1 96 string("function_exists")
0014 SEND_VAL string("fdiv") 1
0015 V1 = DO_FCALL
0016 T2 = BOOL_NOT V1
0017 JMPZ T2 0020
0018 EXT_STMT
0019 DECLARE_FUNCTION string("fdiv")
0020 EXT_STMT
0021 INIT_FCALL 1 96 string("function_exists")
0022 SEND_VAL string("preg_last_error_msg") 1
0023 V3 = DO_FCALL
0024 T4 = BOOL_NOT V3
0025 JMPZ T4 0028
0026 EXT_STMT
0027 DECLARE_FUNCTION string("preg_last_error_msg")
0028 EXT_STMT
0029 INIT_FCALL 1 96 string("function_exists")
0030 SEND_VAL string("str_contains") 1
0031 V5 = DO_FCALL
0032 T6 = BOOL_NOT V5
0033 JMPZ T6 0036
0034 EXT_STMT
0035 DECLARE_FUNCTION string("str_contains")
0036 EXT_STMT
0037 INIT_FCALL 1 96 string("function_exists")
0038 SEND_VAL string("str_starts_with") 1
0039 V7 = DO_FCALL
0040 T8 = BOOL_NOT V7
0041 JMPZ T8 0044
0042 EXT_STMT
0043 DECLARE_FUNCTION string("str_starts_with")
0044 EXT_STMT
0045 INIT_FCALL 1 96 string("function_exists")
0046 SEND_VAL string("str_ends_with") 1
0047 V9 = DO_FCALL
0048 T10 = BOOL_NOT V9
0049 JMPZ T10 0052
0050 EXT_STMT
0051 DECLARE_FUNCTION string("str_ends_with")
0052 EXT_STMT
0053 INIT_FCALL 1 96 string("function_exists")
0054 SEND_VAL string("get_debug_type") 1
0055 V11 = DO_FCALL
0056 T12 = BOOL_NOT V11
0057 JMPZ T12 0060
0058 EXT_STMT
0059 DECLARE_FUNCTION string("get_debug_type")
0060 EXT_STMT
0061 INIT_FCALL 1 96 string("function_exists")
0062 SEND_VAL string("get_resource_id") 1
0063 V13 = DO_FCALL
0064 T14 = BOOL_NOT V13
0065 JMPZ T14 0068
0066 EXT_STMT
0067 DECLARE_FUNCTION string("get_resource_id")
0068 RETURN int(1)

fdiv:
     ; (lines=12, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php80/bootstrap.php:23-23
     ; return  [] RANGE[0..0]
0000 CV0($num1) = RECV 1
0001 CV1($num2) = RECV 2
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Php80\Php80") string("fdiv")
0004 SEND_VAR_EX CV0($num1) 1
0005 SEND_VAR_EX CV1($num2) 2
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

preg_last_error_msg:
     ; (lines=8, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php80/bootstrap.php:26-26
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("Symfony\Polyfill\Php80\Php80") string("preg_last_error_msg")
0002 V0 = DO_FCALL
0003 VERIFY_RETURN_TYPE V0
0004 RETURN V0
0005 EXT_STMT
0006 VERIFY_RETURN_TYPE
0007 RETURN null
LIVE RANGES:
     0: 0003 - 0004 (tmp/var)

str_contains:
     ; (lines=16, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php80/bootstrap.php:29-29
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Php80\Php80") string("str_contains")
0004 T2 = COALESCE CV0($haystack) 0006
0005 T2 = QM_ASSIGN string("")
0006 SEND_VAL_EX T2 1
0007 T3 = COALESCE CV1($needle) 0009
0008 T3 = QM_ASSIGN string("")
0009 SEND_VAL_EX T3 2
0010 V4 = DO_FCALL
0011 VERIFY_RETURN_TYPE V4
0012 RETURN V4
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE
0015 RETURN null
LIVE RANGES:
     4: 0011 - 0012 (tmp/var)

str_starts_with:
     ; (lines=16, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php80/bootstrap.php:32-32
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Php80\Php80") string("str_starts_with")
0004 T2 = COALESCE CV0($haystack) 0006
0005 T2 = QM_ASSIGN string("")
0006 SEND_VAL_EX T2 1
0007 T3 = COALESCE CV1($needle) 0009
0008 T3 = QM_ASSIGN string("")
0009 SEND_VAL_EX T3 2
0010 V4 = DO_FCALL
0011 VERIFY_RETURN_TYPE V4
0012 RETURN V4
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE
0015 RETURN null
LIVE RANGES:
     4: 0011 - 0012 (tmp/var)

str_ends_with:
     ; (lines=16, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php80/bootstrap.php:35-35
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Php80\Php80") string("str_ends_with")
0004 T2 = COALESCE CV0($haystack) 0006
0005 T2 = QM_ASSIGN string("")
0006 SEND_VAL_EX T2 1
0007 T3 = COALESCE CV1($needle) 0009
0008 T3 = QM_ASSIGN string("")
0009 SEND_VAL_EX T3 2
0010 V4 = DO_FCALL
0011 VERIFY_RETURN_TYPE V4
0012 RETURN V4
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE
0015 RETURN null
LIVE RANGES:
     4: 0011 - 0012 (tmp/var)

get_debug_type:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php80/bootstrap.php:38-38
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Php80\Php80") string("get_debug_type")
0003 SEND_VAR_EX CV0($value) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

get_resource_id:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php80/bootstrap.php:41-41
     ; return  [] RANGE[0..0]
0000 CV0($resource) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Php80\Php80") string("get_resource_id")
0003 SEND_VAR_EX CV0($resource) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/deprecation-contracts/function.php:1-28
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_FCALL 1 96 string("function_exists")
0002 SEND_VAL string("trigger_deprecation") 1
0003 V0 = DO_FCALL
0004 T1 = BOOL_NOT V0
0005 JMPZ T1 0008
0006 EXT_STMT
0007 DECLARE_FUNCTION string("trigger_deprecation")
0008 RETURN int(1)

trigger_deprecation:
     ; (lines=33, args=3, vars=4, tmps=11)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/deprecation-contracts/function.php:23-26
     ; return  [] RANGE[0..0]
0000 CV0($package) = RECV 1
0001 CV1($version) = RECV 2
0002 CV2($message) = RECV 3
0003 CV3($args) = RECV_VARIADIC 4
0004 EXT_STMT
0005 T4 = BEGIN_SILENCE
0006 INIT_FCALL 2 112 string("trigger_error")
0007 T5 = JMPNZ_EX CV0($package) 0009
0008 T5 = BOOL CV1($version)
0009 JMPZ T5 0017
0010 T7 = ROPE_INIT 5 string("Since ")
0011 T7 = ROPE_ADD 1 T7 CV0($package)
0012 T7 = ROPE_ADD 2 T7 string(" ")
0013 T7 = ROPE_ADD 3 T7 CV1($version)
0014 T6 = ROPE_END 4 T7 string(": ")
0015 T10 = QM_ASSIGN T6
0016 JMP 0018
0017 T10 = QM_ASSIGN string("")
0018 JMPZ CV3($args) 0025
0019 INIT_FCALL 2 112 string("vsprintf")
0020 SEND_VAR CV2($message) 1
0021 SEND_VAR CV3($args) 2
0022 V11 = DO_FCALL
0023 T12 = QM_ASSIGN V11
0024 JMP 0026
0025 T12 = QM_ASSIGN CV2($message)
0026 T13 = CONCAT T10 T12
0027 SEND_VAL T13 1
0028 SEND_VAL int(16384) 2
0029 DO_FCALL
0030 END_SILENCE T4
0031 EXT_STMT
0032 RETURN null
LIVE RANGES:
     4: 0006 - 0030 (silence)
     7: 0010 - 0014 (rope)
     10: 0018 - 0026 (tmp/var)

$_main:
     ; (lines=339, args=0, vars=0, tmps=81)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:1-148
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 JMPZ bool(true) 0006
0003 EXT_STMT
0004 V0 = INCLUDE_OR_EVAL (require) string("/home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php")
0005 RETURN V0
0006 EXT_STMT
0007 INIT_FCALL 1 96 string("function_exists")
0008 SEND_VAL string("mb_convert_encoding") 1
0009 V1 = DO_FCALL
0010 T2 = BOOL_NOT V1
0011 JMPZ T2 0014
0012 EXT_STMT
0013 DECLARE_FUNCTION string("mb_convert_encoding")
0014 EXT_STMT
0015 INIT_FCALL 1 96 string("function_exists")
0016 SEND_VAL string("mb_decode_mimeheader") 1
0017 V3 = DO_FCALL
0018 T4 = BOOL_NOT V3
0019 JMPZ T4 0022
0020 EXT_STMT
0021 DECLARE_FUNCTION string("mb_decode_mimeheader")
0022 EXT_STMT
0023 INIT_FCALL 1 96 string("function_exists")
0024 SEND_VAL string("mb_encode_mimeheader") 1
0025 V5 = DO_FCALL
0026 T6 = BOOL_NOT V5
0027 JMPZ T6 0030
0028 EXT_STMT
0029 DECLARE_FUNCTION string("mb_encode_mimeheader")
0030 EXT_STMT
0031 INIT_FCALL 1 96 string("function_exists")
0032 SEND_VAL string("mb_decode_numericentity") 1
0033 V7 = DO_FCALL
0034 T8 = BOOL_NOT V7
0035 JMPZ T8 0038
0036 EXT_STMT
0037 DECLARE_FUNCTION string("mb_decode_numericentity")
0038 EXT_STMT
0039 INIT_FCALL 1 96 string("function_exists")
0040 SEND_VAL string("mb_encode_numericentity") 1
0041 V9 = DO_FCALL
0042 T10 = BOOL_NOT V9
0043 JMPZ T10 0046
0044 EXT_STMT
0045 DECLARE_FUNCTION string("mb_encode_numericentity")
0046 EXT_STMT
0047 INIT_FCALL 1 96 string("function_exists")
0048 SEND_VAL string("mb_convert_case") 1
0049 V11 = DO_FCALL
0050 T12 = BOOL_NOT V11
0051 JMPZ T12 0054
0052 EXT_STMT
0053 DECLARE_FUNCTION string("mb_convert_case")
0054 EXT_STMT
0055 INIT_FCALL 1 96 string("function_exists")
0056 SEND_VAL string("mb_internal_encoding") 1
0057 V13 = DO_FCALL
0058 T14 = BOOL_NOT V13
0059 JMPZ T14 0062
0060 EXT_STMT
0061 DECLARE_FUNCTION string("mb_internal_encoding")
0062 EXT_STMT
0063 INIT_FCALL 1 96 string("function_exists")
0064 SEND_VAL string("mb_language") 1
0065 V15 = DO_FCALL
0066 T16 = BOOL_NOT V15
0067 JMPZ T16 0070
0068 EXT_STMT
0069 DECLARE_FUNCTION string("mb_language")
0070 EXT_STMT
0071 INIT_FCALL 1 96 string("function_exists")
0072 SEND_VAL string("mb_list_encodings") 1
0073 V17 = DO_FCALL
0074 T18 = BOOL_NOT V17
0075 JMPZ T18 0078
0076 EXT_STMT
0077 DECLARE_FUNCTION string("mb_list_encodings")
0078 EXT_STMT
0079 INIT_FCALL 1 96 string("function_exists")
0080 SEND_VAL string("mb_encoding_aliases") 1
0081 V19 = DO_FCALL
0082 T20 = BOOL_NOT V19
0083 JMPZ T20 0086
0084 EXT_STMT
0085 DECLARE_FUNCTION string("mb_encoding_aliases")
0086 EXT_STMT
0087 INIT_FCALL 1 96 string("function_exists")
0088 SEND_VAL string("mb_check_encoding") 1
0089 V21 = DO_FCALL
0090 T22 = BOOL_NOT V21
0091 JMPZ T22 0094
0092 EXT_STMT
0093 DECLARE_FUNCTION string("mb_check_encoding")
0094 EXT_STMT
0095 INIT_FCALL 1 96 string("function_exists")
0096 SEND_VAL string("mb_detect_encoding") 1
0097 V23 = DO_FCALL
0098 T24 = BOOL_NOT V23
0099 JMPZ T24 0102
0100 EXT_STMT
0101 DECLARE_FUNCTION string("mb_detect_encoding")
0102 EXT_STMT
0103 INIT_FCALL 1 96 string("function_exists")
0104 SEND_VAL string("mb_detect_order") 1
0105 V25 = DO_FCALL
0106 T26 = BOOL_NOT V25
0107 JMPZ T26 0110
0108 EXT_STMT
0109 DECLARE_FUNCTION string("mb_detect_order")
0110 EXT_STMT
0111 INIT_FCALL 1 96 string("function_exists")
0112 SEND_VAL string("mb_parse_str") 1
0113 V27 = DO_FCALL
0114 T28 = BOOL_NOT V27
0115 JMPZ T28 0118
0116 EXT_STMT
0117 DECLARE_FUNCTION string("mb_parse_str")
0118 EXT_STMT
0119 INIT_FCALL 1 96 string("function_exists")
0120 SEND_VAL string("mb_strlen") 1
0121 V29 = DO_FCALL
0122 T30 = BOOL_NOT V29
0123 JMPZ T30 0126
0124 EXT_STMT
0125 DECLARE_FUNCTION string("mb_strlen")
0126 EXT_STMT
0127 INIT_FCALL 1 96 string("function_exists")
0128 SEND_VAL string("mb_strpos") 1
0129 V31 = DO_FCALL
0130 T32 = BOOL_NOT V31
0131 JMPZ T32 0134
0132 EXT_STMT
0133 DECLARE_FUNCTION string("mb_strpos")
0134 EXT_STMT
0135 INIT_FCALL 1 96 string("function_exists")
0136 SEND_VAL string("mb_strtolower") 1
0137 V33 = DO_FCALL
0138 T34 = BOOL_NOT V33
0139 JMPZ T34 0142
0140 EXT_STMT
0141 DECLARE_FUNCTION string("mb_strtolower")
0142 EXT_STMT
0143 INIT_FCALL 1 96 string("function_exists")
0144 SEND_VAL string("mb_strtoupper") 1
0145 V35 = DO_FCALL
0146 T36 = BOOL_NOT V35
0147 JMPZ T36 0150
0148 EXT_STMT
0149 DECLARE_FUNCTION string("mb_strtoupper")
0150 EXT_STMT
0151 INIT_FCALL 1 96 string("function_exists")
0152 SEND_VAL string("mb_substitute_character") 1
0153 V37 = DO_FCALL
0154 T38 = BOOL_NOT V37
0155 JMPZ T38 0158
0156 EXT_STMT
0157 DECLARE_FUNCTION string("mb_substitute_character")
0158 EXT_STMT
0159 INIT_FCALL 1 96 string("function_exists")
0160 SEND_VAL string("mb_substr") 1
0161 V39 = DO_FCALL
0162 T40 = BOOL_NOT V39
0163 JMPZ T40 0166
0164 EXT_STMT
0165 DECLARE_FUNCTION string("mb_substr")
0166 EXT_STMT
0167 INIT_FCALL 1 96 string("function_exists")
0168 SEND_VAL string("mb_stripos") 1
0169 V41 = DO_FCALL
0170 T42 = BOOL_NOT V41
0171 JMPZ T42 0174
0172 EXT_STMT
0173 DECLARE_FUNCTION string("mb_stripos")
0174 EXT_STMT
0175 INIT_FCALL 1 96 string("function_exists")
0176 SEND_VAL string("mb_stristr") 1
0177 V43 = DO_FCALL
0178 T44 = BOOL_NOT V43
0179 JMPZ T44 0182
0180 EXT_STMT
0181 DECLARE_FUNCTION string("mb_stristr")
0182 EXT_STMT
0183 INIT_FCALL 1 96 string("function_exists")
0184 SEND_VAL string("mb_strrchr") 1
0185 V45 = DO_FCALL
0186 T46 = BOOL_NOT V45
0187 JMPZ T46 0190
0188 EXT_STMT
0189 DECLARE_FUNCTION string("mb_strrchr")
0190 EXT_STMT
0191 INIT_FCALL 1 96 string("function_exists")
0192 SEND_VAL string("mb_strrichr") 1
0193 V47 = DO_FCALL
0194 T48 = BOOL_NOT V47
0195 JMPZ T48 0198
0196 EXT_STMT
0197 DECLARE_FUNCTION string("mb_strrichr")
0198 EXT_STMT
0199 INIT_FCALL 1 96 string("function_exists")
0200 SEND_VAL string("mb_strripos") 1
0201 V49 = DO_FCALL
0202 T50 = BOOL_NOT V49
0203 JMPZ T50 0206
0204 EXT_STMT
0205 DECLARE_FUNCTION string("mb_strripos")
0206 EXT_STMT
0207 INIT_FCALL 1 96 string("function_exists")
0208 SEND_VAL string("mb_strrpos") 1
0209 V51 = DO_FCALL
0210 T52 = BOOL_NOT V51
0211 JMPZ T52 0214
0212 EXT_STMT
0213 DECLARE_FUNCTION string("mb_strrpos")
0214 EXT_STMT
0215 INIT_FCALL 1 96 string("function_exists")
0216 SEND_VAL string("mb_strstr") 1
0217 V53 = DO_FCALL
0218 T54 = BOOL_NOT V53
0219 JMPZ T54 0222
0220 EXT_STMT
0221 DECLARE_FUNCTION string("mb_strstr")
0222 EXT_STMT
0223 INIT_FCALL 1 96 string("function_exists")
0224 SEND_VAL string("mb_get_info") 1
0225 V55 = DO_FCALL
0226 T56 = BOOL_NOT V55
0227 JMPZ T56 0230
0228 EXT_STMT
0229 DECLARE_FUNCTION string("mb_get_info")
0230 EXT_STMT
0231 INIT_FCALL 1 96 string("function_exists")
0232 SEND_VAL string("mb_http_output") 1
0233 V57 = DO_FCALL
0234 T58 = BOOL_NOT V57
0235 JMPZ T58 0238
0236 EXT_STMT
0237 DECLARE_FUNCTION string("mb_http_output")
0238 EXT_STMT
0239 INIT_FCALL 1 96 string("function_exists")
0240 SEND_VAL string("mb_strwidth") 1
0241 V59 = DO_FCALL
0242 T60 = BOOL_NOT V59
0243 JMPZ T60 0246
0244 EXT_STMT
0245 DECLARE_FUNCTION string("mb_strwidth")
0246 EXT_STMT
0247 INIT_FCALL 1 96 string("function_exists")
0248 SEND_VAL string("mb_substr_count") 1
0249 V61 = DO_FCALL
0250 T62 = BOOL_NOT V61
0251 JMPZ T62 0254
0252 EXT_STMT
0253 DECLARE_FUNCTION string("mb_substr_count")
0254 EXT_STMT
0255 INIT_FCALL 1 96 string("function_exists")
0256 SEND_VAL string("mb_output_handler") 1
0257 V63 = DO_FCALL
0258 T64 = BOOL_NOT V63
0259 JMPZ T64 0262
0260 EXT_STMT
0261 DECLARE_FUNCTION string("mb_output_handler")
0262 EXT_STMT
0263 INIT_FCALL 1 96 string("function_exists")
0264 SEND_VAL string("mb_http_input") 1
0265 V65 = DO_FCALL
0266 T66 = BOOL_NOT V65
0267 JMPZ T66 0270
0268 EXT_STMT
0269 DECLARE_FUNCTION string("mb_http_input")
0270 EXT_STMT
0271 INIT_FCALL 1 96 string("function_exists")
0272 SEND_VAL string("mb_convert_variables") 1
0273 V67 = DO_FCALL
0274 T68 = BOOL_NOT V67
0275 JMPZ T68 0278
0276 EXT_STMT
0277 DECLARE_FUNCTION string("mb_convert_variables")
0278 EXT_STMT
0279 INIT_FCALL 1 96 string("function_exists")
0280 SEND_VAL string("mb_ord") 1
0281 V69 = DO_FCALL
0282 T70 = BOOL_NOT V69
0283 JMPZ T70 0286
0284 EXT_STMT
0285 DECLARE_FUNCTION string("mb_ord")
0286 EXT_STMT
0287 INIT_FCALL 1 96 string("function_exists")
0288 SEND_VAL string("mb_chr") 1
0289 V71 = DO_FCALL
0290 T72 = BOOL_NOT V71
0291 JMPZ T72 0294
0292 EXT_STMT
0293 DECLARE_FUNCTION string("mb_chr")
0294 EXT_STMT
0295 INIT_FCALL 1 96 string("function_exists")
0296 SEND_VAL string("mb_scrub") 1
0297 V73 = DO_FCALL
0298 T74 = BOOL_NOT V73
0299 JMPZ T74 0302
0300 EXT_STMT
0301 DECLARE_FUNCTION string("mb_scrub")
0302 EXT_STMT
0303 INIT_FCALL 1 96 string("function_exists")
0304 SEND_VAL string("mb_str_split") 1
0305 V75 = DO_FCALL
0306 T76 = BOOL_NOT V75
0307 JMPZ T76 0310
0308 EXT_STMT
0309 DECLARE_FUNCTION string("mb_str_split")
0310 EXT_STMT
0311 INIT_FCALL 1 96 string("extension_loaded")
0312 SEND_VAL string("mbstring") 1
0313 V77 = DO_FCALL
0314 JMPZ V77 0317
0315 EXT_STMT
0316 RETURN null
0317 EXT_STMT
0318 JMPZ bool(false) 0324
0319 EXT_STMT
0320 INIT_FCALL 2 112 string("define")
0321 SEND_VAL string("MB_CASE_UPPER") 1
0322 SEND_VAL int(0) 2
0323 DO_FCALL
0324 EXT_STMT
0325 JMPZ bool(false) 0331
0326 EXT_STMT
0327 INIT_FCALL 2 112 string("define")
0328 SEND_VAL string("MB_CASE_LOWER") 1
0329 SEND_VAL int(1) 2
0330 DO_FCALL
0331 EXT_STMT
0332 JMPZ bool(false) 0338
0333 EXT_STMT
0334 INIT_FCALL 2 112 string("define")
0335 SEND_VAL string("MB_CASE_TITLE") 1
0336 SEND_VAL int(2) 2
0337 DO_FCALL
0338 RETURN int(1)

mb_convert_encoding:
     ; (lines=12, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:19-19
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($to_encoding) = RECV 2
0002 CV2($from_encoding) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_convert_encoding")
0005 SEND_VAR_EX CV0($string) 1
0006 SEND_VAR_EX CV1($to_encoding) 2
0007 SEND_VAR_EX CV2($from_encoding) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

mb_decode_mimeheader:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:22-22
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_decode_mimeheader")
0003 SEND_VAR_EX CV0($string) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

mb_encode_mimeheader:
     ; (lines=16, args=5, vars=5, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:25-25
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($charset) = RECV_INIT 2 null
0002 CV2($transfer_encoding) = RECV_INIT 3 null
0003 CV3($newline) = RECV_INIT 4 string("
")
0004 CV4($indent) = RECV_INIT 5 int(0)
0005 EXT_STMT
0006 INIT_STATIC_METHOD_CALL 5 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_encode_mimeheader")
0007 SEND_VAR_EX CV0($string) 1
0008 SEND_VAR_EX CV1($charset) 2
0009 SEND_VAR_EX CV2($transfer_encoding) 3
0010 SEND_VAR_EX CV3($newline) 4
0011 SEND_VAR_EX CV4($indent) 5
0012 V5 = DO_FCALL
0013 RETURN V5
0014 EXT_STMT
0015 RETURN null

mb_decode_numericentity:
     ; (lines=12, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:28-28
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($map) = RECV 2
0002 CV2($encoding) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_decode_numericentity")
0005 SEND_VAR_EX CV0($string) 1
0006 SEND_VAR_EX CV1($map) 2
0007 SEND_VAR_EX CV2($encoding) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

mb_encode_numericentity:
     ; (lines=14, args=4, vars=4, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:31-31
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($map) = RECV 2
0002 CV2($encoding) = RECV_INIT 3 null
0003 CV3($hex) = RECV_INIT 4 bool(false)
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_encode_numericentity")
0006 SEND_VAR_EX CV0($string) 1
0007 SEND_VAR_EX CV1($map) 2
0008 SEND_VAR_EX CV2($encoding) 3
0009 SEND_VAR_EX CV3($hex) 4
0010 V4 = DO_FCALL
0011 RETURN V4
0012 EXT_STMT
0013 RETURN null

mb_convert_case:
     ; (lines=12, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:34-34
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($mode) = RECV 2
0002 CV2($encoding) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_convert_case")
0005 SEND_VAR_EX CV0($string) 1
0006 SEND_VAR_EX CV1($mode) 2
0007 SEND_VAR_EX CV2($encoding) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

mb_internal_encoding:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:37-37
     ; return  [] RANGE[0..0]
0000 CV0($encoding) = RECV_INIT 1 null
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_internal_encoding")
0003 SEND_VAR_EX CV0($encoding) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

mb_language:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:40-40
     ; return  [] RANGE[0..0]
0000 CV0($language) = RECV_INIT 1 null
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_language")
0003 SEND_VAR_EX CV0($language) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

mb_list_encodings:
     ; (lines=6, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:43-43
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_list_encodings")
0002 V0 = DO_FCALL
0003 RETURN V0
0004 EXT_STMT
0005 RETURN null

mb_encoding_aliases:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:46-46
     ; return  [] RANGE[0..0]
0000 CV0($encoding) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_encoding_aliases")
0003 SEND_VAR_EX CV0($encoding) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

mb_check_encoding:
     ; (lines=10, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:49-49
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV_INIT 1 null
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_check_encoding")
0004 SEND_VAR_EX CV0($value) 1
0005 SEND_VAR_EX CV1($encoding) 2
0006 V2 = DO_FCALL
0007 RETURN V2
0008 EXT_STMT
0009 RETURN null

mb_detect_encoding:
     ; (lines=12, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:52-52
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encodings) = RECV_INIT 2 null
0002 CV2($strict) = RECV_INIT 3 bool(false)
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_detect_encoding")
0005 SEND_VAR_EX CV0($string) 1
0006 SEND_VAR_EX CV1($encodings) 2
0007 SEND_VAR_EX CV2($strict) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

mb_detect_order:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:55-55
     ; return  [] RANGE[0..0]
0000 CV0($encoding) = RECV_INIT 1 null
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_detect_order")
0003 SEND_VAR_EX CV0($encoding) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

mb_parse_str:
     ; (lines=12, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:58-58
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($result) = RECV_INIT 2 array(...)
0002 EXT_STMT
0003 INIT_FCALL 2 112 string("parse_str")
0004 SEND_VAR CV0($string) 1
0005 SEND_REF CV1($result) 2
0006 DO_FCALL
0007 EXT_STMT
0008 T3 = BOOL CV1($result)
0009 RETURN T3
0010 EXT_STMT
0011 RETURN null

mb_strlen:
     ; (lines=10, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:61-61
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strlen")
0004 SEND_VAR_EX CV0($string) 1
0005 SEND_VAR_EX CV1($encoding) 2
0006 V2 = DO_FCALL
0007 RETURN V2
0008 EXT_STMT
0009 RETURN null

mb_strpos:
     ; (lines=14, args=4, vars=4, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:64-64
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($offset) = RECV_INIT 3 int(0)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strpos")
0006 SEND_VAR_EX CV0($haystack) 1
0007 SEND_VAR_EX CV1($needle) 2
0008 SEND_VAR_EX CV2($offset) 3
0009 SEND_VAR_EX CV3($encoding) 4
0010 V4 = DO_FCALL
0011 RETURN V4
0012 EXT_STMT
0013 RETURN null

mb_strtolower:
     ; (lines=10, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:67-67
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strtolower")
0004 SEND_VAR_EX CV0($string) 1
0005 SEND_VAR_EX CV1($encoding) 2
0006 V2 = DO_FCALL
0007 RETURN V2
0008 EXT_STMT
0009 RETURN null

mb_strtoupper:
     ; (lines=10, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:70-70
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strtoupper")
0004 SEND_VAR_EX CV0($string) 1
0005 SEND_VAR_EX CV1($encoding) 2
0006 V2 = DO_FCALL
0007 RETURN V2
0008 EXT_STMT
0009 RETURN null

mb_substitute_character:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:73-73
     ; return  [] RANGE[0..0]
0000 CV0($substitute_character) = RECV_INIT 1 null
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_substitute_character")
0003 SEND_VAR_EX CV0($substitute_character) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

mb_substr:
     ; (lines=14, args=4, vars=4, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:76-76
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($start) = RECV 2
0002 CV2($length) = RECV_INIT 3 int(2147483647)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_substr")
0006 SEND_VAR_EX CV0($string) 1
0007 SEND_VAR_EX CV1($start) 2
0008 SEND_VAR_EX CV2($length) 3
0009 SEND_VAR_EX CV3($encoding) 4
0010 V4 = DO_FCALL
0011 RETURN V4
0012 EXT_STMT
0013 RETURN null

mb_stripos:
     ; (lines=14, args=4, vars=4, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:79-79
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($offset) = RECV_INIT 3 int(0)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_stripos")
0006 SEND_VAR_EX CV0($haystack) 1
0007 SEND_VAR_EX CV1($needle) 2
0008 SEND_VAR_EX CV2($offset) 3
0009 SEND_VAR_EX CV3($encoding) 4
0010 V4 = DO_FCALL
0011 RETURN V4
0012 EXT_STMT
0013 RETURN null

mb_stristr:
     ; (lines=14, args=4, vars=4, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:82-82
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($before_needle) = RECV_INIT 3 bool(false)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_stristr")
0006 SEND_VAR_EX CV0($haystack) 1
0007 SEND_VAR_EX CV1($needle) 2
0008 SEND_VAR_EX CV2($before_needle) 3
0009 SEND_VAR_EX CV3($encoding) 4
0010 V4 = DO_FCALL
0011 RETURN V4
0012 EXT_STMT
0013 RETURN null

mb_strrchr:
     ; (lines=14, args=4, vars=4, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:85-85
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($before_needle) = RECV_INIT 3 bool(false)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strrchr")
0006 SEND_VAR_EX CV0($haystack) 1
0007 SEND_VAR_EX CV1($needle) 2
0008 SEND_VAR_EX CV2($before_needle) 3
0009 SEND_VAR_EX CV3($encoding) 4
0010 V4 = DO_FCALL
0011 RETURN V4
0012 EXT_STMT
0013 RETURN null

mb_strrichr:
     ; (lines=14, args=4, vars=4, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:88-88
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($before_needle) = RECV_INIT 3 bool(false)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strrichr")
0006 SEND_VAR_EX CV0($haystack) 1
0007 SEND_VAR_EX CV1($needle) 2
0008 SEND_VAR_EX CV2($before_needle) 3
0009 SEND_VAR_EX CV3($encoding) 4
0010 V4 = DO_FCALL
0011 RETURN V4
0012 EXT_STMT
0013 RETURN null

mb_strripos:
     ; (lines=14, args=4, vars=4, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:91-91
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($offset) = RECV_INIT 3 int(0)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strripos")
0006 SEND_VAR_EX CV0($haystack) 1
0007 SEND_VAR_EX CV1($needle) 2
0008 SEND_VAR_EX CV2($offset) 3
0009 SEND_VAR_EX CV3($encoding) 4
0010 V4 = DO_FCALL
0011 RETURN V4
0012 EXT_STMT
0013 RETURN null

mb_strrpos:
     ; (lines=14, args=4, vars=4, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:94-94
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($offset) = RECV_INIT 3 int(0)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strrpos")
0006 SEND_VAR_EX CV0($haystack) 1
0007 SEND_VAR_EX CV1($needle) 2
0008 SEND_VAR_EX CV2($offset) 3
0009 SEND_VAR_EX CV3($encoding) 4
0010 V4 = DO_FCALL
0011 RETURN V4
0012 EXT_STMT
0013 RETURN null

mb_strstr:
     ; (lines=14, args=4, vars=4, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:97-97
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($before_needle) = RECV_INIT 3 bool(false)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strstr")
0006 SEND_VAR_EX CV0($haystack) 1
0007 SEND_VAR_EX CV1($needle) 2
0008 SEND_VAR_EX CV2($before_needle) 3
0009 SEND_VAR_EX CV3($encoding) 4
0010 V4 = DO_FCALL
0011 RETURN V4
0012 EXT_STMT
0013 RETURN null

mb_get_info:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:100-100
     ; return  [] RANGE[0..0]
0000 CV0($type) = RECV_INIT 1 string("all")
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_get_info")
0003 SEND_VAR_EX CV0($type) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

mb_http_output:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:103-103
     ; return  [] RANGE[0..0]
0000 CV0($encoding) = RECV_INIT 1 null
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_http_output")
0003 SEND_VAR_EX CV0($encoding) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

mb_strwidth:
     ; (lines=10, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:106-106
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strwidth")
0004 SEND_VAR_EX CV0($string) 1
0005 SEND_VAR_EX CV1($encoding) 2
0006 V2 = DO_FCALL
0007 RETURN V2
0008 EXT_STMT
0009 RETURN null

mb_substr_count:
     ; (lines=12, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:109-109
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($encoding) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_substr_count")
0005 SEND_VAR_EX CV0($haystack) 1
0006 SEND_VAR_EX CV1($needle) 2
0007 SEND_VAR_EX CV2($encoding) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

mb_output_handler:
     ; (lines=10, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:112-112
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($status) = RECV 2
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_output_handler")
0004 SEND_VAR_EX CV0($string) 1
0005 SEND_VAR_EX CV1($status) 2
0006 V2 = DO_FCALL
0007 RETURN V2
0008 EXT_STMT
0009 RETURN null

mb_http_input:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:115-115
     ; return  [] RANGE[0..0]
0000 CV0($type) = RECV_INIT 1 null
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_http_input")
0003 SEND_VAR_EX CV0($type) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

mb_convert_variables:
     ; (lines=13, args=2, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:119-119
     ; return  [] RANGE[0..0]
0000 CV0($to_encoding) = RECV 1
0001 CV1($from_encoding) = RECV 2
0002 CV2($vars) = RECV_VARIADIC 3
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_convert_variables")
0005 SEND_VAR_EX CV0($to_encoding) 1
0006 SEND_VAR_EX CV1($from_encoding) 2
0007 SEND_UNPACK CV2($vars)
0008 CHECK_UNDEF_ARGS
0009 V3 = DO_FCALL
0010 RETURN V3
0011 EXT_STMT
0012 RETURN null

mb_ord:
     ; (lines=10, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:123-123
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_ord")
0004 SEND_VAR_EX CV0($string) 1
0005 SEND_VAR_EX CV1($encoding) 2
0006 V2 = DO_FCALL
0007 RETURN V2
0008 EXT_STMT
0009 RETURN null

mb_chr:
     ; (lines=10, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:126-126
     ; return  [] RANGE[0..0]
0000 CV0($codepoint) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_chr")
0004 SEND_VAR_EX CV0($codepoint) 1
0005 SEND_VAR_EX CV1($encoding) 2
0006 V2 = DO_FCALL
0007 RETURN V2
0008 EXT_STMT
0009 RETURN null

mb_scrub:
     ; (lines=20, args=2, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:129-129
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 T2 = TYPE_CHECK (null) CV1($encoding)
0004 JMPZ T2 0009
0005 INIT_FCALL 0 80 string("mb_internal_encoding")
0006 V3 = DO_FCALL
0007 T4 = QM_ASSIGN V3
0008 JMP 0010
0009 T4 = QM_ASSIGN CV1($encoding)
0010 ASSIGN CV1($encoding) T4
0011 EXT_STMT
0012 INIT_FCALL 3 128 string("mb_convert_encoding")
0013 SEND_VAR CV0($string) 1
0014 SEND_VAR CV1($encoding) 2
0015 SEND_VAR CV1($encoding) 3
0016 V6 = DO_FCALL
0017 RETURN V6
0018 EXT_STMT
0019 RETURN null

mb_str_split:
     ; (lines=12, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap.php:132-132
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($length) = RECV_INIT 2 int(1)
0002 CV2($encoding) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_str_split")
0005 SEND_VAR_EX CV0($string) 1
0006 SEND_VAR_EX CV1($length) 2
0007 SEND_VAR_EX CV2($encoding) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

$_main:
     ; (lines=334, args=0, vars=0, tmps=80)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:1-144
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 INIT_FCALL 1 96 string("function_exists")
0003 SEND_VAL string("mb_convert_encoding") 1
0004 V0 = DO_FCALL
0005 T1 = BOOL_NOT V0
0006 JMPZ T1 0009
0007 EXT_STMT
0008 DECLARE_FUNCTION string("mb_convert_encoding")
0009 EXT_STMT
0010 INIT_FCALL 1 96 string("function_exists")
0011 SEND_VAL string("mb_decode_mimeheader") 1
0012 V2 = DO_FCALL
0013 T3 = BOOL_NOT V2
0014 JMPZ T3 0017
0015 EXT_STMT
0016 DECLARE_FUNCTION string("mb_decode_mimeheader")
0017 EXT_STMT
0018 INIT_FCALL 1 96 string("function_exists")
0019 SEND_VAL string("mb_encode_mimeheader") 1
0020 V4 = DO_FCALL
0021 T5 = BOOL_NOT V4
0022 JMPZ T5 0025
0023 EXT_STMT
0024 DECLARE_FUNCTION string("mb_encode_mimeheader")
0025 EXT_STMT
0026 INIT_FCALL 1 96 string("function_exists")
0027 SEND_VAL string("mb_decode_numericentity") 1
0028 V6 = DO_FCALL
0029 T7 = BOOL_NOT V6
0030 JMPZ T7 0033
0031 EXT_STMT
0032 DECLARE_FUNCTION string("mb_decode_numericentity")
0033 EXT_STMT
0034 INIT_FCALL 1 96 string("function_exists")
0035 SEND_VAL string("mb_encode_numericentity") 1
0036 V8 = DO_FCALL
0037 T9 = BOOL_NOT V8
0038 JMPZ T9 0041
0039 EXT_STMT
0040 DECLARE_FUNCTION string("mb_encode_numericentity")
0041 EXT_STMT
0042 INIT_FCALL 1 96 string("function_exists")
0043 SEND_VAL string("mb_convert_case") 1
0044 V10 = DO_FCALL
0045 T11 = BOOL_NOT V10
0046 JMPZ T11 0049
0047 EXT_STMT
0048 DECLARE_FUNCTION string("mb_convert_case")
0049 EXT_STMT
0050 INIT_FCALL 1 96 string("function_exists")
0051 SEND_VAL string("mb_internal_encoding") 1
0052 V12 = DO_FCALL
0053 T13 = BOOL_NOT V12
0054 JMPZ T13 0057
0055 EXT_STMT
0056 DECLARE_FUNCTION string("mb_internal_encoding")
0057 EXT_STMT
0058 INIT_FCALL 1 96 string("function_exists")
0059 SEND_VAL string("mb_language") 1
0060 V14 = DO_FCALL
0061 T15 = BOOL_NOT V14
0062 JMPZ T15 0065
0063 EXT_STMT
0064 DECLARE_FUNCTION string("mb_language")
0065 EXT_STMT
0066 INIT_FCALL 1 96 string("function_exists")
0067 SEND_VAL string("mb_list_encodings") 1
0068 V16 = DO_FCALL
0069 T17 = BOOL_NOT V16
0070 JMPZ T17 0073
0071 EXT_STMT
0072 DECLARE_FUNCTION string("mb_list_encodings")
0073 EXT_STMT
0074 INIT_FCALL 1 96 string("function_exists")
0075 SEND_VAL string("mb_encoding_aliases") 1
0076 V18 = DO_FCALL
0077 T19 = BOOL_NOT V18
0078 JMPZ T19 0081
0079 EXT_STMT
0080 DECLARE_FUNCTION string("mb_encoding_aliases")
0081 EXT_STMT
0082 INIT_FCALL 1 96 string("function_exists")
0083 SEND_VAL string("mb_check_encoding") 1
0084 V20 = DO_FCALL
0085 T21 = BOOL_NOT V20
0086 JMPZ T21 0089
0087 EXT_STMT
0088 DECLARE_FUNCTION string("mb_check_encoding")
0089 EXT_STMT
0090 INIT_FCALL 1 96 string("function_exists")
0091 SEND_VAL string("mb_detect_encoding") 1
0092 V22 = DO_FCALL
0093 T23 = BOOL_NOT V22
0094 JMPZ T23 0097
0095 EXT_STMT
0096 DECLARE_FUNCTION string("mb_detect_encoding")
0097 EXT_STMT
0098 INIT_FCALL 1 96 string("function_exists")
0099 SEND_VAL string("mb_detect_order") 1
0100 V24 = DO_FCALL
0101 T25 = BOOL_NOT V24
0102 JMPZ T25 0105
0103 EXT_STMT
0104 DECLARE_FUNCTION string("mb_detect_order")
0105 EXT_STMT
0106 INIT_FCALL 1 96 string("function_exists")
0107 SEND_VAL string("mb_parse_str") 1
0108 V26 = DO_FCALL
0109 T27 = BOOL_NOT V26
0110 JMPZ T27 0113
0111 EXT_STMT
0112 DECLARE_FUNCTION string("mb_parse_str")
0113 EXT_STMT
0114 INIT_FCALL 1 96 string("function_exists")
0115 SEND_VAL string("mb_strlen") 1
0116 V28 = DO_FCALL
0117 T29 = BOOL_NOT V28
0118 JMPZ T29 0121
0119 EXT_STMT
0120 DECLARE_FUNCTION string("mb_strlen")
0121 EXT_STMT
0122 INIT_FCALL 1 96 string("function_exists")
0123 SEND_VAL string("mb_strpos") 1
0124 V30 = DO_FCALL
0125 T31 = BOOL_NOT V30
0126 JMPZ T31 0129
0127 EXT_STMT
0128 DECLARE_FUNCTION string("mb_strpos")
0129 EXT_STMT
0130 INIT_FCALL 1 96 string("function_exists")
0131 SEND_VAL string("mb_strtolower") 1
0132 V32 = DO_FCALL
0133 T33 = BOOL_NOT V32
0134 JMPZ T33 0137
0135 EXT_STMT
0136 DECLARE_FUNCTION string("mb_strtolower")
0137 EXT_STMT
0138 INIT_FCALL 1 96 string("function_exists")
0139 SEND_VAL string("mb_strtoupper") 1
0140 V34 = DO_FCALL
0141 T35 = BOOL_NOT V34
0142 JMPZ T35 0145
0143 EXT_STMT
0144 DECLARE_FUNCTION string("mb_strtoupper")
0145 EXT_STMT
0146 INIT_FCALL 1 96 string("function_exists")
0147 SEND_VAL string("mb_substitute_character") 1
0148 V36 = DO_FCALL
0149 T37 = BOOL_NOT V36
0150 JMPZ T37 0153
0151 EXT_STMT
0152 DECLARE_FUNCTION string("mb_substitute_character")
0153 EXT_STMT
0154 INIT_FCALL 1 96 string("function_exists")
0155 SEND_VAL string("mb_substr") 1
0156 V38 = DO_FCALL
0157 T39 = BOOL_NOT V38
0158 JMPZ T39 0161
0159 EXT_STMT
0160 DECLARE_FUNCTION string("mb_substr")
0161 EXT_STMT
0162 INIT_FCALL 1 96 string("function_exists")
0163 SEND_VAL string("mb_stripos") 1
0164 V40 = DO_FCALL
0165 T41 = BOOL_NOT V40
0166 JMPZ T41 0169
0167 EXT_STMT
0168 DECLARE_FUNCTION string("mb_stripos")
0169 EXT_STMT
0170 INIT_FCALL 1 96 string("function_exists")
0171 SEND_VAL string("mb_stristr") 1
0172 V42 = DO_FCALL
0173 T43 = BOOL_NOT V42
0174 JMPZ T43 0177
0175 EXT_STMT
0176 DECLARE_FUNCTION string("mb_stristr")
0177 EXT_STMT
0178 INIT_FCALL 1 96 string("function_exists")
0179 SEND_VAL string("mb_strrchr") 1
0180 V44 = DO_FCALL
0181 T45 = BOOL_NOT V44
0182 JMPZ T45 0185
0183 EXT_STMT
0184 DECLARE_FUNCTION string("mb_strrchr")
0185 EXT_STMT
0186 INIT_FCALL 1 96 string("function_exists")
0187 SEND_VAL string("mb_strrichr") 1
0188 V46 = DO_FCALL
0189 T47 = BOOL_NOT V46
0190 JMPZ T47 0193
0191 EXT_STMT
0192 DECLARE_FUNCTION string("mb_strrichr")
0193 EXT_STMT
0194 INIT_FCALL 1 96 string("function_exists")
0195 SEND_VAL string("mb_strripos") 1
0196 V48 = DO_FCALL
0197 T49 = BOOL_NOT V48
0198 JMPZ T49 0201
0199 EXT_STMT
0200 DECLARE_FUNCTION string("mb_strripos")
0201 EXT_STMT
0202 INIT_FCALL 1 96 string("function_exists")
0203 SEND_VAL string("mb_strrpos") 1
0204 V50 = DO_FCALL
0205 T51 = BOOL_NOT V50
0206 JMPZ T51 0209
0207 EXT_STMT
0208 DECLARE_FUNCTION string("mb_strrpos")
0209 EXT_STMT
0210 INIT_FCALL 1 96 string("function_exists")
0211 SEND_VAL string("mb_strstr") 1
0212 V52 = DO_FCALL
0213 T53 = BOOL_NOT V52
0214 JMPZ T53 0217
0215 EXT_STMT
0216 DECLARE_FUNCTION string("mb_strstr")
0217 EXT_STMT
0218 INIT_FCALL 1 96 string("function_exists")
0219 SEND_VAL string("mb_get_info") 1
0220 V54 = DO_FCALL
0221 T55 = BOOL_NOT V54
0222 JMPZ T55 0225
0223 EXT_STMT
0224 DECLARE_FUNCTION string("mb_get_info")
0225 EXT_STMT
0226 INIT_FCALL 1 96 string("function_exists")
0227 SEND_VAL string("mb_http_output") 1
0228 V56 = DO_FCALL
0229 T57 = BOOL_NOT V56
0230 JMPZ T57 0233
0231 EXT_STMT
0232 DECLARE_FUNCTION string("mb_http_output")
0233 EXT_STMT
0234 INIT_FCALL 1 96 string("function_exists")
0235 SEND_VAL string("mb_strwidth") 1
0236 V58 = DO_FCALL
0237 T59 = BOOL_NOT V58
0238 JMPZ T59 0241
0239 EXT_STMT
0240 DECLARE_FUNCTION string("mb_strwidth")
0241 EXT_STMT
0242 INIT_FCALL 1 96 string("function_exists")
0243 SEND_VAL string("mb_substr_count") 1
0244 V60 = DO_FCALL
0245 T61 = BOOL_NOT V60
0246 JMPZ T61 0249
0247 EXT_STMT
0248 DECLARE_FUNCTION string("mb_substr_count")
0249 EXT_STMT
0250 INIT_FCALL 1 96 string("function_exists")
0251 SEND_VAL string("mb_output_handler") 1
0252 V62 = DO_FCALL
0253 T63 = BOOL_NOT V62
0254 JMPZ T63 0257
0255 EXT_STMT
0256 DECLARE_FUNCTION string("mb_output_handler")
0257 EXT_STMT
0258 INIT_FCALL 1 96 string("function_exists")
0259 SEND_VAL string("mb_http_input") 1
0260 V64 = DO_FCALL
0261 T65 = BOOL_NOT V64
0262 JMPZ T65 0265
0263 EXT_STMT
0264 DECLARE_FUNCTION string("mb_http_input")
0265 EXT_STMT
0266 INIT_FCALL 1 96 string("function_exists")
0267 SEND_VAL string("mb_convert_variables") 1
0268 V66 = DO_FCALL
0269 T67 = BOOL_NOT V66
0270 JMPZ T67 0273
0271 EXT_STMT
0272 DECLARE_FUNCTION string("mb_convert_variables")
0273 EXT_STMT
0274 INIT_FCALL 1 96 string("function_exists")
0275 SEND_VAL string("mb_ord") 1
0276 V68 = DO_FCALL
0277 T69 = BOOL_NOT V68
0278 JMPZ T69 0281
0279 EXT_STMT
0280 DECLARE_FUNCTION string("mb_ord")
0281 EXT_STMT
0282 INIT_FCALL 1 96 string("function_exists")
0283 SEND_VAL string("mb_chr") 1
0284 V70 = DO_FCALL
0285 T71 = BOOL_NOT V70
0286 JMPZ T71 0289
0287 EXT_STMT
0288 DECLARE_FUNCTION string("mb_chr")
0289 EXT_STMT
0290 INIT_FCALL 1 96 string("function_exists")
0291 SEND_VAL string("mb_scrub") 1
0292 V72 = DO_FCALL
0293 T73 = BOOL_NOT V72
0294 JMPZ T73 0297
0295 EXT_STMT
0296 DECLARE_FUNCTION string("mb_scrub")
0297 EXT_STMT
0298 INIT_FCALL 1 96 string("function_exists")
0299 SEND_VAL string("mb_str_split") 1
0300 V74 = DO_FCALL
0301 T75 = BOOL_NOT V74
0302 JMPZ T75 0305
0303 EXT_STMT
0304 DECLARE_FUNCTION string("mb_str_split")
0305 EXT_STMT
0306 INIT_FCALL 1 96 string("extension_loaded")
0307 SEND_VAL string("mbstring") 1
0308 V76 = DO_FCALL
0309 JMPZ V76 0312
0310 EXT_STMT
0311 RETURN null
0312 EXT_STMT
0313 JMPZ bool(false) 0319
0314 EXT_STMT
0315 INIT_FCALL 2 112 string("define")
0316 SEND_VAL string("MB_CASE_UPPER") 1
0317 SEND_VAL int(0) 2
0318 DO_FCALL
0319 EXT_STMT
0320 JMPZ bool(false) 0326
0321 EXT_STMT
0322 INIT_FCALL 2 112 string("define")
0323 SEND_VAL string("MB_CASE_LOWER") 1
0324 SEND_VAL int(1) 2
0325 DO_FCALL
0326 EXT_STMT
0327 JMPZ bool(false) 0333
0328 EXT_STMT
0329 INIT_FCALL 2 112 string("define")
0330 SEND_VAL string("MB_CASE_TITLE") 1
0331 SEND_VAL int(2) 2
0332 DO_FCALL
0333 RETURN int(1)

mb_convert_encoding:
     ; (lines=17, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:15-15
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($to_encoding) = RECV 2
0002 CV2($from_encoding) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_convert_encoding")
0005 T3 = COALESCE CV0($string) 0007
0006 T3 = QM_ASSIGN string("")
0007 SEND_VAL_EX T3 1
0008 T4 = CAST (string) CV1($to_encoding)
0009 SEND_VAL_EX T4 2
0010 SEND_VAR_EX CV2($from_encoding) 3
0011 V5 = DO_FCALL
0012 VERIFY_RETURN_TYPE V5
0013 RETURN V5
0014 EXT_STMT
0015 VERIFY_RETURN_TYPE
0016 RETURN null
LIVE RANGES:
     5: 0012 - 0013 (tmp/var)

mb_decode_mimeheader:
     ; (lines=11, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:18-18
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_decode_mimeheader")
0003 T1 = CAST (string) CV0($string)
0004 SEND_VAL_EX T1 1
0005 V2 = DO_FCALL
0006 VERIFY_RETURN_TYPE V2
0007 RETURN V2
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     2: 0006 - 0007 (tmp/var)

mb_encode_mimeheader:
     ; (lines=21, args=5, vars=5, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:21-21
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($charset) = RECV_INIT 2 null
0002 CV2($transfer_encoding) = RECV_INIT 3 null
0003 CV3($newline) = RECV_INIT 4 string("
")
0004 CV4($indent) = RECV_INIT 5 int(0)
0005 EXT_STMT
0006 INIT_STATIC_METHOD_CALL 5 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_encode_mimeheader")
0007 T5 = CAST (string) CV0($string)
0008 SEND_VAL_EX T5 1
0009 SEND_VAR_EX CV1($charset) 2
0010 SEND_VAR_EX CV2($transfer_encoding) 3
0011 T6 = CAST (string) CV3($newline)
0012 SEND_VAL_EX T6 4
0013 T7 = CAST (long) CV4($indent)
0014 SEND_VAL_EX T7 5
0015 V8 = DO_FCALL
0016 VERIFY_RETURN_TYPE V8
0017 RETURN V8
0018 EXT_STMT
0019 VERIFY_RETURN_TYPE
0020 RETURN null
LIVE RANGES:
     8: 0016 - 0017 (tmp/var)

mb_decode_numericentity:
     ; (lines=15, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:24-24
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($map) = RECV 2
0002 CV2($encoding) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_decode_numericentity")
0005 T3 = CAST (string) CV0($string)
0006 SEND_VAL_EX T3 1
0007 SEND_VAR_EX CV1($map) 2
0008 SEND_VAR_EX CV2($encoding) 3
0009 V4 = DO_FCALL
0010 VERIFY_RETURN_TYPE V4
0011 RETURN V4
0012 EXT_STMT
0013 VERIFY_RETURN_TYPE
0014 RETURN null
LIVE RANGES:
     4: 0010 - 0011 (tmp/var)

mb_encode_numericentity:
     ; (lines=18, args=4, vars=4, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:27-27
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($map) = RECV 2
0002 CV2($encoding) = RECV_INIT 3 null
0003 CV3($hex) = RECV_INIT 4 bool(false)
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_encode_numericentity")
0006 T4 = CAST (string) CV0($string)
0007 SEND_VAL_EX T4 1
0008 SEND_VAR_EX CV1($map) 2
0009 SEND_VAR_EX CV2($encoding) 3
0010 T5 = BOOL CV3($hex)
0011 SEND_VAL_EX T5 4
0012 V6 = DO_FCALL
0013 VERIFY_RETURN_TYPE V6
0014 RETURN V6
0015 EXT_STMT
0016 VERIFY_RETURN_TYPE
0017 RETURN null
LIVE RANGES:
     6: 0013 - 0014 (tmp/var)

mb_convert_case:
     ; (lines=16, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:30-30
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($mode) = RECV 2
0002 CV2($encoding) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_convert_case")
0005 T3 = CAST (string) CV0($string)
0006 SEND_VAL_EX T3 1
0007 T4 = CAST (long) CV1($mode)
0008 SEND_VAL_EX T4 2
0009 SEND_VAR_EX CV2($encoding) 3
0010 V5 = DO_FCALL
0011 VERIFY_RETURN_TYPE V5
0012 RETURN V5
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE
0015 RETURN null
LIVE RANGES:
     5: 0011 - 0012 (tmp/var)

mb_internal_encoding:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:33-33
     ; return  [] RANGE[0..0]
0000 CV0($encoding) = RECV_INIT 1 null
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_internal_encoding")
0003 SEND_VAR_EX CV0($encoding) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

mb_language:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:36-36
     ; return  [] RANGE[0..0]
0000 CV0($language) = RECV_INIT 1 null
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_language")
0003 SEND_VAR_EX CV0($language) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

mb_list_encodings:
     ; (lines=8, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:39-39
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 0 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_list_encodings")
0002 V0 = DO_FCALL
0003 VERIFY_RETURN_TYPE V0
0004 RETURN V0
0005 EXT_STMT
0006 VERIFY_RETURN_TYPE
0007 RETURN null
LIVE RANGES:
     0: 0003 - 0004 (tmp/var)

mb_encoding_aliases:
     ; (lines=11, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:42-42
     ; return  [] RANGE[0..0]
0000 CV0($encoding) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_encoding_aliases")
0003 T1 = CAST (string) CV0($encoding)
0004 SEND_VAL_EX T1 1
0005 V2 = DO_FCALL
0006 VERIFY_RETURN_TYPE V2
0007 RETURN V2
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     2: 0006 - 0007 (tmp/var)

mb_check_encoding:
     ; (lines=12, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:45-45
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV_INIT 1 null
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_check_encoding")
0004 SEND_VAR_EX CV0($value) 1
0005 SEND_VAR_EX CV1($encoding) 2
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

mb_detect_encoding:
     ; (lines=16, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:48-48
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encodings) = RECV_INIT 2 null
0002 CV2($strict) = RECV_INIT 3 bool(false)
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_detect_encoding")
0005 T3 = CAST (string) CV0($string)
0006 SEND_VAL_EX T3 1
0007 SEND_VAR_EX CV1($encodings) 2
0008 T4 = BOOL CV2($strict)
0009 SEND_VAL_EX T4 3
0010 V5 = DO_FCALL
0011 VERIFY_RETURN_TYPE V5
0012 RETURN V5
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE
0015 RETURN null
LIVE RANGES:
     5: 0011 - 0012 (tmp/var)

mb_detect_order:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:51-51
     ; return  [] RANGE[0..0]
0000 CV0($encoding) = RECV_INIT 1 null
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_detect_order")
0003 SEND_VAR_EX CV0($encoding) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

mb_parse_str:
     ; (lines=15, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:54-54
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($result) = RECV_INIT 2 array(...)
0002 EXT_STMT
0003 INIT_FCALL 2 112 string("parse_str")
0004 T2 = CAST (string) CV0($string)
0005 SEND_VAL T2 1
0006 SEND_REF CV1($result) 2
0007 DO_FCALL
0008 EXT_STMT
0009 T4 = BOOL CV1($result)
0010 VERIFY_RETURN_TYPE T4
0011 RETURN T4
0012 EXT_STMT
0013 VERIFY_RETURN_TYPE
0014 RETURN null

mb_strlen:
     ; (lines=13, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:57-57
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strlen")
0004 T2 = CAST (string) CV0($string)
0005 SEND_VAL_EX T2 1
0006 SEND_VAR_EX CV1($encoding) 2
0007 V3 = DO_FCALL
0008 VERIFY_RETURN_TYPE V3
0009 RETURN V3
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     3: 0008 - 0009 (tmp/var)

mb_strpos:
     ; (lines=19, args=4, vars=4, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:60-60
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($offset) = RECV_INIT 3 int(0)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strpos")
0006 T4 = CAST (string) CV0($haystack)
0007 SEND_VAL_EX T4 1
0008 T5 = CAST (string) CV1($needle)
0009 SEND_VAL_EX T5 2
0010 T6 = CAST (long) CV2($offset)
0011 SEND_VAL_EX T6 3
0012 SEND_VAR_EX CV3($encoding) 4
0013 V7 = DO_FCALL
0014 VERIFY_RETURN_TYPE V7
0015 RETURN V7
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     7: 0014 - 0015 (tmp/var)

mb_strtolower:
     ; (lines=13, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:63-63
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strtolower")
0004 T2 = CAST (string) CV0($string)
0005 SEND_VAL_EX T2 1
0006 SEND_VAR_EX CV1($encoding) 2
0007 V3 = DO_FCALL
0008 VERIFY_RETURN_TYPE V3
0009 RETURN V3
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     3: 0008 - 0009 (tmp/var)

mb_strtoupper:
     ; (lines=13, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:66-66
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strtoupper")
0004 T2 = CAST (string) CV0($string)
0005 SEND_VAL_EX T2 1
0006 SEND_VAR_EX CV1($encoding) 2
0007 V3 = DO_FCALL
0008 VERIFY_RETURN_TYPE V3
0009 RETURN V3
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     3: 0008 - 0009 (tmp/var)

mb_substitute_character:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:69-69
     ; return  [] RANGE[0..0]
0000 CV0($substitute_character) = RECV_INIT 1 null
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_substitute_character")
0003 SEND_VAR_EX CV0($substitute_character) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

mb_substr:
     ; (lines=18, args=4, vars=4, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:72-72
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($start) = RECV 2
0002 CV2($length) = RECV_INIT 3 null
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_substr")
0006 T4 = CAST (string) CV0($string)
0007 SEND_VAL_EX T4 1
0008 T5 = CAST (long) CV1($start)
0009 SEND_VAL_EX T5 2
0010 SEND_VAR_EX CV2($length) 3
0011 SEND_VAR_EX CV3($encoding) 4
0012 V6 = DO_FCALL
0013 VERIFY_RETURN_TYPE V6
0014 RETURN V6
0015 EXT_STMT
0016 VERIFY_RETURN_TYPE
0017 RETURN null
LIVE RANGES:
     6: 0013 - 0014 (tmp/var)

mb_stripos:
     ; (lines=19, args=4, vars=4, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:75-75
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($offset) = RECV_INIT 3 int(0)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_stripos")
0006 T4 = CAST (string) CV0($haystack)
0007 SEND_VAL_EX T4 1
0008 T5 = CAST (string) CV1($needle)
0009 SEND_VAL_EX T5 2
0010 T6 = CAST (long) CV2($offset)
0011 SEND_VAL_EX T6 3
0012 SEND_VAR_EX CV3($encoding) 4
0013 V7 = DO_FCALL
0014 VERIFY_RETURN_TYPE V7
0015 RETURN V7
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     7: 0014 - 0015 (tmp/var)

mb_stristr:
     ; (lines=19, args=4, vars=4, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:78-78
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($before_needle) = RECV_INIT 3 bool(false)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_stristr")
0006 T4 = CAST (string) CV0($haystack)
0007 SEND_VAL_EX T4 1
0008 T5 = CAST (string) CV1($needle)
0009 SEND_VAL_EX T5 2
0010 T6 = BOOL CV2($before_needle)
0011 SEND_VAL_EX T6 3
0012 SEND_VAR_EX CV3($encoding) 4
0013 V7 = DO_FCALL
0014 VERIFY_RETURN_TYPE V7
0015 RETURN V7
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     7: 0014 - 0015 (tmp/var)

mb_strrchr:
     ; (lines=19, args=4, vars=4, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:81-81
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($before_needle) = RECV_INIT 3 bool(false)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strrchr")
0006 T4 = CAST (string) CV0($haystack)
0007 SEND_VAL_EX T4 1
0008 T5 = CAST (string) CV1($needle)
0009 SEND_VAL_EX T5 2
0010 T6 = BOOL CV2($before_needle)
0011 SEND_VAL_EX T6 3
0012 SEND_VAR_EX CV3($encoding) 4
0013 V7 = DO_FCALL
0014 VERIFY_RETURN_TYPE V7
0015 RETURN V7
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     7: 0014 - 0015 (tmp/var)

mb_strrichr:
     ; (lines=19, args=4, vars=4, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:84-84
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($before_needle) = RECV_INIT 3 bool(false)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strrichr")
0006 T4 = CAST (string) CV0($haystack)
0007 SEND_VAL_EX T4 1
0008 T5 = CAST (string) CV1($needle)
0009 SEND_VAL_EX T5 2
0010 T6 = BOOL CV2($before_needle)
0011 SEND_VAL_EX T6 3
0012 SEND_VAR_EX CV3($encoding) 4
0013 V7 = DO_FCALL
0014 VERIFY_RETURN_TYPE V7
0015 RETURN V7
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     7: 0014 - 0015 (tmp/var)

mb_strripos:
     ; (lines=19, args=4, vars=4, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:87-87
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($offset) = RECV_INIT 3 int(0)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strripos")
0006 T4 = CAST (string) CV0($haystack)
0007 SEND_VAL_EX T4 1
0008 T5 = CAST (string) CV1($needle)
0009 SEND_VAL_EX T5 2
0010 T6 = CAST (long) CV2($offset)
0011 SEND_VAL_EX T6 3
0012 SEND_VAR_EX CV3($encoding) 4
0013 V7 = DO_FCALL
0014 VERIFY_RETURN_TYPE V7
0015 RETURN V7
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     7: 0014 - 0015 (tmp/var)

mb_strrpos:
     ; (lines=19, args=4, vars=4, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:90-90
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($offset) = RECV_INIT 3 int(0)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strrpos")
0006 T4 = CAST (string) CV0($haystack)
0007 SEND_VAL_EX T4 1
0008 T5 = CAST (string) CV1($needle)
0009 SEND_VAL_EX T5 2
0010 T6 = CAST (long) CV2($offset)
0011 SEND_VAL_EX T6 3
0012 SEND_VAR_EX CV3($encoding) 4
0013 V7 = DO_FCALL
0014 VERIFY_RETURN_TYPE V7
0015 RETURN V7
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     7: 0014 - 0015 (tmp/var)

mb_strstr:
     ; (lines=19, args=4, vars=4, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:93-93
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($before_needle) = RECV_INIT 3 bool(false)
0003 CV3($encoding) = RECV_INIT 4 null
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 4 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strstr")
0006 T4 = CAST (string) CV0($haystack)
0007 SEND_VAL_EX T4 1
0008 T5 = CAST (string) CV1($needle)
0009 SEND_VAL_EX T5 2
0010 T6 = BOOL CV2($before_needle)
0011 SEND_VAL_EX T6 3
0012 SEND_VAR_EX CV3($encoding) 4
0013 V7 = DO_FCALL
0014 VERIFY_RETURN_TYPE V7
0015 RETURN V7
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     7: 0014 - 0015 (tmp/var)

mb_get_info:
     ; (lines=11, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:96-96
     ; return  [] RANGE[0..0]
0000 CV0($type) = RECV_INIT 1 string("all")
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_get_info")
0003 T1 = CAST (string) CV0($type)
0004 SEND_VAL_EX T1 1
0005 V2 = DO_FCALL
0006 VERIFY_RETURN_TYPE V2
0007 RETURN V2
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     2: 0006 - 0007 (tmp/var)

mb_http_output:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:99-99
     ; return  [] RANGE[0..0]
0000 CV0($encoding) = RECV_INIT 1 null
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_http_output")
0003 SEND_VAR_EX CV0($encoding) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

mb_strwidth:
     ; (lines=13, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:102-102
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_strwidth")
0004 T2 = CAST (string) CV0($string)
0005 SEND_VAL_EX T2 1
0006 SEND_VAR_EX CV1($encoding) 2
0007 V3 = DO_FCALL
0008 VERIFY_RETURN_TYPE V3
0009 RETURN V3
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     3: 0008 - 0009 (tmp/var)

mb_substr_count:
     ; (lines=16, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:105-105
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($encoding) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_substr_count")
0005 T3 = CAST (string) CV0($haystack)
0006 SEND_VAL_EX T3 1
0007 T4 = CAST (string) CV1($needle)
0008 SEND_VAL_EX T4 2
0009 SEND_VAR_EX CV2($encoding) 3
0010 V5 = DO_FCALL
0011 VERIFY_RETURN_TYPE V5
0012 RETURN V5
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE
0015 RETURN null
LIVE RANGES:
     5: 0011 - 0012 (tmp/var)

mb_output_handler:
     ; (lines=14, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:108-108
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($status) = RECV 2
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_output_handler")
0004 T2 = CAST (string) CV0($string)
0005 SEND_VAL_EX T2 1
0006 T3 = CAST (long) CV1($status)
0007 SEND_VAL_EX T3 2
0008 V4 = DO_FCALL
0009 VERIFY_RETURN_TYPE V4
0010 RETURN V4
0011 EXT_STMT
0012 VERIFY_RETURN_TYPE
0013 RETURN null
LIVE RANGES:
     4: 0009 - 0010 (tmp/var)

mb_http_input:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:111-111
     ; return  [] RANGE[0..0]
0000 CV0($type) = RECV_INIT 1 null
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_http_input")
0003 SEND_VAR_EX CV0($type) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

mb_convert_variables:
     ; (lines=20, args=3, vars=4, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:115-115
     ; return  [] RANGE[0..0]
0000 CV0($to_encoding) = RECV 1
0001 CV1($from_encoding) = RECV 2
0002 CV2($var) = RECV 3
0003 CV3($vars) = RECV_VARIADIC 4
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_convert_variables")
0006 T4 = CAST (string) CV0($to_encoding)
0007 SEND_VAL_EX T4 1
0008 T5 = COALESCE CV1($from_encoding) 0010
0009 T5 = QM_ASSIGN string("")
0010 SEND_VAL_EX T5 2
0011 SEND_VAR_EX CV2($var) 3
0012 SEND_UNPACK CV3($vars)
0013 CHECK_UNDEF_ARGS
0014 V6 = DO_FCALL
0015 VERIFY_RETURN_TYPE V6
0016 RETURN V6
0017 EXT_STMT
0018 VERIFY_RETURN_TYPE
0019 RETURN null
LIVE RANGES:
     6: 0015 - 0016 (tmp/var)

mb_ord:
     ; (lines=13, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:119-119
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_ord")
0004 T2 = CAST (string) CV0($string)
0005 SEND_VAL_EX T2 1
0006 SEND_VAR_EX CV1($encoding) 2
0007 V3 = DO_FCALL
0008 VERIFY_RETURN_TYPE V3
0009 RETURN V3
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     3: 0008 - 0009 (tmp/var)

mb_chr:
     ; (lines=13, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:122-122
     ; return  [] RANGE[0..0]
0000 CV0($codepoint) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_chr")
0004 T2 = CAST (long) CV0($codepoint)
0005 SEND_VAL_EX T2 1
0006 SEND_VAR_EX CV1($encoding) 2
0007 V3 = DO_FCALL
0008 VERIFY_RETURN_TYPE V3
0009 RETURN V3
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     3: 0008 - 0009 (tmp/var)

mb_scrub:
     ; (lines=21, args=2, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:125-125
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 T2 = COALESCE CV1($encoding) 0008
0004 INIT_FCALL 0 80 string("mb_internal_encoding")
0005 V3 = DO_FCALL
0006 T4 = ASSIGN CV1($encoding) V3
0007 T2 = QM_ASSIGN T4
0008 FREE T2
0009 EXT_STMT
0010 INIT_FCALL 3 128 string("mb_convert_encoding")
0011 T5 = CAST (string) CV0($string)
0012 SEND_VAL T5 1
0013 SEND_VAR CV1($encoding) 2
0014 SEND_VAR CV1($encoding) 3
0015 V6 = DO_FCALL
0016 VERIFY_RETURN_TYPE V6
0017 RETURN V6
0018 EXT_STMT
0019 VERIFY_RETURN_TYPE
0020 RETURN null
LIVE RANGES:
     6: 0016 - 0017 (tmp/var)

mb_str_split:
     ; (lines=16, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-mbstring/bootstrap80.php:128-128
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($length) = RECV_INIT 2 int(1)
0002 CV2($encoding) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Mbstring\Mbstring") string("mb_str_split")
0005 T3 = CAST (string) CV0($string)
0006 SEND_VAL_EX T3 1
0007 T4 = CAST (long) CV1($length)
0008 SEND_VAL_EX T4 2
0009 SEND_VAR_EX CV2($encoding) 3
0010 V5 = DO_FCALL
0011 VERIFY_RETURN_TYPE V5
0012 RETURN V5
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE
0015 RETURN null
LIVE RANGES:
     5: 0011 - 0012 (tmp/var)

$_main:
     ; (lines=47, args=0, vars=0, tmps=12)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php73/bootstrap.php:1-32
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 JMPZ bool(true) 0005
0003 EXT_STMT
0004 RETURN null
0005 EXT_STMT
0006 INIT_FCALL 1 96 string("function_exists")
0007 SEND_VAL string("is_countable") 1
0008 V0 = DO_FCALL
0009 T1 = BOOL_NOT V0
0010 JMPZ T1 0013
0011 EXT_STMT
0012 DECLARE_FUNCTION string("is_countable")
0013 EXT_STMT
0014 INIT_FCALL 1 96 string("function_exists")
0015 SEND_VAL string("hrtime") 1
0016 V2 = DO_FCALL
0017 T3 = BOOL_NOT V2
0018 JMPZ T3 0030
0019 EXT_STMT
0020 INCLUDE_OR_EVAL (require_once) string("/home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php73/Php73.php")
0021 EXT_STMT
0022 INIT_FCALL 1 96 string("microtime")
0023 SEND_VAL bool(true) 1
0024 V6 = DO_FCALL
0025 T7 = CAST (long) V6
0026 ASSIGN_STATIC_PROP string("startAt") string("Symfony\Polyfill\Php73\Php73")
0027 OP_DATA T7
0028 EXT_STMT
0029 DECLARE_FUNCTION string("hrtime")
0030 EXT_STMT
0031 INIT_FCALL 1 96 string("function_exists")
0032 SEND_VAL string("array_key_first") 1
0033 V8 = DO_FCALL
0034 T9 = BOOL_NOT V8
0035 JMPZ T9 0038
0036 EXT_STMT
0037 DECLARE_FUNCTION string("array_key_first")
0038 EXT_STMT
0039 INIT_FCALL 1 96 string("function_exists")
0040 SEND_VAL string("array_key_last") 1
0041 V10 = DO_FCALL
0042 T11 = BOOL_NOT V10
0043 JMPZ T11 0046
0044 EXT_STMT
0045 DECLARE_FUNCTION string("array_key_last")
0046 RETURN int(1)

is_countable:
     ; (lines=15, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php73/bootstrap.php:19-19
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 T1 = TYPE_CHECK (array) CV0($value)
0003 T1 = JMPNZ_EX T1 0006
0004 T2 = INSTANCEOF CV0($value) string("Countable")
0005 T1 = BOOL T2
0006 T1 = JMPNZ_EX T1 0009
0007 T3 = INSTANCEOF CV0($value) string("ResourceBundle")
0008 T1 = BOOL T3
0009 T1 = JMPNZ_EX T1 0012
0010 T4 = INSTANCEOF CV0($value) string("SimpleXmlElement")
0011 T1 = BOOL T4
0012 RETURN T1
0013 EXT_STMT
0014 RETURN null

hrtime:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php73/bootstrap.php:24-24
     ; return  [] RANGE[0..0]
0000 CV0($as_number) = RECV_INIT 1 bool(false)
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Php73\Php73") string("hrtime")
0003 SEND_VAR_EX CV0($as_number) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

array_key_first:
     ; (lines=12, args=1, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php73/bootstrap.php:27-27
     ; return  [] RANGE[0..0]
0000 CV0($array) = RECV 1
0001 EXT_STMT
0002 V3 = FE_RESET_R CV0($array) 0009
0003 T4 = FE_FETCH_R V3 CV1($value) 0009
0004 ASSIGN CV2($key) T4
0005 EXT_STMT
0006 FE_FREE V3
0007 RETURN CV2($key)
0008 JMP 0003
0009 FE_FREE V3
0010 EXT_STMT
0011 RETURN null
LIVE RANGES:
     3: 0003 - 0009 (loop)

array_key_last:
     ; (lines=14, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php73/bootstrap.php:30-30
     ; return  [] RANGE[0..0]
0000 CV0($array) = RECV 1
0001 EXT_STMT
0002 INIT_FCALL 1 96 string("key")
0003 INIT_FCALL 4 144 string("array_slice")
0004 SEND_VAR CV0($array) 1
0005 SEND_VAL int(-1) 2
0006 SEND_VAL int(1) 3
0007 SEND_VAL bool(true) 4
0008 V1 = DO_FCALL
0009 SEND_VAR V1 1
0010 V2 = DO_FCALL
0011 RETURN V2
0012 EXT_STMT
0013 RETURN null

$_main:
     ; (lines=95, args=0, vars=0, tmps=23)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap.php:1-51
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 JMPZ bool(true) 0006
0003 EXT_STMT
0004 V0 = INCLUDE_OR_EVAL (require) string("/home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap80.php")
0005 RETURN V0
0006 EXT_STMT
0007 INIT_FCALL 1 96 string("function_exists")
0008 SEND_VAL string("ctype_alnum") 1
0009 V1 = DO_FCALL
0010 T2 = BOOL_NOT V1
0011 JMPZ T2 0014
0012 EXT_STMT
0013 DECLARE_FUNCTION string("ctype_alnum")
0014 EXT_STMT
0015 INIT_FCALL 1 96 string("function_exists")
0016 SEND_VAL string("ctype_alpha") 1
0017 V3 = DO_FCALL
0018 T4 = BOOL_NOT V3
0019 JMPZ T4 0022
0020 EXT_STMT
0021 DECLARE_FUNCTION string("ctype_alpha")
0022 EXT_STMT
0023 INIT_FCALL 1 96 string("function_exists")
0024 SEND_VAL string("ctype_cntrl") 1
0025 V5 = DO_FCALL
0026 T6 = BOOL_NOT V5
0027 JMPZ T6 0030
0028 EXT_STMT
0029 DECLARE_FUNCTION string("ctype_cntrl")
0030 EXT_STMT
0031 INIT_FCALL 1 96 string("function_exists")
0032 SEND_VAL string("ctype_digit") 1
0033 V7 = DO_FCALL
0034 T8 = BOOL_NOT V7
0035 JMPZ T8 0038
0036 EXT_STMT
0037 DECLARE_FUNCTION string("ctype_digit")
0038 EXT_STMT
0039 INIT_FCALL 1 96 string("function_exists")
0040 SEND_VAL string("ctype_graph") 1
0041 V9 = DO_FCALL
0042 T10 = BOOL_NOT V9
0043 JMPZ T10 0046
0044 EXT_STMT
0045 DECLARE_FUNCTION string("ctype_graph")
0046 EXT_STMT
0047 INIT_FCALL 1 96 string("function_exists")
0048 SEND_VAL string("ctype_lower") 1
0049 V11 = DO_FCALL
0050 T12 = BOOL_NOT V11
0051 JMPZ T12 0054
0052 EXT_STMT
0053 DECLARE_FUNCTION string("ctype_lower")
0054 EXT_STMT
0055 INIT_FCALL 1 96 string("function_exists")
0056 SEND_VAL string("ctype_print") 1
0057 V13 = DO_FCALL
0058 T14 = BOOL_NOT V13
0059 JMPZ T14 0062
0060 EXT_STMT
0061 DECLARE_FUNCTION string("ctype_print")
0062 EXT_STMT
0063 INIT_FCALL 1 96 string("function_exists")
0064 SEND_VAL string("ctype_punct") 1
0065 V15 = DO_FCALL
0066 T16 = BOOL_NOT V15
0067 JMPZ T16 0070
0068 EXT_STMT
0069 DECLARE_FUNCTION string("ctype_punct")
0070 EXT_STMT
0071 INIT_FCALL 1 96 string("function_exists")
0072 SEND_VAL string("ctype_space") 1
0073 V17 = DO_FCALL
0074 T18 = BOOL_NOT V17
0075 JMPZ T18 0078
0076 EXT_STMT
0077 DECLARE_FUNCTION string("ctype_space")
0078 EXT_STMT
0079 INIT_FCALL 1 96 string("function_exists")
0080 SEND_VAL string("ctype_upper") 1
0081 V19 = DO_FCALL
0082 T20 = BOOL_NOT V19
0083 JMPZ T20 0086
0084 EXT_STMT
0085 DECLARE_FUNCTION string("ctype_upper")
0086 EXT_STMT
0087 INIT_FCALL 1 96 string("function_exists")
0088 SEND_VAL string("ctype_xdigit") 1
0089 V21 = DO_FCALL
0090 T22 = BOOL_NOT V21
0091 JMPZ T22 0094
0092 EXT_STMT
0093 DECLARE_FUNCTION string("ctype_xdigit")
0094 RETURN int(1)

ctype_alnum:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap.php:19-19
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_alnum")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

ctype_alpha:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap.php:22-22
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_alpha")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

ctype_cntrl:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap.php:25-25
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_cntrl")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

ctype_digit:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap.php:28-28
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_digit")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

ctype_graph:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap.php:31-31
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_graph")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

ctype_lower:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap.php:34-34
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_lower")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

ctype_print:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap.php:37-37
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_print")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

ctype_punct:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap.php:40-40
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_punct")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

ctype_space:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap.php:43-43
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_space")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

ctype_upper:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap.php:46-46
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_upper")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

ctype_xdigit:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap.php:49-49
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_xdigit")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

$_main:
     ; (lines=90, args=0, vars=0, tmps=22)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap80.php:1-47
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 INIT_FCALL 1 96 string("function_exists")
0003 SEND_VAL string("ctype_alnum") 1
0004 V0 = DO_FCALL
0005 T1 = BOOL_NOT V0
0006 JMPZ T1 0009
0007 EXT_STMT
0008 DECLARE_FUNCTION string("ctype_alnum")
0009 EXT_STMT
0010 INIT_FCALL 1 96 string("function_exists")
0011 SEND_VAL string("ctype_alpha") 1
0012 V2 = DO_FCALL
0013 T3 = BOOL_NOT V2
0014 JMPZ T3 0017
0015 EXT_STMT
0016 DECLARE_FUNCTION string("ctype_alpha")
0017 EXT_STMT
0018 INIT_FCALL 1 96 string("function_exists")
0019 SEND_VAL string("ctype_cntrl") 1
0020 V4 = DO_FCALL
0021 T5 = BOOL_NOT V4
0022 JMPZ T5 0025
0023 EXT_STMT
0024 DECLARE_FUNCTION string("ctype_cntrl")
0025 EXT_STMT
0026 INIT_FCALL 1 96 string("function_exists")
0027 SEND_VAL string("ctype_digit") 1
0028 V6 = DO_FCALL
0029 T7 = BOOL_NOT V6
0030 JMPZ T7 0033
0031 EXT_STMT
0032 DECLARE_FUNCTION string("ctype_digit")
0033 EXT_STMT
0034 INIT_FCALL 1 96 string("function_exists")
0035 SEND_VAL string("ctype_graph") 1
0036 V8 = DO_FCALL
0037 T9 = BOOL_NOT V8
0038 JMPZ T9 0041
0039 EXT_STMT
0040 DECLARE_FUNCTION string("ctype_graph")
0041 EXT_STMT
0042 INIT_FCALL 1 96 string("function_exists")
0043 SEND_VAL string("ctype_lower") 1
0044 V10 = DO_FCALL
0045 T11 = BOOL_NOT V10
0046 JMPZ T11 0049
0047 EXT_STMT
0048 DECLARE_FUNCTION string("ctype_lower")
0049 EXT_STMT
0050 INIT_FCALL 1 96 string("function_exists")
0051 SEND_VAL string("ctype_print") 1
0052 V12 = DO_FCALL
0053 T13 = BOOL_NOT V12
0054 JMPZ T13 0057
0055 EXT_STMT
0056 DECLARE_FUNCTION string("ctype_print")
0057 EXT_STMT
0058 INIT_FCALL 1 96 string("function_exists")
0059 SEND_VAL string("ctype_punct") 1
0060 V14 = DO_FCALL
0061 T15 = BOOL_NOT V14
0062 JMPZ T15 0065
0063 EXT_STMT
0064 DECLARE_FUNCTION string("ctype_punct")
0065 EXT_STMT
0066 INIT_FCALL 1 96 string("function_exists")
0067 SEND_VAL string("ctype_space") 1
0068 V16 = DO_FCALL
0069 T17 = BOOL_NOT V16
0070 JMPZ T17 0073
0071 EXT_STMT
0072 DECLARE_FUNCTION string("ctype_space")
0073 EXT_STMT
0074 INIT_FCALL 1 96 string("function_exists")
0075 SEND_VAL string("ctype_upper") 1
0076 V18 = DO_FCALL
0077 T19 = BOOL_NOT V18
0078 JMPZ T19 0081
0079 EXT_STMT
0080 DECLARE_FUNCTION string("ctype_upper")
0081 EXT_STMT
0082 INIT_FCALL 1 96 string("function_exists")
0083 SEND_VAL string("ctype_xdigit") 1
0084 V20 = DO_FCALL
0085 T21 = BOOL_NOT V20
0086 JMPZ T21 0089
0087 EXT_STMT
0088 DECLARE_FUNCTION string("ctype_xdigit")
0089 RETURN int(1)

ctype_alnum:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap80.php:15-15
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_alnum")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

ctype_alpha:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap80.php:18-18
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_alpha")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

ctype_cntrl:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap80.php:21-21
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_cntrl")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

ctype_digit:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap80.php:24-24
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_digit")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

ctype_graph:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap80.php:27-27
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_graph")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

ctype_lower:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap80.php:30-30
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_lower")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

ctype_print:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap80.php:33-33
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_print")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

ctype_punct:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap80.php:36-36
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_punct")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

ctype_space:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap80.php:39-39
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_space")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

ctype_upper:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap80.php:42-42
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_upper")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

ctype_xdigit:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-ctype/bootstrap80.php:45-45
     ; return  [] RANGE[0..0]
0000 CV0($text) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Ctype\Ctype") string("ctype_xdigit")
0003 SEND_VAR_EX CV0($text) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

$_main:
     ; (lines=18, args=0, vars=0, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/var-dumper/Resources/functions/dump.php:1-44
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 INIT_FCALL 1 96 string("function_exists")
0003 SEND_VAL string("dump") 1
0004 V0 = DO_FCALL
0005 T1 = BOOL_NOT V0
0006 JMPZ T1 0009
0007 EXT_STMT
0008 DECLARE_FUNCTION string("dump")
0009 EXT_STMT
0010 INIT_FCALL 1 96 string("function_exists")
0011 SEND_VAL string("dd") 1
0012 V2 = DO_FCALL
0013 T3 = BOOL_NOT V2
0014 JMPZ T3 0017
0015 EXT_STMT
0016 DECLARE_FUNCTION string("dd")
0017 RETURN int(1)

dump:
     ; (lines=26, args=1, vars=3, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/var-dumper/Resources/functions/dump.php:18-31
     ; return  [] RANGE[0..0]
0000 CV0($var) = RECV 1
0001 CV1($moreVars) = RECV_VARIADIC 2
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 1 string("Symfony\Component\VarDumper\VarDumper") string("dump")
0004 SEND_VAR_EX CV0($var) 1
0005 DO_FCALL
0006 EXT_STMT
0007 V4 = FE_RESET_R CV1($moreVars) 0014
0008 FE_FETCH_R V4 CV2($v) 0014
0009 EXT_STMT
0010 INIT_STATIC_METHOD_CALL 1 string("Symfony\Component\VarDumper\VarDumper") string("dump")
0011 SEND_VAR_EX CV2($v) 1
0012 DO_FCALL
0013 JMP 0008
0014 FE_FREE V4
0015 EXT_STMT
0016 T6 = FUNC_NUM_ARGS
0017 T7 = IS_SMALLER int(1) T6
0018 JMPZ T7 0022
0019 EXT_STMT
0020 T8 = FUNC_GET_ARGS
0021 RETURN T8
0022 EXT_STMT
0023 RETURN CV0($var)
0024 EXT_STMT
0025 RETURN null
LIVE RANGES:
     4: 0008 - 0014 (loop)

dd:
     ; (lines=14, args=0, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/var-dumper/Resources/functions/dump.php:35-42
     ; return  [] RANGE[0..0]
0000 CV0($vars) = RECV_VARIADIC 1
0001 EXT_STMT
0002 V2 = FE_RESET_R CV0($vars) 0009
0003 FE_FETCH_R V2 CV1($v) 0009
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 1 string("Symfony\Component\VarDumper\VarDumper") string("dump")
0006 SEND_VAR_EX CV1($v) 1
0007 DO_FCALL
0008 JMP 0003
0009 FE_FREE V2
0010 EXT_STMT
0011 EXIT int(1)
0012 EXT_STMT
0013 RETURN null
LIVE RANGES:
     2: 0003 - 0009 (loop)

$_main:
     ; (lines=103, args=0, vars=0, tmps=20)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php72/bootstrap.php:1-58
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 JMPZ bool(true) 0005
0003 EXT_STMT
0004 RETURN null
0005 EXT_STMT
0006 JMPZ bool(false) 0012
0007 EXT_STMT
0008 INIT_FCALL 2 112 string("define")
0009 SEND_VAL string("PHP_FLOAT_DIG") 1
0010 SEND_VAL int(15) 2
0011 DO_FCALL
0012 EXT_STMT
0013 JMPZ bool(false) 0019
0014 EXT_STMT
0015 INIT_FCALL 2 112 string("define")
0016 SEND_VAL string("PHP_FLOAT_EPSILON") 1
0017 SEND_VAL float(2.22045e-16) 2
0018 DO_FCALL
0019 EXT_STMT
0020 JMPZ bool(false) 0026
0021 EXT_STMT
0022 INIT_FCALL 2 112 string("define")
0023 SEND_VAL string("PHP_FLOAT_MIN") 1
0024 SEND_VAL float(2.22507e-308) 2
0025 DO_FCALL
0026 EXT_STMT
0027 JMPZ bool(false) 0033
0028 EXT_STMT
0029 INIT_FCALL 2 112 string("define")
0030 SEND_VAL string("PHP_FLOAT_MAX") 1
0031 SEND_VAL float(1.79769e+308) 2
0032 DO_FCALL
0033 EXT_STMT
0034 JMPZ bool(false) 0042
0035 EXT_STMT
0036 INIT_FCALL 2 112 string("define")
0037 SEND_VAL string("PHP_OS_FAMILY") 1
0038 INIT_STATIC_METHOD_CALL 0 string("Symfony\Polyfill\Php72\Php72") string("php_os_family")
0039 V4 = DO_FCALL
0040 SEND_VAR V4 2
0041 DO_FCALL
0042 EXT_STMT
0043 JMPZ bool(false) 0046
0044 EXT_STMT
0045 DECLARE_FUNCTION string("sapi_windows_vt100_support")
0046 EXT_STMT
0047 INIT_FCALL 1 96 string("function_exists")
0048 SEND_VAL string("stream_isatty") 1
0049 V6 = DO_FCALL
0050 T7 = BOOL_NOT V6
0051 JMPZ T7 0054
0052 EXT_STMT
0053 DECLARE_FUNCTION string("stream_isatty")
0054 EXT_STMT
0055 INIT_FCALL 1 96 string("function_exists")
0056 SEND_VAL string("utf8_encode") 1
0057 V8 = DO_FCALL
0058 T9 = BOOL_NOT V8
0059 JMPZ T9 0062
0060 EXT_STMT
0061 DECLARE_FUNCTION string("utf8_encode")
0062 EXT_STMT
0063 INIT_FCALL 1 96 string("function_exists")
0064 SEND_VAL string("utf8_decode") 1
0065 V10 = DO_FCALL
0066 T11 = BOOL_NOT V10
0067 JMPZ T11 0070
0068 EXT_STMT
0069 DECLARE_FUNCTION string("utf8_decode")
0070 EXT_STMT
0071 INIT_FCALL 1 96 string("function_exists")
0072 SEND_VAL string("spl_object_id") 1
0073 V12 = DO_FCALL
0074 T13 = BOOL_NOT V12
0075 JMPZ T13 0078
0076 EXT_STMT
0077 DECLARE_FUNCTION string("spl_object_id")
0078 EXT_STMT
0079 INIT_FCALL 1 96 string("function_exists")
0080 SEND_VAL string("mb_ord") 1
0081 V14 = DO_FCALL
0082 T15 = BOOL_NOT V14
0083 JMPZ T15 0086
0084 EXT_STMT
0085 DECLARE_FUNCTION string("mb_ord")
0086 EXT_STMT
0087 INIT_FCALL 1 96 string("function_exists")
0088 SEND_VAL string("mb_chr") 1
0089 V16 = DO_FCALL
0090 T17 = BOOL_NOT V16
0091 JMPZ T17 0094
0092 EXT_STMT
0093 DECLARE_FUNCTION string("mb_chr")
0094 EXT_STMT
0095 INIT_FCALL 1 96 string("function_exists")
0096 SEND_VAL string("mb_scrub") 1
0097 V18 = DO_FCALL
0098 T19 = BOOL_NOT V18
0099 JMPZ T19 0102
0100 EXT_STMT
0101 DECLARE_FUNCTION string("mb_scrub")
0102 RETURN int(1)

sapi_windows_vt100_support:
     ; (lines=10, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php72/bootstrap.php:35-35
     ; return  [] RANGE[0..0]
0000 CV0($stream) = RECV 1
0001 CV1($enable) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Php72\Php72") string("sapi_windows_vt100_support")
0004 SEND_VAR_EX CV0($stream) 1
0005 SEND_VAR_EX CV1($enable) 2
0006 V2 = DO_FCALL
0007 RETURN V2
0008 EXT_STMT
0009 RETURN null

stream_isatty:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php72/bootstrap.php:38-38
     ; return  [] RANGE[0..0]
0000 CV0($stream) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Php72\Php72") string("stream_isatty")
0003 SEND_VAR_EX CV0($stream) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

utf8_encode:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php72/bootstrap.php:41-41
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Php72\Php72") string("utf8_encode")
0003 SEND_VAR_EX CV0($string) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

utf8_decode:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php72/bootstrap.php:44-44
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Php72\Php72") string("utf8_decode")
0003 SEND_VAR_EX CV0($string) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

spl_object_id:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php72/bootstrap.php:47-47
     ; return  [] RANGE[0..0]
0000 CV0($object) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Php72\Php72") string("spl_object_id")
0003 SEND_VAR_EX CV0($object) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

mb_ord:
     ; (lines=10, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php72/bootstrap.php:50-50
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Php72\Php72") string("mb_ord")
0004 SEND_VAR_EX CV0($string) 1
0005 SEND_VAR_EX CV1($encoding) 2
0006 V2 = DO_FCALL
0007 RETURN V2
0008 EXT_STMT
0009 RETURN null

mb_chr:
     ; (lines=10, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php72/bootstrap.php:53-53
     ; return  [] RANGE[0..0]
0000 CV0($codepoint) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Php72\Php72") string("mb_chr")
0004 SEND_VAR_EX CV0($codepoint) 1
0005 SEND_VAR_EX CV1($encoding) 2
0006 V2 = DO_FCALL
0007 RETURN V2
0008 EXT_STMT
0009 RETURN null

mb_scrub:
     ; (lines=20, args=2, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-php72/bootstrap.php:56-56
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($encoding) = RECV_INIT 2 null
0002 EXT_STMT
0003 T2 = TYPE_CHECK (null) CV1($encoding)
0004 JMPZ T2 0009
0005 INIT_FCALL 0 80 string("mb_internal_encoding")
0006 V3 = DO_FCALL
0007 T4 = QM_ASSIGN V3
0008 JMP 0010
0009 T4 = QM_ASSIGN CV1($encoding)
0010 ASSIGN CV1($encoding) T4
0011 EXT_STMT
0012 INIT_FCALL 3 128 string("mb_convert_encoding")
0013 SEND_VAR CV0($string) 1
0014 SEND_VAR CV1($encoding) 2
0015 SEND_VAR CV1($encoding) 3
0016 V6 = DO_FCALL
0017 RETURN V6
0018 EXT_STMT
0019 RETURN null

$_main:
     ; (lines=107, args=0, vars=0, tmps=23)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-grapheme/bootstrap.php:1-59
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 INIT_FCALL 1 96 string("extension_loaded")
0003 SEND_VAL string("intl") 1
0004 V0 = DO_FCALL
0005 JMPZ V0 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 JMPZ bool(true) 0013
0010 EXT_STMT
0011 V1 = INCLUDE_OR_EVAL (require) string("/home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-grapheme/bootstrap80.php")
0012 RETURN V1
0013 EXT_STMT
0014 JMPZ bool(false) 0020
0015 EXT_STMT
0016 INIT_FCALL 2 112 string("define")
0017 SEND_VAL string("GRAPHEME_EXTR_COUNT") 1
0018 SEND_VAL int(0) 2
0019 DO_FCALL
0020 EXT_STMT
0021 JMPZ bool(false) 0027
0022 EXT_STMT
0023 INIT_FCALL 2 112 string("define")
0024 SEND_VAL string("GRAPHEME_EXTR_MAXBYTES") 1
0025 SEND_VAL int(1) 2
0026 DO_FCALL
0027 EXT_STMT
0028 JMPZ bool(false) 0034
0029 EXT_STMT
0030 INIT_FCALL 2 112 string("define")
0031 SEND_VAL string("GRAPHEME_EXTR_MAXCHARS") 1
0032 SEND_VAL int(2) 2
0033 DO_FCALL
0034 EXT_STMT
0035 INIT_FCALL 1 96 string("function_exists")
0036 SEND_VAL string("grapheme_extract") 1
0037 V5 = DO_FCALL
0038 T6 = BOOL_NOT V5
0039 JMPZ T6 0042
0040 EXT_STMT
0041 DECLARE_FUNCTION string("grapheme_extract")
0042 EXT_STMT
0043 INIT_FCALL 1 96 string("function_exists")
0044 SEND_VAL string("grapheme_stripos") 1
0045 V7 = DO_FCALL
0046 T8 = BOOL_NOT V7
0047 JMPZ T8 0050
0048 EXT_STMT
0049 DECLARE_FUNCTION string("grapheme_stripos")
0050 EXT_STMT
0051 INIT_FCALL 1 96 string("function_exists")
0052 SEND_VAL string("grapheme_stristr") 1
0053 V9 = DO_FCALL
0054 T10 = BOOL_NOT V9
0055 JMPZ T10 0058
0056 EXT_STMT
0057 DECLARE_FUNCTION string("grapheme_stristr")
0058 EXT_STMT
0059 INIT_FCALL 1 96 string("function_exists")
0060 SEND_VAL string("grapheme_strlen") 1
0061 V11 = DO_FCALL
0062 T12 = BOOL_NOT V11
0063 JMPZ T12 0066
0064 EXT_STMT
0065 DECLARE_FUNCTION string("grapheme_strlen")
0066 EXT_STMT
0067 INIT_FCALL 1 96 string("function_exists")
0068 SEND_VAL string("grapheme_strpos") 1
0069 V13 = DO_FCALL
0070 T14 = BOOL_NOT V13
0071 JMPZ T14 0074
0072 EXT_STMT
0073 DECLARE_FUNCTION string("grapheme_strpos")
0074 EXT_STMT
0075 INIT_FCALL 1 96 string("function_exists")
0076 SEND_VAL string("grapheme_strripos") 1
0077 V15 = DO_FCALL
0078 T16 = BOOL_NOT V15
0079 JMPZ T16 0082
0080 EXT_STMT
0081 DECLARE_FUNCTION string("grapheme_strripos")
0082 EXT_STMT
0083 INIT_FCALL 1 96 string("function_exists")
0084 SEND_VAL string("grapheme_strrpos") 1
0085 V17 = DO_FCALL
0086 T18 = BOOL_NOT V17
0087 JMPZ T18 0090
0088 EXT_STMT
0089 DECLARE_FUNCTION string("grapheme_strrpos")
0090 EXT_STMT
0091 INIT_FCALL 1 96 string("function_exists")
0092 SEND_VAL string("grapheme_strstr") 1
0093 V19 = DO_FCALL
0094 T20 = BOOL_NOT V19
0095 JMPZ T20 0098
0096 EXT_STMT
0097 DECLARE_FUNCTION string("grapheme_strstr")
0098 EXT_STMT
0099 INIT_FCALL 1 96 string("function_exists")
0100 SEND_VAL string("grapheme_substr") 1
0101 V21 = DO_FCALL
0102 T22 = BOOL_NOT V21
0103 JMPZ T22 0106
0104 EXT_STMT
0105 DECLARE_FUNCTION string("grapheme_substr")
0106 RETURN int(1)

grapheme_extract:
     ; (lines=16, args=5, vars=5, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-grapheme/bootstrap.php:33-33
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($size) = RECV 2
0002 CV2($type) = RECV_INIT 3 int(0)
0003 CV3($start) = RECV_INIT 4 int(0)
0004 CV4($next) = RECV_INIT 5 int(0)
0005 EXT_STMT
0006 INIT_STATIC_METHOD_CALL 5 string("Symfony\Polyfill\Intl\Grapheme\Grapheme") string("grapheme_extract")
0007 SEND_VAR_EX CV0($haystack) 1
0008 SEND_VAR_EX CV1($size) 2
0009 SEND_VAR_EX CV2($type) 3
0010 SEND_VAR_EX CV3($start) 4
0011 SEND_VAR_EX CV4($next) 5
0012 V5 = DO_FCALL
0013 RETURN V5
0014 EXT_STMT
0015 RETURN null

grapheme_stripos:
     ; (lines=12, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-grapheme/bootstrap.php:36-36
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($offset) = RECV_INIT 3 int(0)
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Intl\Grapheme\Grapheme") string("grapheme_stripos")
0005 SEND_VAR_EX CV0($haystack) 1
0006 SEND_VAR_EX CV1($needle) 2
0007 SEND_VAR_EX CV2($offset) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

grapheme_stristr:
     ; (lines=12, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-grapheme/bootstrap.php:39-39
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($beforeNeedle) = RECV_INIT 3 bool(false)
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Intl\Grapheme\Grapheme") string("grapheme_stristr")
0005 SEND_VAR_EX CV0($haystack) 1
0006 SEND_VAR_EX CV1($needle) 2
0007 SEND_VAR_EX CV2($beforeNeedle) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

grapheme_strlen:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-grapheme/bootstrap.php:42-42
     ; return  [] RANGE[0..0]
0000 CV0($input) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("Symfony\Polyfill\Intl\Grapheme\Grapheme") string("grapheme_strlen")
0003 SEND_VAR_EX CV0($input) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

grapheme_strpos:
     ; (lines=12, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-grapheme/bootstrap.php:45-45
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($offset) = RECV_INIT 3 int(0)
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Intl\Grapheme\Grapheme") string("grapheme_strpos")
0005 SEND_VAR_EX CV0($haystack) 1
0006 SEND_VAR_EX CV1($needle) 2
0007 SEND_VAR_EX CV2($offset) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

grapheme_strripos:
     ; (lines=12, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-grapheme/bootstrap.php:48-48
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($offset) = RECV_INIT 3 int(0)
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Intl\Grapheme\Grapheme") string("grapheme_strripos")
0005 SEND_VAR_EX CV0($haystack) 1
0006 SEND_VAR_EX CV1($needle) 2
0007 SEND_VAR_EX CV2($offset) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

grapheme_strrpos:
     ; (lines=12, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-grapheme/bootstrap.php:51-51
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($offset) = RECV_INIT 3 int(0)
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Intl\Grapheme\Grapheme") string("grapheme_strrpos")
0005 SEND_VAR_EX CV0($haystack) 1
0006 SEND_VAR_EX CV1($needle) 2
0007 SEND_VAR_EX CV2($offset) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

grapheme_strstr:
     ; (lines=12, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-grapheme/bootstrap.php:54-54
     ; return  [] RANGE[0..0]
0000 CV0($haystack) = RECV 1
0001 CV1($needle) = RECV 2
0002 CV2($beforeNeedle) = RECV_INIT 3 bool(false)
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Intl\Grapheme\Grapheme") string("grapheme_strstr")
0005 SEND_VAR_EX CV0($haystack) 1
0006 SEND_VAR_EX CV1($needle) 2
0007 SEND_VAR_EX CV2($beforeNeedle) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

grapheme_substr:
     ; (lines=12, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-grapheme/bootstrap.php:57-57
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($offset) = RECV 2
0002 CV2($length) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 3 string("Symfony\Polyfill\Intl\Grapheme\Grapheme") string("grapheme_substr")
0005 SEND_VAR_EX CV0($string) 1
0006 SEND_VAR_EX CV1($offset) 2
0007 SEND_VAR_EX CV2($length) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

$_main:
     ; (lines=23, args=0, vars=0, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-normalizer/bootstrap.php:1-24
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 JMPZ bool(true) 0006
0003 EXT_STMT
0004 V0 = INCLUDE_OR_EVAL (require) string("/home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-normalizer/bootstrap80.php")
0005 RETURN V0
0006 EXT_STMT
0007 INIT_FCALL 1 96 string("function_exists")
0008 SEND_VAL string("normalizer_is_normalized") 1
0009 V1 = DO_FCALL
0010 T2 = BOOL_NOT V1
0011 JMPZ T2 0014
0012 EXT_STMT
0013 DECLARE_FUNCTION string("normalizer_is_normalized")
0014 EXT_STMT
0015 INIT_FCALL 1 96 string("function_exists")
0016 SEND_VAL string("normalizer_normalize") 1
0017 V3 = DO_FCALL
0018 T4 = BOOL_NOT V3
0019 JMPZ T4 0022
0020 EXT_STMT
0021 DECLARE_FUNCTION string("normalizer_normalize")
0022 RETURN int(1)

normalizer_is_normalized:
     ; (lines=10, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-normalizer/bootstrap.php:19-19
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($form) = RECV_INIT 2 zval(type=11)
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Intl\Normalizer\Normalizer") string("isNormalized")
0004 SEND_VAR_EX CV0($string) 1
0005 SEND_VAR_EX CV1($form) 2
0006 V2 = DO_FCALL
0007 RETURN V2
0008 EXT_STMT
0009 RETURN null

normalizer_normalize:
     ; (lines=10, args=2, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-normalizer/bootstrap.php:22-22
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($form) = RECV_INIT 2 zval(type=11)
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Intl\Normalizer\Normalizer") string("normalize")
0004 SEND_VAR_EX CV0($string) 1
0005 SEND_VAR_EX CV1($form) 2
0006 V2 = DO_FCALL
0007 RETURN V2
0008 EXT_STMT
0009 RETURN null

$_main:
     ; (lines=18, args=0, vars=0, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-normalizer/bootstrap80.php:1-20
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 INIT_FCALL 1 96 string("function_exists")
0003 SEND_VAL string("normalizer_is_normalized") 1
0004 V0 = DO_FCALL
0005 T1 = BOOL_NOT V0
0006 JMPZ T1 0009
0007 EXT_STMT
0008 DECLARE_FUNCTION string("normalizer_is_normalized")
0009 EXT_STMT
0010 INIT_FCALL 1 96 string("function_exists")
0011 SEND_VAL string("normalizer_normalize") 1
0012 V2 = DO_FCALL
0013 T3 = BOOL_NOT V2
0014 JMPZ T3 0017
0015 EXT_STMT
0016 DECLARE_FUNCTION string("normalizer_normalize")
0017 RETURN int(1)

normalizer_is_normalized:
     ; (lines=14, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-normalizer/bootstrap80.php:15-15
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($form) = RECV_INIT 2 zval(type=11)
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Intl\Normalizer\Normalizer") string("isNormalized")
0004 T2 = CAST (string) CV0($string)
0005 SEND_VAL_EX T2 1
0006 T3 = CAST (long) CV1($form)
0007 SEND_VAL_EX T3 2
0008 V4 = DO_FCALL
0009 VERIFY_RETURN_TYPE V4
0010 RETURN V4
0011 EXT_STMT
0012 VERIFY_RETURN_TYPE
0013 RETURN null
LIVE RANGES:
     4: 0009 - 0010 (tmp/var)

normalizer_normalize:
     ; (lines=14, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/polyfill-intl-normalizer/bootstrap80.php:18-18
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 CV1($form) = RECV_INIT 2 zval(type=11)
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 string("Symfony\Polyfill\Intl\Normalizer\Normalizer") string("normalize")
0004 T2 = CAST (string) CV0($string)
0005 SEND_VAL_EX T2 1
0006 T3 = CAST (long) CV1($form)
0007 SEND_VAL_EX T3 2
0008 V4 = DO_FCALL
0009 VERIFY_RETURN_TYPE V4
0010 RETURN V4
0011 EXT_STMT
0012 VERIFY_RETURN_TYPE
0013 RETURN null
LIVE RANGES:
     4: 0009 - 0010 (tmp/var)

$_main:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/myclabs/deep-copy/src/DeepCopy/deep_copy.php:1-21
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 INIT_FCALL 1 96 string("function_exists")
0004 SEND_VAL string("DeepCopy\deep_copy") 1
0005 V0 = DO_FCALL
0006 T1 = TYPE_CHECK (false) V0
0007 JMPZ T1 0010
0008 EXT_STMT
0009 DECLARE_FUNCTION string("deepcopy\deep_copy")
0010 RETURN int(1)

DeepCopy\deep_copy:
     ; (lines=12, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/myclabs/deep-copy/src/DeepCopy/deep_copy.php:16-19
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 CV1($useCloneMethod) = RECV_INIT 2 bool(false)
0002 EXT_STMT
0003 V2 = NEW 1 string("DeepCopy\DeepCopy")
0004 SEND_VAR_EX CV1($useCloneMethod) 1
0005 DO_FCALL
0006 INIT_METHOD_CALL 1 V2 string("copy")
0007 SEND_VAR_EX CV0($value) 1
0008 V4 = DO_FCALL
0009 RETURN V4
0010 EXT_STMT
0011 RETURN null
LIVE RANGES:
     2: 0004 - 0006 (new)

$_main:
     ; (lines=26, args=0, vars=0, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/string/Resources/functions.php:1-39
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 INIT_FCALL 1 96 string("function_exists")
0003 SEND_VAL string("Symfony\Component\String\u") 1
0004 V0 = DO_FCALL
0005 T1 = BOOL_NOT V0
0006 JMPZ T1 0009
0007 EXT_STMT
0008 DECLARE_FUNCTION string("symfony\component\string\u")
0009 EXT_STMT
0010 INIT_FCALL 1 96 string("function_exists")
0011 SEND_VAL string("Symfony\Component\String\b") 1
0012 V2 = DO_FCALL
0013 T3 = BOOL_NOT V2
0014 JMPZ T3 0017
0015 EXT_STMT
0016 DECLARE_FUNCTION string("symfony\component\string\b")
0017 EXT_STMT
0018 INIT_FCALL 1 96 string("function_exists")
0019 SEND_VAL string("Symfony\Component\String\s") 1
0020 V4 = DO_FCALL
0021 T5 = BOOL_NOT V4
0022 JMPZ T5 0025
0023 EXT_STMT
0024 DECLARE_FUNCTION string("symfony\component\string\s")
0025 RETURN int(1)

Symfony\Component\String\u:
     ; (lines=12, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/string/Resources/functions.php:15-18
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV_INIT 1 string("")
0001 EXT_STMT
0002 V1 = NEW 1 string("Symfony\Component\String\UnicodeString")
0003 T2 = COALESCE CV0($string) 0005
0004 T2 = QM_ASSIGN string("")
0005 SEND_VAL_EX T2 1
0006 DO_FCALL
0007 VERIFY_RETURN_TYPE V1
0008 RETURN V1
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     1: 0003 - 0007 (new)
     1: 0007 - 0008 (tmp/var)

Symfony\Component\String\b:
     ; (lines=12, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/string/Resources/functions.php:22-25
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV_INIT 1 string("")
0001 EXT_STMT
0002 V1 = NEW 1 string("Symfony\Component\String\ByteString")
0003 T2 = COALESCE CV0($string) 0005
0004 T2 = QM_ASSIGN string("")
0005 SEND_VAL_EX T2 1
0006 DO_FCALL
0007 VERIFY_RETURN_TYPE V1
0008 RETURN V1
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     1: 0003 - 0007 (new)
     1: 0007 - 0008 (tmp/var)

Symfony\Component\String\s:
     ; (lines=25, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/string/Resources/functions.php:32-37
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV_INIT 1 string("")
0001 EXT_STMT
0002 T1 = COALESCE CV0($string) 0004
0003 T1 = QM_ASSIGN string("")
0004 ASSIGN CV0($string) T1
0005 EXT_STMT
0006 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\String\preg_match")
0007 SEND_VAL_EX string("//u") 1
0008 SEND_VAR_EX CV0($string) 2
0009 V3 = DO_FCALL
0010 JMPZ V3 0016
0011 V4 = NEW 1 string("Symfony\Component\String\UnicodeString")
0012 SEND_VAR_EX CV0($string) 1
0013 DO_FCALL
0014 T6 = QM_ASSIGN V4
0015 JMP 0020
0016 V7 = NEW 1 string("Symfony\Component\String\ByteString")
0017 SEND_VAR_EX CV0($string) 1
0018 DO_FCALL
0019 T6 = QM_ASSIGN V7
0020 VERIFY_RETURN_TYPE T6
0021 RETURN T6
0022 EXT_STMT
0023 VERIFY_RETURN_TYPE
0024 RETURN null
LIVE RANGES:
     4: 0012 - 0014 (new)
     7: 0017 - 0019 (new)
     6: 0020 - 0021 (tmp/var)

$_main:
     ; (lines=11, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Benchmark/Assertion/AssertionProcessorBench.php:1-59
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 EXT_STMT
0009 DECLARE_CLASS_DELAYED string("phpbench\tests\benchmark\assertion\assertionprocessorbench") string("phpbench\tests\benchmark\integrationbenchcase")
0010 RETURN int(1)

PhpBench\Tests\Benchmark\Assertion\AssertionProcessorBench::__construct:
     ; (lines=83, args=0, vars=3, tmps=32)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Benchmark/Assertion/AssertionProcessorBench.php:24-52
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_METHOD_CALL 0 THIS string("container")
0002 V4 = DO_FCALL
0003 INIT_METHOD_CALL 1 V4 string("get")
0004 SEND_VAL_EX string("PhpBench\Assertion\AssertionProcessor") 1
0005 V5 = DO_FCALL
0006 ASSIGN_OBJ THIS string("processor")
0007 OP_DATA V5
0008 EXT_STMT
0009 INIT_STATIC_METHOD_CALL 0 string("PhpBench\Tests\Util\VariantBuilder") string("create")
0010 V6 = DO_FCALL
0011 INIT_METHOD_CALL 1 V6 string("setRevs")
0012 SEND_VAL_EX int(100) 1
0013 V7 = DO_FCALL
0014 ASSIGN CV0($variant) V7
0015 EXT_STMT
0016 ASSIGN CV1($i) int(0)
0017 JMP 0035
0018 EXT_STMT
0019 INIT_METHOD_CALL 0 CV0($variant) string("iteration")
0020 V10 = DO_FCALL
0021 INIT_METHOD_CALL 2 V10 string("setResult")
0022 V11 = NEW 2 string("PhpBench\Model\Result\TimeResult")
0023 SEND_VAL_EX int(100) 1
0024 SEND_VAL_EX int(1) 2
0025 DO_FCALL
0026 SEND_VAR_NO_REF_EX V11 1
0027 V13 = NEW 3 string("PhpBench\Model\Result\MemoryResult")
0028 SEND_VAL_EX int(100) 1
0029 SEND_VAL_EX int(100) 2
0030 SEND_VAL_EX int(100) 3
0031 DO_FCALL
0032 SEND_VAR_NO_REF_EX V13 2
0033 DO_FCALL
0034 PRE_INC CV1($i)
0035 T17 = IS_SMALLER CV1($i) int(100)
0036 EXT_STMT
0037 JMPNZ T17 0018
0038 EXT_STMT
0039 INIT_STATIC_METHOD_CALL 0 string("PhpBench\Tests\Util\VariantBuilder") string("create")
0040 V18 = DO_FCALL
0041 INIT_METHOD_CALL 1 V18 string("setRevs")
0042 SEND_VAL_EX int(100) 1
0043 V19 = DO_FCALL
0044 ASSIGN CV2($baseline) V19
0045 EXT_STMT
0046 ASSIGN CV1($i) int(0)
0047 JMP 0065
0048 EXT_STMT
0049 INIT_METHOD_CALL 0 CV2($baseline) string("iteration")
0050 V22 = DO_FCALL
0051 INIT_METHOD_CALL 2 V22 string("setResult")
0052 V23 = NEW 2 string("PhpBench\Model\Result\TimeResult")
0053 SEND_VAL_EX int(100) 1
0054 SEND_VAL_EX int(1) 2
0055 DO_FCALL
0056 SEND_VAR_NO_REF_EX V23 1
0057 V25 = NEW 3 string("PhpBench\Model\Result\MemoryResult")
0058 SEND_VAL_EX int(100) 1
0059 SEND_VAL_EX int(100) 2
0060 SEND_VAL_EX int(100) 3
0061 DO_FCALL
0062 SEND_VAR_NO_REF_EX V25 2
0063 DO_FCALL
0064 PRE_INC CV1($i)
0065 T29 = IS_SMALLER CV1($i) int(100)
0066 EXT_STMT
0067 JMPNZ T29 0048
0068 EXT_STMT
0069 INIT_METHOD_CALL 0 CV0($variant) string("build")
0070 V30 = DO_FCALL
0071 ASSIGN CV0($variant) V30
0072 EXT_STMT
0073 INIT_METHOD_CALL 1 CV0($variant) string("attachBaseline")
0074 INIT_METHOD_CALL 0 CV2($baseline) string("build")
0075 V32 = DO_FCALL
0076 SEND_VAR_NO_REF_EX V32 1
0077 DO_FCALL
0078 EXT_STMT
0079 ASSIGN_OBJ THIS string("variant")
0080 OP_DATA CV0($variant)
0081 EXT_STMT
0082 RETURN null
LIVE RANGES:
     11: 0023 - 0026 (new)
     13: 0028 - 0032 (new)
     17: 0036 - 0037 (tmp/var)
     23: 0053 - 0056 (new)
     25: 0058 - 0062 (new)
     29: 0066 - 0067 (tmp/var)

PhpBench\Tests\Benchmark\Assertion\AssertionProcessorBench::benchAssert:
     ; (lines=10, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Benchmark/Assertion/AssertionProcessorBench.php:54-57
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("processor")
0002 INIT_METHOD_CALL 2 T0 string("assert")
0003 CHECK_FUNC_ARG 1
0004 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("variant")
0005 SEND_FUNC_ARG V1 1
0006 SEND_VAL_EX string("mode(variant.time.avg) < mode(baseline.time.avg) +/- 10%") 2
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

$_main:
     ; (lines=11, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Benchmark/IntegrationBenchCase.php:1-39
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 EXT_STMT
0010 RETURN int(1)

PhpBench\Tests\Benchmark\IntegrationBenchCase::workspace:
     ; (lines=9, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Benchmark/IntegrationBenchCase.php:17-20
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Tests\Util\Workspace") string("create")
0002 SEND_VAL_EX string("/home/daniel/www/phpbench/phpbench/tests/Benchmark/../Workspace") 1
0003 V0 = DO_FCALL
0004 VERIFY_RETURN_TYPE V0
0005 RETURN V0
0006 EXT_STMT
0007 VERIFY_RETURN_TYPE
0008 RETURN null
LIVE RANGES:
     0: 0004 - 0005 (tmp/var)

PhpBench\Tests\Benchmark\IntegrationBenchCase::container:
     ; (lines=22, args=1, vars=2, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Benchmark/IntegrationBenchCase.php:22-37
     ; return  [] RANGE[0..0]
0000 CV0($config) = RECV_INIT 1 array(...)
0001 EXT_STMT
0002 V2 = NEW 2 string("PhpBench\DependencyInjection\Container")
0003 SEND_VAL_EX array(...) 1
0004 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Tests\Benchmark\array_merge")
0005 T3 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("PARAM_DISABLE_OUTPUT")
0006 T4 = INIT_ARRAY 1 (packed) bool(true) T3
0007 SEND_VAL_EX T4 1
0008 SEND_VAR_EX CV0($config) 2
0009 V5 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V5 2
0011 DO_FCALL
0012 ASSIGN CV1($container) V2
0013 EXT_STMT
0014 INIT_METHOD_CALL 0 CV1($container) string("init")
0015 DO_FCALL
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE CV1($container)
0018 RETURN CV1($container)
0019 EXT_STMT
0020 VERIFY_RETURN_TYPE
0021 RETURN null
LIVE RANGES:
     2: 0003 - 0012 (new)

$_main:
     ; (lines=12, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:1-283
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 EXT_STMT
0010 DECLARE_CLASS string("phpbench\dependencyinjection\container")
0011 RETURN int(1)

PhpBench\DependencyInjection\Container::__construct:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:55-59
     ; return  [] RANGE[0..0]
0000 CV0($extensionClasses) = RECV_INIT 1 array(...)
0001 CV1($config) = RECV_INIT 2 array(...)
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("extensionClasses")
0004 OP_DATA CV0($extensionClasses)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("config")
0007 OP_DATA CV1($config)
0008 EXT_STMT
0009 RETURN null

PhpBench\DependencyInjection\Container::init:
     ; (lines=142, args=0, vars=7, tmps=49)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:68-122
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V7 = NEW 0 string("Symfony\Component\OptionsResolver\OptionsResolver")
0002 DO_FCALL
0003 ASSIGN CV0($resolver) V7
0004 EXT_STMT
0005 ASSIGN CV1($extensions) array(...)
0006 EXT_STMT
0007 ASSIGN CV2($config) array(...)
0008 EXT_STMT
0009 T12 = ISSET_ISEMPTY_PROP_OBJ (empty) THIS string("extensionClasses")
0010 T12 = JMPZ_EX T12 0013
0011 T13 = ISSET_ISEMPTY_PROP_OBJ (empty) THIS string("config")
0012 T12 = BOOL T13
0013 JMPZ T12 0016
0014 EXT_STMT
0015 RETURN null
0016 EXT_STMT
0017 T14 = FETCH_OBJ_R THIS string("extensionClasses")
0018 V15 = FE_RESET_R T14 0064
0019 FE_FETCH_R V15 CV3($extensionClass) 0064
0020 EXT_STMT
0021 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\DependencyInjection\class_exists")
0022 SEND_VAR_EX CV3($extensionClass) 1
0023 V16 = DO_FCALL
0024 T17 = BOOL_NOT V16
0025 JMPZ T17 0035
0026 EXT_STMT
0027 V18 = NEW 1 string("InvalidArgumentException")
0028 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\DependencyInjection\sprintf")
0029 SEND_VAL_EX string("Extension class "%s" does not exist") 1
0030 SEND_VAR_EX CV3($extensionClass) 2
0031 V19 = DO_FCALL
0032 SEND_VAR_NO_REF_EX V19 1
0033 DO_FCALL
0034 THROW V18
0035 EXT_STMT
0036 V21 = FETCH_CLASS (exception) CV3($extensionClass)
0037 V22 = NEW 0 V21
0038 DO_FCALL
0039 ASSIGN CV4($extension) V22
0040 EXT_STMT
0041 T25 = INSTANCEOF CV4($extension) string("PhpBench\DependencyInjection\ExtensionInterface")
0042 T26 = BOOL_NOT T25
0043 JMPZ T26 0056
0044 EXT_STMT
0045 V27 = NEW 1 string("InvalidArgumentException")
0046 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\DependencyInjection\sprintf")
0047 SEND_VAL_EX string("Extension "%s" must implement the PhpBench\Extension interface") 1
0048 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\DependencyInjection\get_class")
0049 SEND_VAR_EX CV4($extension) 1
0050 V28 = DO_FCALL
0051 SEND_VAR_NO_REF_EX V28 2
0052 V29 = DO_FCALL
0053 SEND_VAR_NO_REF_EX V29 1
0054 DO_FCALL
0055 THROW V27
0056 EXT_STMT
0057 ASSIGN_DIM CV1($extensions) NEXT
0058 OP_DATA CV4($extension)
0059 EXT_STMT
0060 INIT_METHOD_CALL 1 CV4($extension) string("configure")
0061 SEND_VAR_EX CV0($resolver) 1
0062 DO_FCALL
0063 JMP 0019
0064 FE_FREE V15
0065 EXT_STMT
0066 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\DependencyInjection\array_diff")
0067 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\DependencyInjection\array_keys")
0068 CHECK_FUNC_ARG 1
0069 V33 = FETCH_OBJ_FUNC_ARG (ref) THIS string("config")
0070 SEND_FUNC_ARG V33 1
0071 V34 = DO_FCALL
0072 SEND_VAR_NO_REF_EX V34 1
0073 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\DependencyInjection\array_keys")
0074 CHECK_FUNC_ARG 1
0075 V35 = FETCH_OBJ_FUNC_ARG (ref) THIS string("config")
0076 SEND_FUNC_ARG V35 1
0077 V36 = DO_FCALL
0078 SEND_VAR_NO_REF_EX V36 2
0079 V37 = DO_FCALL
0080 ASSIGN CV5($diff) V37
0081 EXT_STMT
0082 JMPZ CV5($diff) 0106
0083 EXT_STMT
0084 V39 = NEW 1 string("InvalidArgumentException")
0085 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\DependencyInjection\sprintf")
0086 SEND_VAL_EX string("Unknown configuration keys: "%s". Permitted keys: "%s"") 1
0087 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\DependencyInjection\implode")
0088 SEND_VAL_EX string("", "") 1
0089 SEND_VAR_EX CV5($diff) 2
0090 V40 = DO_FCALL
0091 SEND_VAR_NO_REF_EX V40 2
0092 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\DependencyInjection\implode")
0093 SEND_VAL_EX string("", "") 1
0094 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\DependencyInjection\array_keys")
0095 CHECK_FUNC_ARG 1
0096 V41 = FETCH_OBJ_FUNC_ARG (ref) THIS string("config")
0097 SEND_FUNC_ARG V41 1
0098 V42 = DO_FCALL
0099 SEND_VAR_NO_REF_EX V42 2
0100 V43 = DO_FCALL
0101 SEND_VAR_NO_REF_EX V43 3
0102 V44 = DO_FCALL
0103 SEND_VAR_NO_REF_EX V44 1
0104 DO_FCALL
0105 THROW V39
0106 NOP
0107 EXT_STMT
0108 INIT_METHOD_CALL 1 CV0($resolver) string("resolve")
0109 CHECK_FUNC_ARG 1
0110 V47 = FETCH_OBJ_FUNC_ARG (ref) THIS string("config")
0111 SEND_FUNC_ARG V47 1
0112 V48 = DO_FCALL
0113 ASSIGN_OBJ THIS string("config")
0114 OP_DATA V48
0115 JMP 0130
0116 CV6($resolverException) = CATCH string("Symfony\Component\OptionsResolver\Exception\ExceptionInterface")
0117 EXT_STMT
0118 V49 = NEW 3 string("PhpBench\DependencyInjection\InvalidConfigurationException")
0119 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\DependencyInjection\sprintf")
0120 SEND_VAL_EX string("Invalid user configuration: %s") 1
0121 INIT_METHOD_CALL 0 CV6($resolverException) string("getMessage")
0122 V50 = DO_FCALL
0123 SEND_VAR_NO_REF_EX V50 2
0124 V51 = DO_FCALL
0125 SEND_VAR_NO_REF_EX V51 1
0126 SEND_VAL_EX int(0) 2
0127 SEND_VAR_EX CV6($resolverException) 3
0128 DO_FCALL
0129 THROW V49
0130 EXT_STMT
0131 V53 = FE_RESET_R CV1($extensions) 0139
0132 FE_FETCH_R V53 CV4($extension) 0139
0133 EXT_STMT
0134 INIT_METHOD_CALL 1 CV4($extension) string("load")
0135 V54 = FETCH_THIS
0136 SEND_VAR_EX V54 1
0137 DO_FCALL
0138 JMP 0132
0139 FE_FREE V53
0140 EXT_STMT
0141 RETURN null
LIVE RANGES:
     7: 0002 - 0003 (new)
     15: 0019 - 0064 (loop)
     18: 0028 - 0034 (new)
     22: 0038 - 0039 (new)
     27: 0046 - 0055 (new)
     39: 0085 - 0105 (new)
     49: 0119 - 0129 (new)
     53: 0132 - 0139 (loop)
EXCEPTION TABLE:
     0107, 0116, -, -

PhpBench\DependencyInjection\Container::get:
     ; (lines=39, args=1, vars=1, tmps=18)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:130-146
     ; return  [] RANGE[0..0]
0000 CV0($serviceId) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("services")
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($serviceId)
0004 JMPZ T2 0009
0005 EXT_STMT
0006 T3 = FETCH_OBJ_R THIS string("services")
0007 T4 = FETCH_DIM_R T3 CV0($serviceId)
0008 RETURN T4
0009 EXT_STMT
0010 T5 = FETCH_OBJ_IS THIS string("instantiators")
0011 T6 = ISSET_ISEMPTY_DIM_OBJ (isset) T5 CV0($serviceId)
0012 T7 = BOOL_NOT T6
0013 JMPZ T7 0023
0014 EXT_STMT
0015 V8 = NEW 1 string("InvalidArgumentException")
0016 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\DependencyInjection\sprintf")
0017 SEND_VAL_EX string("No instantiator has been registered for requested service "%s"") 1
0018 SEND_VAR_EX CV0($serviceId) 2
0019 V9 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V9 1
0021 DO_FCALL
0022 THROW V8
0023 EXT_STMT
0024 T13 = FETCH_OBJ_R THIS string("instantiators")
0025 T14 = FETCH_DIM_R T13 CV0($serviceId)
0026 INIT_DYNAMIC_CALL 1 T14
0027 V15 = FETCH_THIS
0028 SEND_VAR_EX V15 1
0029 V16 = DO_FCALL
0030 V11 = FETCH_OBJ_W (dim write) THIS string("services")
0031 ASSIGN_DIM V11 CV0($serviceId)
0032 OP_DATA V16
0033 EXT_STMT
0034 T17 = FETCH_OBJ_R THIS string("services")
0035 T18 = FETCH_DIM_R T17 CV0($serviceId)
0036 RETURN T18
0037 EXT_STMT
0038 RETURN null
LIVE RANGES:
     8: 0016 - 0022 (new)
     16: 0030 - 0031 (tmp/var)

PhpBench\DependencyInjection\Container::has:
     ; (lines=9, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:151-154
     ; return  [] RANGE[0..0]
0000 CV0($serviceId) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("instantiators")
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($serviceId)
0004 VERIFY_RETURN_TYPE T2
0005 RETURN T2
0006 EXT_STMT
0007 VERIFY_RETURN_TYPE
0008 RETURN null
LIVE RANGES:
     2: 0004 - 0005 (tmp/var)

PhpBench\DependencyInjection\Container::set:
     ; (lines=8, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:161-164
     ; return  [] RANGE[0..0]
0000 CV0($serviceId) = RECV 1
0001 CV1($instance) = RECV 2
0002 EXT_STMT
0003 V2 = FETCH_OBJ_W (dim write) THIS string("services")
0004 ASSIGN_DIM V2 CV0($serviceId)
0005 OP_DATA CV1($instance)
0006 EXT_STMT
0007 RETURN null

PhpBench\DependencyInjection\Container::getServiceIdsForTag:
     ; (lines=23, args=1, vars=4, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:171-181
     ; return  [] RANGE[0..0]
0000 CV0($tag) = RECV 1
0001 EXT_STMT
0002 ASSIGN CV1($serviceIds) array(...)
0003 EXT_STMT
0004 T5 = FETCH_OBJ_R THIS string("tags")
0005 V6 = FE_RESET_R T5 0016
0006 T7 = FE_FETCH_R V6 CV2($tags) 0016
0007 ASSIGN CV3($serviceId) T7
0008 EXT_STMT
0009 T9 = ISSET_ISEMPTY_DIM_OBJ (isset) CV2($tags) CV0($tag)
0010 JMPZ T9 0015
0011 EXT_STMT
0012 T11 = FETCH_DIM_R CV2($tags) CV0($tag)
0013 ASSIGN_DIM CV1($serviceIds) CV3($serviceId)
0014 OP_DATA T11
0015 JMP 0006
0016 FE_FREE V6
0017 EXT_STMT
0018 VERIFY_RETURN_TYPE CV1($serviceIds)
0019 RETURN CV1($serviceIds)
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     6: 0006 - 0016 (loop)

PhpBench\DependencyInjection\Container::register:
     ; (lines=26, args=3, vars=3, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:191-202
     ; return  [] RANGE[0..0]
0000 CV0($serviceId) = RECV 1
0001 CV1($instantiator) = RECV 2
0002 CV2($tags) = RECV_INIT 3 array(...)
0003 EXT_STMT
0004 T3 = FETCH_OBJ_IS THIS string("instantiators")
0005 T4 = ISSET_ISEMPTY_DIM_OBJ (isset) T3 CV0($serviceId)
0006 JMPZ T4 0016
0007 EXT_STMT
0008 V5 = NEW 1 string("InvalidArgumentException")
0009 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\DependencyInjection\sprintf")
0010 SEND_VAL_EX string("Service with ID "%s" has already been registered") 1
0011 SEND_VAR_EX CV0($serviceId) 2
0012 V6 = DO_FCALL
0013 SEND_VAR_NO_REF_EX V6 1
0014 DO_FCALL
0015 THROW V5
0016 EXT_STMT
0017 V8 = FETCH_OBJ_W (dim write) THIS string("instantiators")
0018 ASSIGN_DIM V8 CV0($serviceId)
0019 OP_DATA CV1($instantiator)
0020 EXT_STMT
0021 V10 = FETCH_OBJ_W (dim write) THIS string("tags")
0022 ASSIGN_DIM V10 CV0($serviceId)
0023 OP_DATA CV2($tags)
0024 EXT_STMT
0025 RETURN null
LIVE RANGES:
     5: 0009 - 0015 (new)

PhpBench\DependencyInjection\Container::setParameter:
     ; (lines=8, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:209-212
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 CV1($value) = RECV 2
0002 EXT_STMT
0003 V2 = FETCH_OBJ_W (dim write) THIS string("config")
0004 ASSIGN_DIM V2 CV0($name)
0005 OP_DATA CV1($value)
0006 EXT_STMT
0007 RETURN null

PhpBench\DependencyInjection\Container::mergeParameter:
     ; (lines=33, args=2, vars=3, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:217-232
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 CV1($values) = RECV 2
0002 EXT_STMT
0003 INIT_METHOD_CALL 1 THIS string("getParameter")
0004 SEND_VAR_EX CV0($name) 1
0005 V3 = DO_FCALL
0006 ASSIGN CV2($actual) V3
0007 EXT_STMT
0008 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\DependencyInjection\is_array")
0009 SEND_VAR_EX CV2($actual) 1
0010 V5 = DO_FCALL
0011 T6 = BOOL_NOT V5
0012 JMPZ T6 0022
0013 EXT_STMT
0014 V7 = NEW 1 string("InvalidArgumentException")
0015 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\DependencyInjection\sprintf")
0016 SEND_VAL_EX string("Cannot merge values on to a scalar parameter "%s"") 1
0017 SEND_VAR_EX CV0($name) 2
0018 V8 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V8 1
0020 DO_FCALL
0021 THROW V7
0022 EXT_STMT
0023 INIT_METHOD_CALL 2 THIS string("setParameter")
0024 SEND_VAR_EX CV0($name) 1
0025 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\DependencyInjection\array_merge")
0026 SEND_VAR_EX CV2($actual) 1
0027 SEND_VAR_EX CV1($values) 2
0028 V10 = DO_FCALL
0029 SEND_VAR_NO_REF_EX V10 2
0030 DO_FCALL
0031 EXT_STMT
0032 RETURN null
LIVE RANGES:
     7: 0015 - 0021 (new)

PhpBench\DependencyInjection\Container::getParameter:
     ; (lines=25, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:243-253
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\DependencyInjection\array_key_exists")
0003 SEND_VAR_EX CV0($name) 1
0004 CHECK_FUNC_ARG 2
0005 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("config")
0006 SEND_FUNC_ARG V1 2
0007 V2 = DO_FCALL
0008 T3 = BOOL_NOT V2
0009 JMPZ T3 0019
0010 EXT_STMT
0011 V4 = NEW 1 string("InvalidArgumentException")
0012 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\DependencyInjection\sprintf")
0013 SEND_VAL_EX string("Parameter "%s" has not been registered") 1
0014 SEND_VAR_EX CV0($name) 2
0015 V5 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 1
0017 DO_FCALL
0018 THROW V4
0019 EXT_STMT
0020 T7 = FETCH_OBJ_R THIS string("config")
0021 T8 = FETCH_DIM_R T7 CV0($name)
0022 RETURN T8
0023 EXT_STMT
0024 RETURN null
LIVE RANGES:
     4: 0012 - 0018 (new)

PhpBench\DependencyInjection\Container::getParameters:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:258-261
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("config")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\DependencyInjection\Container::hasParameter:
     ; (lines=11, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:270-273
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\DependencyInjection\array_key_exists")
0003 SEND_VAR_EX CV0($name) 1
0004 CHECK_FUNC_ARG 2
0005 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("config")
0006 SEND_FUNC_ARG V1 2
0007 V2 = DO_FCALL
0008 RETURN V2
0009 EXT_STMT
0010 RETURN null

PhpBench\DependencyInjection\Container::getExtensionClasses:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/Container.php:278-281
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("extensionClasses")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/psr/container/src/ContainerInterface.php:1-37
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 RETURN int(1)

Psr\Container\ContainerInterface::get:
     ; (lines=3, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/psr/container/src/ContainerInterface.php:22-22
     ; return  [] RANGE[0..0]
0000 CV0($id) = RECV 1
0001 EXT_STMT
0002 RETURN null

Psr\Container\ContainerInterface::has:
     ; (lines=3, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/psr/container/src/ContainerInterface.php:35-35
     ; return  [] RANGE[0..0]
0000 CV0($id) = RECV 1
0001 EXT_STMT
0002 RETURN null

$_main:
     ; (lines=14, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ConsoleExtension.php:1-112
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 EXT_STMT
0012 DECLARE_CLASS string("phpbench\extension\consoleextension")
0013 RETURN int(1)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ConsoleExtension.php:63-65
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = FETCH_THIS
0003 INIT_METHOD_CALL 2 V1 string("createOutput")
0004 SEND_VAR_EX CV0($container) 1
0005 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_OUTPUT_STREAM")
0006 SEND_VAL_EX T2 2
0007 V3 = DO_FCALL
0008 RETURN V3
0009 EXT_STMT
0010 RETURN null

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ConsoleExtension.php:67-69
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = FETCH_THIS
0003 INIT_METHOD_CALL 2 V1 string("createOutput")
0004 SEND_VAR_EX CV0($container) 1
0005 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ERROR_STREAM")
0006 SEND_VAL_EX T2 2
0007 V3 = DO_FCALL
0008 RETURN V3
0009 EXT_STMT
0010 RETURN null

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ConsoleExtension.php:71-73
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("Symfony\Component\Console\Input\ArgvInput")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=28, args=1, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ConsoleExtension.php:82-93
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Extension\fopen")
0003 SEND_VAR_EX CV0($name) 1
0004 SEND_VAL_EX string("w") 2
0005 V2 = DO_FCALL
0006 ASSIGN CV1($resource) V2
0007 EXT_STMT
0008 T4 = TYPE_CHECK (false) CV1($resource)
0009 JMPZ T4 0019
0010 EXT_STMT
0011 V5 = NEW 1 string("RuntimeException")
0012 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Extension\sprintf")
0013 SEND_VAL_EX string("Could not open stream "%s"") 1
0014 SEND_VAR_EX CV0($name) 2
0015 V6 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V6 1
0017 DO_FCALL
0018 THROW V5
0019 EXT_STMT
0020 V8 = NEW 1 string("Symfony\Component\Console\Output\StreamOutput")
0021 SEND_VAR_EX CV1($resource) 1
0022 DO_FCALL
0023 VERIFY_RETURN_TYPE V8
0024 RETURN V8
0025 EXT_STMT
0026 VERIFY_RETURN_TYPE
0027 RETURN null
LIVE RANGES:
     5: 0012 - 0018 (new)
     8: 0021 - 0023 (new)
     8: 0023 - 0024 (tmp/var)

PhpBench\Extension\ConsoleExtension::configure:
     ; (lines=52, args=1, vars=1, tmps=20)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ConsoleExtension.php:39-59
     ; return  [] RANGE[0..0]
0000 CV0($resolver) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 CV0($resolver) string("setDefaults")
0003 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ANSI")
0004 T2 = INIT_ARRAY 4 (packed) null T1
0005 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_DISABLE_OUTPUT")
0006 T2 = ADD_ARRAY_ELEMENT bool(false) T3
0007 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_OUTPUT_STREAM")
0008 T2 = ADD_ARRAY_ELEMENT string("php://stdout") T4
0009 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ERROR_STREAM")
0010 T2 = ADD_ARRAY_ELEMENT string("php://stderr") T5
0011 SEND_VAL_EX T2 1
0012 DO_FCALL
0013 EXT_STMT
0014 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0015 T7 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ANSI")
0016 SEND_VAL_EX T7 1
0017 SEND_VAL_EX array(...) 2
0018 DO_FCALL
0019 EXT_STMT
0020 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0021 T9 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_DISABLE_OUTPUT")
0022 SEND_VAL_EX T9 1
0023 SEND_VAL_EX array(...) 2
0024 DO_FCALL
0025 EXT_STMT
0026 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0027 T11 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ERROR_STREAM")
0028 SEND_VAL_EX T11 1
0029 SEND_VAL_EX array(...) 2
0030 DO_FCALL
0031 EXT_STMT
0032 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0033 T13 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_OUTPUT_STREAM")
0034 SEND_VAL_EX T13 1
0035 SEND_VAL_EX array(...) 2
0036 DO_FCALL
0037 EXT_STMT
0038 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Compat\SymfonyOptionsResolverCompat") string("setInfos")
0039 SEND_VAR_EX CV0($resolver) 1
0040 T15 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ANSI")
0041 T16 = INIT_ARRAY 4 (packed) string("Enable or disable ANSI control characters (e.g. console colors)") T15
0042 T17 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_OUTPUT_STREAM")
0043 T16 = ADD_ARRAY_ELEMENT string("Change the normal output stream - the output stream used for reports") T17
0044 T18 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ERROR_STREAM")
0045 T16 = ADD_ARRAY_ELEMENT string("Change the error output stream - the output stream used for diagnostics (e.g. progress loggers use this stream)") T18
0046 T19 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_DISABLE_OUTPUT")
0047 T16 = ADD_ARRAY_ELEMENT string("Disable output from both STDOUT and STDERR") T19
0048 SEND_VAL_EX T16 2
0049 DO_FCALL
0050 EXT_STMT
0051 RETURN null
LIVE RANGES:
     2: 0005 - 0011 (tmp/var)
     16: 0042 - 0048 (tmp/var)

PhpBench\Extension\ConsoleExtension::load:
     ; (lines=23, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ConsoleExtension.php:61-74
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_OUTPUT_STD")
0004 SEND_VAL_EX T1 1
0005 T2 = DECLARE_LAMBDA_FUNCTION string("")
0006 SEND_VAL_EX T2 2
0007 DO_FCALL
0008 EXT_STMT
0009 INIT_METHOD_CALL 2 CV0($container) string("register")
0010 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_OUTPUT_ERR")
0011 SEND_VAL_EX T4 1
0012 T5 = DECLARE_LAMBDA_FUNCTION string("")
0013 SEND_VAL_EX T5 2
0014 DO_FCALL
0015 EXT_STMT
0016 INIT_METHOD_CALL 2 CV0($container) string("register")
0017 SEND_VAL_EX string("Symfony\Component\Console\Input\InputInterface") 1
0018 T7 = DECLARE_LAMBDA_FUNCTION string("")
0019 SEND_VAL_EX T7 2
0020 DO_FCALL
0021 EXT_STMT
0022 RETURN null

PhpBench\Extension\ConsoleExtension::createOutput:
     ; (lines=148, args=2, vars=4, tmps=49)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ConsoleExtension.php:76-110
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 CV1($type) = RECV 2
0002 EXT_STMT
0003 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0004 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_DISABLE_OUTPUT")
0005 SEND_VAL_EX T4 1
0006 V5 = DO_FCALL
0007 JMPZ V5 0013
0008 EXT_STMT
0009 V6 = NEW 0 string("Symfony\Component\Console\Output\NullOutput")
0010 DO_FCALL
0011 VERIFY_RETURN_TYPE V6
0012 RETURN V6
0013 EXT_STMT
0014 T8 = DECLARE_LAMBDA_FUNCTION string("")
0015 INIT_DYNAMIC_CALL 1 T8
0016 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0017 SEND_VAR_EX CV1($type) 1
0018 V9 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V9 1
0020 V10 = DO_FCALL
0021 ASSIGN CV2($output) V10
0022 EXT_STMT
0023 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0024 T12 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ANSI")
0025 SEND_VAL_EX T12 1
0026 V13 = DO_FCALL
0027 T14 = ASSIGN CV3($ansi) V13
0028 T15 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] T14
0029 JMPZ T15 0034
0030 EXT_STMT
0031 INIT_METHOD_CALL 1 CV2($output) string("setDecorated")
0032 SEND_VAR_EX CV3($ansi) 1
0033 DO_FCALL
0034 EXT_STMT
0035 INIT_METHOD_CALL 0 CV2($output) string("getFormatter")
0036 V17 = DO_FCALL
0037 INIT_METHOD_CALL 2 V17 string("setStyle")
0038 SEND_VAL_EX string("success") 1
0039 V18 = NEW 3 string("Symfony\Component\Console\Formatter\OutputFormatterStyle")
0040 SEND_VAL_EX string("black") 1
0041 SEND_VAL_EX string("green") 2
0042 SEND_VAL_EX array(...) 3
0043 DO_FCALL
0044 SEND_VAR_NO_REF_EX V18 2
0045 DO_FCALL
0046 EXT_STMT
0047 INIT_METHOD_CALL 0 CV2($output) string("getFormatter")
0048 V21 = DO_FCALL
0049 INIT_METHOD_CALL 2 V21 string("setStyle")
0050 SEND_VAL_EX string("baseline") 1
0051 V22 = NEW 3 string("Symfony\Component\Console\Formatter\OutputFormatterStyle")
0052 SEND_VAL_EX string("cyan") 1
0053 SEND_VAL_EX null 2
0054 SEND_VAL_EX array(...) 3
0055 DO_FCALL
0056 SEND_VAR_NO_REF_EX V22 2
0057 DO_FCALL
0058 EXT_STMT
0059 INIT_METHOD_CALL 0 CV2($output) string("getFormatter")
0060 V25 = DO_FCALL
0061 INIT_METHOD_CALL 2 V25 string("setStyle")
0062 SEND_VAL_EX string("result-neutral") 1
0063 V26 = NEW 3 string("Symfony\Component\Console\Formatter\OutputFormatterStyle")
0064 SEND_VAL_EX string("cyan") 1
0065 SEND_VAL_EX null 2
0066 SEND_VAL_EX array(...) 3
0067 DO_FCALL
0068 SEND_VAR_NO_REF_EX V26 2
0069 DO_FCALL
0070 EXT_STMT
0071 INIT_METHOD_CALL 0 CV2($output) string("getFormatter")
0072 V29 = DO_FCALL
0073 INIT_METHOD_CALL 2 V29 string("setStyle")
0074 SEND_VAL_EX string("result-good") 1
0075 V30 = NEW 3 string("Symfony\Component\Console\Formatter\OutputFormatterStyle")
0076 SEND_VAL_EX string("green") 1
0077 SEND_VAL_EX null 2
0078 SEND_VAL_EX array(...) 3
0079 DO_FCALL
0080 SEND_VAR_NO_REF_EX V30 2
0081 DO_FCALL
0082 EXT_STMT
0083 INIT_METHOD_CALL 0 CV2($output) string("getFormatter")
0084 V33 = DO_FCALL
0085 INIT_METHOD_CALL 2 V33 string("setStyle")
0086 SEND_VAL_EX string("result-none") 1
0087 V34 = NEW 3 string("Symfony\Component\Console\Formatter\OutputFormatterStyle")
0088 SEND_VAL_EX null 1
0089 SEND_VAL_EX null 2
0090 SEND_VAL_EX array(...) 3
0091 DO_FCALL
0092 SEND_VAR_NO_REF_EX V34 2
0093 DO_FCALL
0094 EXT_STMT
0095 INIT_METHOD_CALL 0 CV2($output) string("getFormatter")
0096 V37 = DO_FCALL
0097 INIT_METHOD_CALL 2 V37 string("setStyle")
0098 SEND_VAL_EX string("result-failure") 1
0099 V38 = NEW 3 string("Symfony\Component\Console\Formatter\OutputFormatterStyle")
0100 SEND_VAL_EX string("white") 1
0101 SEND_VAL_EX string("red") 2
0102 SEND_VAL_EX array(...) 3
0103 DO_FCALL
0104 SEND_VAR_NO_REF_EX V38 2
0105 DO_FCALL
0106 EXT_STMT
0107 INIT_METHOD_CALL 0 CV2($output) string("getFormatter")
0108 V41 = DO_FCALL
0109 INIT_METHOD_CALL 2 V41 string("setStyle")
0110 SEND_VAL_EX string("title") 1
0111 V42 = NEW 3 string("Symfony\Component\Console\Formatter\OutputFormatterStyle")
0112 SEND_VAL_EX string("white") 1
0113 SEND_VAL_EX null 2
0114 SEND_VAL_EX array(...) 3
0115 DO_FCALL
0116 SEND_VAR_NO_REF_EX V42 2
0117 DO_FCALL
0118 EXT_STMT
0119 INIT_METHOD_CALL 0 CV2($output) string("getFormatter")
0120 V45 = DO_FCALL
0121 INIT_METHOD_CALL 2 V45 string("setStyle")
0122 SEND_VAL_EX string("subtitle") 1
0123 V46 = NEW 3 string("Symfony\Component\Console\Formatter\OutputFormatterStyle")
0124 SEND_VAL_EX string("white") 1
0125 SEND_VAL_EX null 2
0126 SEND_VAL_EX array(...) 3
0127 DO_FCALL
0128 SEND_VAR_NO_REF_EX V46 2
0129 DO_FCALL
0130 EXT_STMT
0131 INIT_METHOD_CALL 0 CV2($output) string("getFormatter")
0132 V49 = DO_FCALL
0133 INIT_METHOD_CALL 2 V49 string("setStyle")
0134 SEND_VAL_EX string("description") 1
0135 V50 = NEW 3 string("Symfony\Component\Console\Formatter\OutputFormatterStyle")
0136 SEND_VAL_EX null 1
0137 SEND_VAL_EX null 2
0138 SEND_VAL_EX array(...) 3
0139 DO_FCALL
0140 SEND_VAR_NO_REF_EX V50 2
0141 DO_FCALL
0142 EXT_STMT
0143 VERIFY_RETURN_TYPE CV2($output)
0144 RETURN CV2($output)
0145 EXT_STMT
0146 VERIFY_RETURN_TYPE
0147 RETURN null
LIVE RANGES:
     6: 0010 - 0011 (new)
     6: 0011 - 0012 (tmp/var)
     18: 0040 - 0044 (new)
     22: 0052 - 0056 (new)
     26: 0064 - 0068 (new)
     30: 0076 - 0080 (new)
     34: 0088 - 0092 (new)
     38: 0100 - 0104 (new)
     42: 0112 - 0116 (new)
     46: 0124 - 0128 (new)
     50: 0136 - 0140 (new)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/ExtensionInterface.php:1-30
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 RETURN int(1)

PhpBench\DependencyInjection\ExtensionInterface::load:
     ; (lines=3, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/ExtensionInterface.php:23-23
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 RETURN null

PhpBench\DependencyInjection\ExtensionInterface::configure:
     ; (lines=3, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/phpbench/container/lib/ExtensionInterface.php:28-28
     ; return  [] RANGE[0..0]
0000 CV0($resolver) = RECV 1
0001 EXT_STMT
0002 RETURN null

$_main:
     ; (lines=27, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:1-1343
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 NOP
0012 NOP
0013 NOP
0014 NOP
0015 NOP
0016 NOP
0017 NOP
0018 NOP
0019 NOP
0020 NOP
0021 NOP
0022 NOP
0023 NOP
0024 EXT_STMT
0025 DECLARE_CLASS string("symfony\component\optionsresolver\optionsresolver")
0026 RETURN int(1)

Symfony\Component\OptionsResolver\{closure}:
     ; (lines=9, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:1051-1053
     ; return  [] RANGE[0..0]
0000 CV0($item) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\str_ends_with")
0003 SEND_VAR_EX CV0($item) 1
0004 SEND_VAL_EX string("[]") 2
0005 V1 = DO_FCALL
0006 RETURN V1
0007 EXT_STMT
0008 RETURN null

Symfony\Component\OptionsResolver\{closure}:
     ; (lines=13, args=1, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:1326-1328
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 BIND_STATIC CV1($prefix)
0002 EXT_STMT
0003 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0004 SEND_VAL_EX string("%s[%s]") 1
0005 SEND_VAR_EX CV1($prefix) 2
0006 SEND_VAR_EX CV0($option) 3
0007 V2 = DO_FCALL
0008 VERIFY_RETURN_TYPE V2
0009 RETURN V2
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     2: 0008 - 0009 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::setDefault:
     ; (lines=158, args=2, vars=5, tmps=72)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:197-261
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 CV1($value) = RECV 2
0002 EXT_STMT
0003 T5 = FETCH_OBJ_R THIS string("locked")
0004 JMPZ T5 0010
0005 EXT_STMT
0006 V6 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0007 SEND_VAL_EX string("Default values cannot be set from a lazy option or normalizer.") 1
0008 DO_FCALL
0009 THROW V6
0010 EXT_STMT
0011 T8 = INSTANCEOF CV1($value) string("Closure")
0012 JMPZ T8 0126
0013 EXT_STMT
0014 V9 = NEW 1 string("ReflectionFunction")
0015 SEND_VAR_EX CV1($value) 1
0016 DO_FCALL
0017 ASSIGN CV2($reflClosure) V9
0018 EXT_STMT
0019 INIT_METHOD_CALL 0 CV2($reflClosure) string("getParameters")
0020 V12 = DO_FCALL
0021 ASSIGN CV3($params) V12
0022 EXT_STMT
0023 T14 = ISSET_ISEMPTY_DIM_OBJ (isset) CV3($params) int(0)
0024 T14 = JMPZ_EX T14 0032
0025 INIT_METHOD_CALL 1 THIS string("getParameterClassName")
0026 CHECK_FUNC_ARG 1
0027 V15 = FETCH_DIM_FUNC_ARG CV3($params) int(0)
0028 SEND_FUNC_ARG V15 1
0029 V16 = DO_FCALL
0030 T17 = IS_IDENTICAL V16 string("Symfony\Component\OptionsResolver\Options")
0031 T14 = BOOL T17
0032 JMPZ T14 0073
0033 EXT_STMT
0034 T18 = FETCH_OBJ_IS THIS string("defaults")
0035 T19 = ISSET_ISEMPTY_DIM_OBJ (isset) T18 CV0($option)
0036 T20 = BOOL_NOT T19
0037 JMPZ T20 0042
0038 EXT_STMT
0039 V21 = FETCH_OBJ_W (dim write) THIS string("defaults")
0040 ASSIGN_DIM V21 CV0($option)
0041 OP_DATA null
0042 EXT_STMT
0043 T23 = FETCH_OBJ_IS THIS string("lazy")
0044 T24 = ISSET_ISEMPTY_DIM_OBJ (isset) T23 CV0($option)
0045 T25 = BOOL_NOT T24
0046 T25 = JMPNZ_EX T25 0050
0047 T26 = ISSET_ISEMPTY_DIM_OBJ (isset) CV3($params) int(1)
0048 T27 = BOOL_NOT T26
0049 T25 = BOOL T27
0050 JMPZ T25 0055
0051 EXT_STMT
0052 V28 = FETCH_OBJ_W (dim write) THIS string("lazy")
0053 ASSIGN_DIM V28 CV0($option)
0054 OP_DATA array(...)
0055 EXT_STMT
0056 V30 = FETCH_OBJ_W (dim write) THIS string("lazy")
0057 V31 = FETCH_DIM_W V30 CV0($option)
0058 ASSIGN_DIM V31 NEXT
0059 OP_DATA CV1($value)
0060 EXT_STMT
0061 V33 = FETCH_OBJ_W (dim write) THIS string("defined")
0062 ASSIGN_DIM V33 CV0($option)
0063 OP_DATA bool(true)
0064 EXT_STMT
0065 V35 = FETCH_OBJ_UNSET THIS string("resolved")
0066 UNSET_DIM V35 CV0($option)
0067 EXT_STMT
0068 V36 = FETCH_OBJ_UNSET THIS string("nested")
0069 UNSET_DIM V36 CV0($option)
0070 EXT_STMT
0071 T37 = FETCH_THIS
0072 RETURN T37
0073 EXT_STMT
0074 T38 = ISSET_ISEMPTY_DIM_OBJ (isset) CV3($params) int(0)
0075 T38 = JMPZ_EX T38 0082
0076 T39 = FETCH_DIM_R CV3($params) int(0)
0077 INIT_METHOD_CALL 0 T39 string("getType")
0078 V40 = DO_FCALL
0079 T41 = ASSIGN CV4($type) V40
0080 T42 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] T41
0081 T38 = BOOL T42
0082 T38 = JMPZ_EX T38 0087
0083 INIT_METHOD_CALL 0 CV4($type) string("getName")
0084 V43 = DO_FCALL
0085 T44 = IS_IDENTICAL V43 string("Symfony\Component\OptionsResolver\OptionsResolver")
0086 T38 = BOOL T44
0087 T38 = JMPZ_EX T38 0103
0088 T45 = ISSET_ISEMPTY_DIM_OBJ (isset) CV3($params) int(1)
0089 T46 = BOOL_NOT T45
0090 T46 = JMPNZ_EX T46 0102
0091 T47 = FETCH_DIM_R CV3($params) int(1)
0092 INIT_METHOD_CALL 0 T47 string("getType")
0093 V48 = DO_FCALL
0094 T49 = ASSIGN CV4($type) V48
0095 T50 = INSTANCEOF T49 string("ReflectionNamedType")
0096 T50 = JMPZ_EX T50 0101
0097 INIT_METHOD_CALL 0 CV4($type) string("getName")
0098 V51 = DO_FCALL
0099 T52 = IS_IDENTICAL V51 string("Symfony\Component\OptionsResolver\Options")
0100 T50 = BOOL T52
0101 T46 = BOOL T50
0102 T38 = BOOL T46
0103 JMPZ T38 0126
0104 EXT_STMT
0105 V53 = FETCH_OBJ_W (dim write) THIS string("nested")
0106 V54 = FETCH_DIM_W V53 CV0($option)
0107 ASSIGN_DIM V54 NEXT
0108 OP_DATA CV1($value)
0109 EXT_STMT
0110 V56 = FETCH_OBJ_W (dim write) THIS string("defaults")
0111 ASSIGN_DIM V56 CV0($option)
0112 OP_DATA array(...)
0113 EXT_STMT
0114 V58 = FETCH_OBJ_W (dim write) THIS string("defined")
0115 ASSIGN_DIM V58 CV0($option)
0116 OP_DATA bool(true)
0117 EXT_STMT
0118 V60 = FETCH_OBJ_UNSET THIS string("resolved")
0119 UNSET_DIM V60 CV0($option)
0120 EXT_STMT
0121 V61 = FETCH_OBJ_UNSET THIS string("lazy")
0122 UNSET_DIM V61 CV0($option)
0123 EXT_STMT
0124 T62 = FETCH_THIS
0125 RETURN T62
0126 EXT_STMT
0127 V63 = FETCH_OBJ_UNSET THIS string("lazy")
0128 UNSET_DIM V63 CV0($option)
0129 EXT_STMT
0130 V64 = FETCH_OBJ_UNSET THIS string("nested")
0131 UNSET_DIM V64 CV0($option)
0132 EXT_STMT
0133 T65 = FETCH_OBJ_IS THIS string("defined")
0134 T66 = ISSET_ISEMPTY_DIM_OBJ (isset) T65 CV0($option)
0135 T67 = BOOL_NOT T66
0136 T67 = JMPNZ_EX T67 0140
0137 T68 = FETCH_OBJ_R THIS string("resolved")
0138 T69 = ARRAY_KEY_EXISTS CV0($option) T68
0139 T67 = BOOL T69
0140 JMPZ T67 0145
0141 EXT_STMT
0142 V70 = FETCH_OBJ_W (dim write) THIS string("resolved")
0143 ASSIGN_DIM V70 CV0($option)
0144 OP_DATA CV1($value)
0145 EXT_STMT
0146 V72 = FETCH_OBJ_W (dim write) THIS string("defaults")
0147 ASSIGN_DIM V72 CV0($option)
0148 OP_DATA CV1($value)
0149 EXT_STMT
0150 V74 = FETCH_OBJ_W (dim write) THIS string("defined")
0151 ASSIGN_DIM V74 CV0($option)
0152 OP_DATA bool(true)
0153 EXT_STMT
0154 T76 = FETCH_THIS
0155 RETURN T76
0156 EXT_STMT
0157 RETURN null
LIVE RANGES:
     6: 0007 - 0009 (new)
     9: 0015 - 0017 (new)

Symfony\Component\OptionsResolver\OptionsResolver::setDefaults:
     ; (lines=17, args=1, vars=3, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:268-275
     ; return  [] RANGE[0..0]
0000 CV0($defaults) = RECV 1
0001 EXT_STMT
0002 V3 = FE_RESET_R CV0($defaults) 0011
0003 T4 = FE_FETCH_R V3 CV1($value) 0011
0004 ASSIGN CV2($option) T4
0005 EXT_STMT
0006 INIT_METHOD_CALL 2 THIS string("setDefault")
0007 SEND_VAR_EX CV2($option) 1
0008 SEND_VAR_EX CV1($value) 2
0009 DO_FCALL
0010 JMP 0003
0011 FE_FREE V3
0012 EXT_STMT
0013 T7 = FETCH_THIS
0014 RETURN T7
0015 EXT_STMT
0016 RETURN null
LIVE RANGES:
     3: 0003 - 0011 (loop)

Symfony\Component\OptionsResolver\OptionsResolver::hasDefault:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:285-288
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_R THIS string("defaults")
0003 T2 = ARRAY_KEY_EXISTS CV0($option) T1
0004 RETURN T2
0005 EXT_STMT
0006 RETURN null

Symfony\Component\OptionsResolver\OptionsResolver::setRequired:
     ; (lines=28, args=1, vars=2, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:299-311
     ; return  [] RANGE[0..0]
0000 CV0($optionNames) = RECV 1
0001 EXT_STMT
0002 T2 = FETCH_OBJ_R THIS string("locked")
0003 JMPZ T2 0009
0004 EXT_STMT
0005 V3 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0006 SEND_VAL_EX string("Options cannot be made required from a lazy option or normalizer.") 1
0007 DO_FCALL
0008 THROW V3
0009 EXT_STMT
0010 T5 = CAST (array) CV0($optionNames)
0011 V6 = FE_RESET_R T5 0022
0012 FE_FETCH_R V6 CV1($option) 0022
0013 EXT_STMT
0014 V7 = FETCH_OBJ_W (dim write) THIS string("defined")
0015 ASSIGN_DIM V7 CV1($option)
0016 OP_DATA bool(true)
0017 EXT_STMT
0018 V9 = FETCH_OBJ_W (dim write) THIS string("required")
0019 ASSIGN_DIM V9 CV1($option)
0020 OP_DATA bool(true)
0021 JMP 0012
0022 FE_FREE V6
0023 EXT_STMT
0024 T11 = FETCH_THIS
0025 RETURN T11
0026 EXT_STMT
0027 RETURN null
LIVE RANGES:
     3: 0006 - 0008 (new)
     6: 0012 - 0022 (loop)

Symfony\Component\OptionsResolver\OptionsResolver::isRequired:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:320-323
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("required")
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($option)
0004 RETURN T2
0005 EXT_STMT
0006 RETURN null

Symfony\Component\OptionsResolver\OptionsResolver::getRequiredOptions:
     ; (lines=9, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:332-335
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0002 CHECK_FUNC_ARG 1
0003 V0 = FETCH_OBJ_FUNC_ARG (ref) THIS string("required")
0004 SEND_FUNC_ARG V0 1
0005 V1 = DO_FCALL
0006 RETURN V1
0007 EXT_STMT
0008 RETURN null

Symfony\Component\OptionsResolver\OptionsResolver::isMissing:
     ; (lines=12, args=1, vars=1, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:346-349
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("required")
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($option)
0004 T2 = JMPZ_EX T2 0009
0005 T3 = FETCH_OBJ_R THIS string("defaults")
0006 T4 = ARRAY_KEY_EXISTS CV0($option) T3
0007 T5 = BOOL_NOT T4
0008 T2 = BOOL T5
0009 RETURN T2
0010 EXT_STMT
0011 RETURN null

Symfony\Component\OptionsResolver\OptionsResolver::getMissingOptions:
     ; (lines=15, args=0, vars=0, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:358-361
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0002 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\array_diff_key")
0003 CHECK_FUNC_ARG 1
0004 V0 = FETCH_OBJ_FUNC_ARG (ref) THIS string("required")
0005 SEND_FUNC_ARG V0 1
0006 CHECK_FUNC_ARG 2
0007 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("defaults")
0008 SEND_FUNC_ARG V1 2
0009 V2 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V2 1
0011 V3 = DO_FCALL
0012 RETURN V3
0013 EXT_STMT
0014 RETURN null

Symfony\Component\OptionsResolver\OptionsResolver::setDefined:
     ; (lines=24, args=1, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:376-387
     ; return  [] RANGE[0..0]
0000 CV0($optionNames) = RECV 1
0001 EXT_STMT
0002 T2 = FETCH_OBJ_R THIS string("locked")
0003 JMPZ T2 0009
0004 EXT_STMT
0005 V3 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0006 SEND_VAL_EX string("Options cannot be defined from a lazy option or normalizer.") 1
0007 DO_FCALL
0008 THROW V3
0009 EXT_STMT
0010 T5 = CAST (array) CV0($optionNames)
0011 V6 = FE_RESET_R T5 0018
0012 FE_FETCH_R V6 CV1($option) 0018
0013 EXT_STMT
0014 V7 = FETCH_OBJ_W (dim write) THIS string("defined")
0015 ASSIGN_DIM V7 CV1($option)
0016 OP_DATA bool(true)
0017 JMP 0012
0018 FE_FREE V6
0019 EXT_STMT
0020 T9 = FETCH_THIS
0021 RETURN T9
0022 EXT_STMT
0023 RETURN null
LIVE RANGES:
     3: 0006 - 0008 (new)
     6: 0012 - 0018 (loop)

Symfony\Component\OptionsResolver\OptionsResolver::isDefined:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:397-400
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("defined")
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($option)
0004 RETURN T2
0005 EXT_STMT
0006 RETURN null

Symfony\Component\OptionsResolver\OptionsResolver::getDefinedOptions:
     ; (lines=9, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:409-412
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0002 CHECK_FUNC_ARG 1
0003 V0 = FETCH_OBJ_FUNC_ARG (ref) THIS string("defined")
0004 SEND_FUNC_ARG V0 1
0005 V1 = DO_FCALL
0006 RETURN V1
0007 EXT_STMT
0008 RETURN null

Symfony\Component\OptionsResolver\OptionsResolver::isNested:
     ; (lines=9, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:414-417
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("nested")
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($option)
0004 VERIFY_RETURN_TYPE T2
0005 RETURN T2
0006 EXT_STMT
0007 VERIFY_RETURN_TYPE
0008 RETURN null
LIVE RANGES:
     2: 0004 - 0005 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::setDeprecated:
     ; (lines=115, args=1, vars=5, tmps=46)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:440-482
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 EXT_STMT
0002 T5 = FETCH_OBJ_R THIS string("locked")
0003 JMPZ T5 0009
0004 EXT_STMT
0005 V6 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0006 SEND_VAL_EX string("Options cannot be deprecated from a lazy option or normalizer.") 1
0007 DO_FCALL
0008 THROW V6
0009 EXT_STMT
0010 T8 = FETCH_OBJ_IS THIS string("defined")
0011 T9 = ISSET_ISEMPTY_DIM_OBJ (isset) T8 CV0($option)
0012 T10 = BOOL_NOT T9
0013 JMPZ T10 0037
0014 EXT_STMT
0015 V11 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException")
0016 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0017 SEND_VAL_EX string("The option "%s" does not exist, defined options are: "%s".") 1
0018 INIT_METHOD_CALL 1 THIS string("formatOptions")
0019 T12 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0020 SEND_VAL_EX T12 1
0021 V13 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V13 2
0023 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0024 SEND_VAL_EX string("", "") 1
0025 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0026 CHECK_FUNC_ARG 1
0027 V14 = FETCH_OBJ_FUNC_ARG (ref) THIS string("defined")
0028 SEND_FUNC_ARG V14 1
0029 V15 = DO_FCALL
0030 SEND_VAR_NO_REF_EX V15 2
0031 V16 = DO_FCALL
0032 SEND_VAR_NO_REF_EX V16 3
0033 V17 = DO_FCALL
0034 SEND_VAR_NO_REF_EX V17 1
0035 DO_FCALL
0036 THROW V11
0037 EXT_STMT
0038 T19 = FUNC_GET_ARGS
0039 ASSIGN CV1($args) T19
0040 EXT_STMT
0041 T21 = FUNC_NUM_ARGS
0042 T22 = IS_SMALLER T21 int(3)
0043 JMPZ T22 0060
0044 EXT_STMT
0045 INIT_NS_FCALL_BY_NAME 4 string("Symfony\Component\OptionsResolver\trigger_deprecation")
0046 SEND_VAL_EX string("symfony/options-resolver") 1
0047 SEND_VAL_EX string("5.1") 2
0048 SEND_VAL_EX string("The signature of method "%s()" requires 2 new arguments: "string $package, string $version", not defining them is deprecated.") 3
0049 SEND_VAL_EX string("Symfony\Component\OptionsResolver\OptionsResolver::setDeprecated") 4
0050 DO_FCALL
0051 EXT_STMT
0052 T24 = FETCH_DIM_IS CV1($args) int(1)
0053 T25 = COALESCE T24 0055
0054 T25 = QM_ASSIGN string("The option "%name%" is deprecated.")
0055 ASSIGN CV2($message) T25
0056 EXT_STMT
0057 T27 = ASSIGN CV4($version) string("")
0058 ASSIGN CV3($package) T27
0059 JMP 0071
0060 EXT_STMT
0061 T29 = FETCH_DIM_R CV1($args) int(1)
0062 ASSIGN CV3($package) T29
0063 EXT_STMT
0064 T31 = FETCH_DIM_R CV1($args) int(2)
0065 ASSIGN CV4($version) T31
0066 EXT_STMT
0067 T33 = FETCH_DIM_IS CV1($args) int(3)
0068 T34 = COALESCE T33 0070
0069 T34 = QM_ASSIGN string("The option "%name%" is deprecated.")
0070 ASSIGN CV2($message) T34
0071 EXT_STMT
0072 T36 = TYPE_CHECK (string) CV2($message)
0073 T37 = BOOL_NOT T36
0074 T37 = JMPZ_EX T37 0078
0075 T38 = INSTANCEOF CV2($message) string("Closure")
0076 T39 = BOOL_NOT T38
0077 T37 = BOOL T39
0078 JMPZ T37 0091
0079 EXT_STMT
0080 V40 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\InvalidArgumentException")
0081 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\sprintf")
0082 SEND_VAL_EX string("Invalid type for deprecation message argument, expected string or \Closure, but got "%s".") 1
0083 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\get_debug_type")
0084 SEND_VAR_EX CV2($message) 1
0085 V41 = DO_FCALL
0086 SEND_VAR_NO_REF_EX V41 2
0087 V42 = DO_FCALL
0088 SEND_VAR_NO_REF_EX V42 1
0089 DO_FCALL
0090 THROW V40
0091 EXT_STMT
0092 T44 = IS_IDENTICAL CV2($message) string("")
0093 JMPZ T44 0098
0094 EXT_STMT
0095 T45 = FETCH_THIS
0096 VERIFY_RETURN_TYPE T45
0097 RETURN T45
0098 EXT_STMT
0099 T48 = INIT_ARRAY 3 CV3($package) string("package")
0100 T48 = ADD_ARRAY_ELEMENT CV4($version) string("version")
0101 T48 = ADD_ARRAY_ELEMENT CV2($message) string("message")
0102 V46 = FETCH_OBJ_W (dim write) THIS string("deprecated")
0103 ASSIGN_DIM V46 CV0($option)
0104 OP_DATA T48
0105 EXT_STMT
0106 V49 = FETCH_OBJ_UNSET THIS string("resolved")
0107 UNSET_DIM V49 CV0($option)
0108 EXT_STMT
0109 T50 = FETCH_THIS
0110 VERIFY_RETURN_TYPE T50
0111 RETURN T50
0112 EXT_STMT
0113 VERIFY_RETURN_TYPE
0114 RETURN null
LIVE RANGES:
     6: 0006 - 0008 (new)
     11: 0016 - 0036 (new)
     40: 0081 - 0090 (new)
     45: 0096 - 0097 (tmp/var)
     48: 0100 - 0103 (tmp/var)
     50: 0110 - 0111 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::isDeprecated:
     ; (lines=9, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:484-487
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("deprecated")
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($option)
0004 VERIFY_RETURN_TYPE T2
0005 RETURN T2
0006 EXT_STMT
0007 VERIFY_RETURN_TYPE
0008 RETURN null
LIVE RANGES:
     2: 0004 - 0005 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::setNormalizer:
     ; (lines=51, args=2, vars=2, tmps=19)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:512-528
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 CV1($normalizer) = RECV 2
0002 EXT_STMT
0003 T2 = FETCH_OBJ_R THIS string("locked")
0004 JMPZ T2 0010
0005 EXT_STMT
0006 V3 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0007 SEND_VAL_EX string("Normalizers cannot be set from a lazy option or normalizer.") 1
0008 DO_FCALL
0009 THROW V3
0010 EXT_STMT
0011 T5 = FETCH_OBJ_IS THIS string("defined")
0012 T6 = ISSET_ISEMPTY_DIM_OBJ (isset) T5 CV0($option)
0013 T7 = BOOL_NOT T6
0014 JMPZ T7 0038
0015 EXT_STMT
0016 V8 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException")
0017 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0018 SEND_VAL_EX string("The option "%s" does not exist. Defined options are: "%s".") 1
0019 INIT_METHOD_CALL 1 THIS string("formatOptions")
0020 T9 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0021 SEND_VAL_EX T9 1
0022 V10 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V10 2
0024 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0025 SEND_VAL_EX string("", "") 1
0026 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0027 CHECK_FUNC_ARG 1
0028 V11 = FETCH_OBJ_FUNC_ARG (ref) THIS string("defined")
0029 SEND_FUNC_ARG V11 1
0030 V12 = DO_FCALL
0031 SEND_VAR_NO_REF_EX V12 2
0032 V13 = DO_FCALL
0033 SEND_VAR_NO_REF_EX V13 3
0034 V14 = DO_FCALL
0035 SEND_VAR_NO_REF_EX V14 1
0036 DO_FCALL
0037 THROW V8
0038 EXT_STMT
0039 T18 = INIT_ARRAY 1 (packed) CV1($normalizer) NEXT
0040 V16 = FETCH_OBJ_W (dim write) THIS string("normalizers")
0041 ASSIGN_DIM V16 CV0($option)
0042 OP_DATA T18
0043 EXT_STMT
0044 V19 = FETCH_OBJ_UNSET THIS string("resolved")
0045 UNSET_DIM V19 CV0($option)
0046 EXT_STMT
0047 T20 = FETCH_THIS
0048 RETURN T20
0049 EXT_STMT
0050 RETURN null
LIVE RANGES:
     3: 0007 - 0009 (new)
     8: 0017 - 0037 (new)
     18: 0040 - 0041 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::addNormalizer:
     ; (lines=73, args=3, vars=3, tmps=27)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:553-574
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 CV1($normalizer) = RECV 2
0002 CV2($forcePrepend) = RECV_INIT 3 bool(false)
0003 EXT_STMT
0004 T3 = FETCH_OBJ_R THIS string("locked")
0005 JMPZ T3 0011
0006 EXT_STMT
0007 V4 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0008 SEND_VAL_EX string("Normalizers cannot be set from a lazy option or normalizer.") 1
0009 DO_FCALL
0010 THROW V4
0011 EXT_STMT
0012 T6 = FETCH_OBJ_IS THIS string("defined")
0013 T7 = ISSET_ISEMPTY_DIM_OBJ (isset) T6 CV0($option)
0014 T8 = BOOL_NOT T7
0015 JMPZ T8 0039
0016 EXT_STMT
0017 V9 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException")
0018 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0019 SEND_VAL_EX string("The option "%s" does not exist. Defined options are: "%s".") 1
0020 INIT_METHOD_CALL 1 THIS string("formatOptions")
0021 T10 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0022 SEND_VAL_EX T10 1
0023 V11 = DO_FCALL
0024 SEND_VAR_NO_REF_EX V11 2
0025 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0026 SEND_VAL_EX string("", "") 1
0027 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0028 CHECK_FUNC_ARG 1
0029 V12 = FETCH_OBJ_FUNC_ARG (ref) THIS string("defined")
0030 SEND_FUNC_ARG V12 1
0031 V13 = DO_FCALL
0032 SEND_VAR_NO_REF_EX V13 2
0033 V14 = DO_FCALL
0034 SEND_VAR_NO_REF_EX V14 3
0035 V15 = DO_FCALL
0036 SEND_VAR_NO_REF_EX V15 1
0037 DO_FCALL
0038 THROW V9
0039 EXT_STMT
0040 JMPZ CV2($forcePrepend) 0058
0041 EXT_STMT
0042 T19 = FETCH_OBJ_IS THIS string("normalizers")
0043 T20 = FETCH_DIM_IS T19 CV0($option)
0044 T21 = COALESCE T20 0046
0045 T21 = QM_ASSIGN array(...)
0046 V17 = FETCH_OBJ_W (dim write) THIS string("normalizers")
0047 ASSIGN_DIM V17 CV0($option)
0048 OP_DATA T21
0049 EXT_STMT
0050 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\array_unshift")
0051 CHECK_FUNC_ARG 1
0052 V22 = FETCH_OBJ_FUNC_ARG THIS string("normalizers")
0053 V23 = FETCH_DIM_FUNC_ARG V22 CV0($option)
0054 SEND_FUNC_ARG V23 1
0055 SEND_VAR_EX CV1($normalizer) 2
0056 DO_FCALL
0057 JMP 0063
0058 EXT_STMT
0059 V25 = FETCH_OBJ_W (dim write) THIS string("normalizers")
0060 V26 = FETCH_DIM_W V25 CV0($option)
0061 ASSIGN_DIM V26 NEXT
0062 OP_DATA CV1($normalizer)
0063 EXT_STMT
0064 V28 = FETCH_OBJ_UNSET THIS string("resolved")
0065 UNSET_DIM V28 CV0($option)
0066 EXT_STMT
0067 T29 = FETCH_THIS
0068 VERIFY_RETURN_TYPE T29
0069 RETURN T29
0070 EXT_STMT
0071 VERIFY_RETURN_TYPE
0072 RETURN null
LIVE RANGES:
     4: 0008 - 0010 (new)
     9: 0018 - 0038 (new)
     21: 0046 - 0047 (tmp/var)
     29: 0068 - 0069 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::setAllowedValues:
     ; (lines=56, args=2, vars=2, tmps=21)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:597-613
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 CV1($allowedValues) = RECV 2
0002 EXT_STMT
0003 T2 = FETCH_OBJ_R THIS string("locked")
0004 JMPZ T2 0010
0005 EXT_STMT
0006 V3 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0007 SEND_VAL_EX string("Allowed values cannot be set from a lazy option or normalizer.") 1
0008 DO_FCALL
0009 THROW V3
0010 EXT_STMT
0011 T5 = FETCH_OBJ_IS THIS string("defined")
0012 T6 = ISSET_ISEMPTY_DIM_OBJ (isset) T5 CV0($option)
0013 T7 = BOOL_NOT T6
0014 JMPZ T7 0038
0015 EXT_STMT
0016 V8 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException")
0017 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0018 SEND_VAL_EX string("The option "%s" does not exist. Defined options are: "%s".") 1
0019 INIT_METHOD_CALL 1 THIS string("formatOptions")
0020 T9 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0021 SEND_VAL_EX T9 1
0022 V10 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V10 2
0024 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0025 SEND_VAL_EX string("", "") 1
0026 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0027 CHECK_FUNC_ARG 1
0028 V11 = FETCH_OBJ_FUNC_ARG (ref) THIS string("defined")
0029 SEND_FUNC_ARG V11 1
0030 V12 = DO_FCALL
0031 SEND_VAR_NO_REF_EX V12 2
0032 V13 = DO_FCALL
0033 SEND_VAR_NO_REF_EX V13 3
0034 V14 = DO_FCALL
0035 SEND_VAR_NO_REF_EX V14 1
0036 DO_FCALL
0037 THROW V8
0038 EXT_STMT
0039 T18 = TYPE_CHECK (array) CV1($allowedValues)
0040 JMPZ T18 0043
0041 T19 = QM_ASSIGN CV1($allowedValues)
0042 JMP 0045
0043 T20 = INIT_ARRAY 1 (packed) CV1($allowedValues) NEXT
0044 T19 = QM_ASSIGN T20
0045 V16 = FETCH_OBJ_W (dim write) THIS string("allowedValues")
0046 ASSIGN_DIM V16 CV0($option)
0047 OP_DATA T19
0048 EXT_STMT
0049 V21 = FETCH_OBJ_UNSET THIS string("resolved")
0050 UNSET_DIM V21 CV0($option)
0051 EXT_STMT
0052 T22 = FETCH_THIS
0053 RETURN T22
0054 EXT_STMT
0055 RETURN null
LIVE RANGES:
     3: 0007 - 0009 (new)
     8: 0017 - 0037 (new)
     19: 0045 - 0046 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::addAllowedValues:
     ; (lines=74, args=2, vars=2, tmps=30)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:638-662
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 CV1($allowedValues) = RECV 2
0002 EXT_STMT
0003 T2 = FETCH_OBJ_R THIS string("locked")
0004 JMPZ T2 0010
0005 EXT_STMT
0006 V3 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0007 SEND_VAL_EX string("Allowed values cannot be added from a lazy option or normalizer.") 1
0008 DO_FCALL
0009 THROW V3
0010 EXT_STMT
0011 T5 = FETCH_OBJ_IS THIS string("defined")
0012 T6 = ISSET_ISEMPTY_DIM_OBJ (isset) T5 CV0($option)
0013 T7 = BOOL_NOT T6
0014 JMPZ T7 0038
0015 EXT_STMT
0016 V8 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException")
0017 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0018 SEND_VAL_EX string("The option "%s" does not exist. Defined options are: "%s".") 1
0019 INIT_METHOD_CALL 1 THIS string("formatOptions")
0020 T9 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0021 SEND_VAL_EX T9 1
0022 V10 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V10 2
0024 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0025 SEND_VAL_EX string("", "") 1
0026 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0027 CHECK_FUNC_ARG 1
0028 V11 = FETCH_OBJ_FUNC_ARG (ref) THIS string("defined")
0029 SEND_FUNC_ARG V11 1
0030 V12 = DO_FCALL
0031 SEND_VAR_NO_REF_EX V12 2
0032 V13 = DO_FCALL
0033 SEND_VAR_NO_REF_EX V13 3
0034 V14 = DO_FCALL
0035 SEND_VAR_NO_REF_EX V14 1
0036 DO_FCALL
0037 THROW V8
0038 EXT_STMT
0039 T16 = TYPE_CHECK (array) CV1($allowedValues)
0040 T17 = BOOL_NOT T16
0041 JMPZ T17 0045
0042 EXT_STMT
0043 T18 = INIT_ARRAY 1 (packed) CV1($allowedValues) NEXT
0044 ASSIGN CV1($allowedValues) T18
0045 EXT_STMT
0046 T20 = FETCH_OBJ_IS THIS string("allowedValues")
0047 T21 = ISSET_ISEMPTY_DIM_OBJ (isset) T20 CV0($option)
0048 T22 = BOOL_NOT T21
0049 JMPZ T22 0055
0050 EXT_STMT
0051 V23 = FETCH_OBJ_W (dim write) THIS string("allowedValues")
0052 ASSIGN_DIM V23 CV0($option)
0053 OP_DATA CV1($allowedValues)
0054 JMP 0066
0055 EXT_STMT
0056 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\array_merge")
0057 CHECK_FUNC_ARG 1
0058 V27 = FETCH_OBJ_FUNC_ARG THIS string("allowedValues")
0059 V28 = FETCH_DIM_FUNC_ARG V27 CV0($option)
0060 SEND_FUNC_ARG V28 1
0061 SEND_VAR_EX CV1($allowedValues) 2
0062 V29 = DO_FCALL
0063 V25 = FETCH_OBJ_W (dim write) THIS string("allowedValues")
0064 ASSIGN_DIM V25 CV0($option)
0065 OP_DATA V29
0066 EXT_STMT
0067 V30 = FETCH_OBJ_UNSET THIS string("resolved")
0068 UNSET_DIM V30 CV0($option)
0069 EXT_STMT
0070 T31 = FETCH_THIS
0071 RETURN T31
0072 EXT_STMT
0073 RETURN null
LIVE RANGES:
     3: 0007 - 0009 (new)
     8: 0017 - 0037 (new)
     29: 0063 - 0064 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::setAllowedTypes:
     ; (lines=51, args=2, vars=2, tmps=19)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:678-694
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 CV1($allowedTypes) = RECV 2
0002 EXT_STMT
0003 T2 = FETCH_OBJ_R THIS string("locked")
0004 JMPZ T2 0010
0005 EXT_STMT
0006 V3 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0007 SEND_VAL_EX string("Allowed types cannot be set from a lazy option or normalizer.") 1
0008 DO_FCALL
0009 THROW V3
0010 EXT_STMT
0011 T5 = FETCH_OBJ_IS THIS string("defined")
0012 T6 = ISSET_ISEMPTY_DIM_OBJ (isset) T5 CV0($option)
0013 T7 = BOOL_NOT T6
0014 JMPZ T7 0038
0015 EXT_STMT
0016 V8 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException")
0017 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0018 SEND_VAL_EX string("The option "%s" does not exist. Defined options are: "%s".") 1
0019 INIT_METHOD_CALL 1 THIS string("formatOptions")
0020 T9 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0021 SEND_VAL_EX T9 1
0022 V10 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V10 2
0024 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0025 SEND_VAL_EX string("", "") 1
0026 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0027 CHECK_FUNC_ARG 1
0028 V11 = FETCH_OBJ_FUNC_ARG (ref) THIS string("defined")
0029 SEND_FUNC_ARG V11 1
0030 V12 = DO_FCALL
0031 SEND_VAR_NO_REF_EX V12 2
0032 V13 = DO_FCALL
0033 SEND_VAR_NO_REF_EX V13 3
0034 V14 = DO_FCALL
0035 SEND_VAR_NO_REF_EX V14 1
0036 DO_FCALL
0037 THROW V8
0038 EXT_STMT
0039 T18 = CAST (array) CV1($allowedTypes)
0040 V16 = FETCH_OBJ_W (dim write) THIS string("allowedTypes")
0041 ASSIGN_DIM V16 CV0($option)
0042 OP_DATA T18
0043 EXT_STMT
0044 V19 = FETCH_OBJ_UNSET THIS string("resolved")
0045 UNSET_DIM V19 CV0($option)
0046 EXT_STMT
0047 T20 = FETCH_THIS
0048 RETURN T20
0049 EXT_STMT
0050 RETURN null
LIVE RANGES:
     3: 0007 - 0009 (new)
     8: 0017 - 0037 (new)
     18: 0040 - 0041 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::addAllowedTypes:
     ; (lines=69, args=2, vars=2, tmps=28)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:712-732
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 CV1($allowedTypes) = RECV 2
0002 EXT_STMT
0003 T2 = FETCH_OBJ_R THIS string("locked")
0004 JMPZ T2 0010
0005 EXT_STMT
0006 V3 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0007 SEND_VAL_EX string("Allowed types cannot be added from a lazy option or normalizer.") 1
0008 DO_FCALL
0009 THROW V3
0010 EXT_STMT
0011 T5 = FETCH_OBJ_IS THIS string("defined")
0012 T6 = ISSET_ISEMPTY_DIM_OBJ (isset) T5 CV0($option)
0013 T7 = BOOL_NOT T6
0014 JMPZ T7 0038
0015 EXT_STMT
0016 V8 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException")
0017 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0018 SEND_VAL_EX string("The option "%s" does not exist. Defined options are: "%s".") 1
0019 INIT_METHOD_CALL 1 THIS string("formatOptions")
0020 T9 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0021 SEND_VAL_EX T9 1
0022 V10 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V10 2
0024 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0025 SEND_VAL_EX string("", "") 1
0026 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0027 CHECK_FUNC_ARG 1
0028 V11 = FETCH_OBJ_FUNC_ARG (ref) THIS string("defined")
0029 SEND_FUNC_ARG V11 1
0030 V12 = DO_FCALL
0031 SEND_VAR_NO_REF_EX V12 2
0032 V13 = DO_FCALL
0033 SEND_VAR_NO_REF_EX V13 3
0034 V14 = DO_FCALL
0035 SEND_VAR_NO_REF_EX V14 1
0036 DO_FCALL
0037 THROW V8
0038 EXT_STMT
0039 T16 = FETCH_OBJ_IS THIS string("allowedTypes")
0040 T17 = ISSET_ISEMPTY_DIM_OBJ (isset) T16 CV0($option)
0041 T18 = BOOL_NOT T17
0042 JMPZ T18 0049
0043 EXT_STMT
0044 T21 = CAST (array) CV1($allowedTypes)
0045 V19 = FETCH_OBJ_W (dim write) THIS string("allowedTypes")
0046 ASSIGN_DIM V19 CV0($option)
0047 OP_DATA T21
0048 JMP 0061
0049 EXT_STMT
0050 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\array_merge")
0051 CHECK_FUNC_ARG 1
0052 V24 = FETCH_OBJ_FUNC_ARG THIS string("allowedTypes")
0053 V25 = FETCH_DIM_FUNC_ARG V24 CV0($option)
0054 SEND_FUNC_ARG V25 1
0055 T26 = CAST (array) CV1($allowedTypes)
0056 SEND_VAL_EX T26 2
0057 V27 = DO_FCALL
0058 V22 = FETCH_OBJ_W (dim write) THIS string("allowedTypes")
0059 ASSIGN_DIM V22 CV0($option)
0060 OP_DATA V27
0061 EXT_STMT
0062 V28 = FETCH_OBJ_UNSET THIS string("resolved")
0063 UNSET_DIM V28 CV0($option)
0064 EXT_STMT
0065 T29 = FETCH_THIS
0066 RETURN T29
0067 EXT_STMT
0068 RETURN null
LIVE RANGES:
     3: 0007 - 0009 (new)
     8: 0017 - 0037 (new)
     21: 0045 - 0046 (tmp/var)
     27: 0058 - 0059 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::define:
     ; (lines=25, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:737-744
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("defined")
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($option)
0004 JMPZ T2 0014
0005 EXT_STMT
0006 V3 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\OptionDefinitionException")
0007 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\sprintf")
0008 SEND_VAL_EX string("The option "%s" is already defined.") 1
0009 SEND_VAR_EX CV0($option) 2
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 1
0012 DO_FCALL
0013 THROW V3
0014 EXT_STMT
0015 V6 = NEW 2 string("Symfony\Component\OptionsResolver\OptionConfigurator")
0016 SEND_VAR_EX CV0($option) 1
0017 V7 = FETCH_THIS
0018 SEND_VAR_EX V7 2
0019 DO_FCALL
0020 VERIFY_RETURN_TYPE V6
0021 RETURN V6
0022 EXT_STMT
0023 VERIFY_RETURN_TYPE
0024 RETURN null
LIVE RANGES:
     3: 0007 - 0013 (new)
     6: 0016 - 0020 (new)
     6: 0020 - 0021 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::setInfo:
     ; (lines=49, args=2, vars=2, tmps=17)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:754-767
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 CV1($info) = RECV 2
0002 EXT_STMT
0003 T2 = FETCH_OBJ_R THIS string("locked")
0004 JMPZ T2 0010
0005 EXT_STMT
0006 V3 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0007 SEND_VAL_EX string("The Info message cannot be set from a lazy option or normalizer.") 1
0008 DO_FCALL
0009 THROW V3
0010 EXT_STMT
0011 T5 = FETCH_OBJ_IS THIS string("defined")
0012 T6 = ISSET_ISEMPTY_DIM_OBJ (isset) T5 CV0($option)
0013 T7 = BOOL_NOT T6
0014 JMPZ T7 0038
0015 EXT_STMT
0016 V8 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException")
0017 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0018 SEND_VAL_EX string("The option "%s" does not exist. Defined options are: "%s".") 1
0019 INIT_METHOD_CALL 1 THIS string("formatOptions")
0020 T9 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0021 SEND_VAL_EX T9 1
0022 V10 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V10 2
0024 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0025 SEND_VAL_EX string("", "") 1
0026 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0027 CHECK_FUNC_ARG 1
0028 V11 = FETCH_OBJ_FUNC_ARG (ref) THIS string("defined")
0029 SEND_FUNC_ARG V11 1
0030 V12 = DO_FCALL
0031 SEND_VAR_NO_REF_EX V12 2
0032 V13 = DO_FCALL
0033 SEND_VAR_NO_REF_EX V13 3
0034 V14 = DO_FCALL
0035 SEND_VAR_NO_REF_EX V14 1
0036 DO_FCALL
0037 THROW V8
0038 EXT_STMT
0039 V16 = FETCH_OBJ_W (dim write) THIS string("info")
0040 ASSIGN_DIM V16 CV0($option)
0041 OP_DATA CV1($info)
0042 EXT_STMT
0043 T18 = FETCH_THIS
0044 VERIFY_RETURN_TYPE T18
0045 RETURN T18
0046 EXT_STMT
0047 VERIFY_RETURN_TYPE
0048 RETURN null
LIVE RANGES:
     3: 0007 - 0009 (new)
     8: 0017 - 0037 (new)
     18: 0044 - 0045 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::getInfo:
     ; (lines=39, args=1, vars=1, tmps=14)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:772-779
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("defined")
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($option)
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0029
0006 EXT_STMT
0007 V4 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException")
0008 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0009 SEND_VAL_EX string("The option "%s" does not exist. Defined options are: "%s".") 1
0010 INIT_METHOD_CALL 1 THIS string("formatOptions")
0011 T5 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0012 SEND_VAL_EX T5 1
0013 V6 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V6 2
0015 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0016 SEND_VAL_EX string("", "") 1
0017 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0018 CHECK_FUNC_ARG 1
0019 V7 = FETCH_OBJ_FUNC_ARG (ref) THIS string("defined")
0020 SEND_FUNC_ARG V7 1
0021 V8 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V8 2
0023 V9 = DO_FCALL
0024 SEND_VAR_NO_REF_EX V9 3
0025 V10 = DO_FCALL
0026 SEND_VAR_NO_REF_EX V10 1
0027 DO_FCALL
0028 THROW V4
0029 EXT_STMT
0030 T12 = FETCH_OBJ_IS THIS string("info")
0031 T13 = FETCH_DIM_IS T12 CV0($option)
0032 T14 = COALESCE T13 0034
0033 T14 = QM_ASSIGN null
0034 VERIFY_RETURN_TYPE T14
0035 RETURN T14
0036 EXT_STMT
0037 VERIFY_RETURN_TYPE
0038 RETURN null
LIVE RANGES:
     4: 0008 - 0028 (new)
     14: 0034 - 0035 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::setPrototype:
     ; (lines=30, args=1, vars=1, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:788-801
     ; return  [] RANGE[0..0]
0000 CV0($prototype) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_R THIS string("locked")
0003 JMPZ T1 0009
0004 EXT_STMT
0005 V2 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0006 SEND_VAL_EX string("The prototype property cannot be set from a lazy option or normalizer.") 1
0007 DO_FCALL
0008 THROW V2
0009 EXT_STMT
0010 T4 = FETCH_OBJ_R THIS string("prototype")
0011 T5 = TYPE_CHECK (null) T4
0012 T5 = JMPZ_EX T5 0014
0013 T5 = BOOL CV0($prototype)
0014 JMPZ T5 0020
0015 EXT_STMT
0016 V6 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0017 SEND_VAL_EX string("The prototype property cannot be set from a root definition.") 1
0018 DO_FCALL
0019 THROW V6
0020 EXT_STMT
0021 ASSIGN_OBJ THIS string("prototype")
0022 OP_DATA CV0($prototype)
0023 EXT_STMT
0024 T9 = FETCH_THIS
0025 VERIFY_RETURN_TYPE T9
0026 RETURN T9
0027 EXT_STMT
0028 VERIFY_RETURN_TYPE
0029 RETURN null
LIVE RANGES:
     2: 0006 - 0008 (new)
     6: 0017 - 0019 (new)
     9: 0025 - 0026 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::isPrototype:
     ; (lines=9, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:803-806
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_IS THIS string("prototype")
0002 T1 = COALESCE T0 0004
0003 T1 = QM_ASSIGN bool(false)
0004 VERIFY_RETURN_TYPE T1
0005 RETURN T1
0006 EXT_STMT
0007 VERIFY_RETURN_TYPE
0008 RETURN null
LIVE RANGES:
     1: 0004 - 0005 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::remove:
     ; (lines=47, args=1, vars=2, tmps=15)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:819-831
     ; return  [] RANGE[0..0]
0000 CV0($optionNames) = RECV 1
0001 EXT_STMT
0002 T2 = FETCH_OBJ_R THIS string("locked")
0003 JMPZ T2 0009
0004 EXT_STMT
0005 V3 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0006 SEND_VAL_EX string("Options cannot be removed from a lazy option or normalizer.") 1
0007 DO_FCALL
0008 THROW V3
0009 EXT_STMT
0010 T5 = CAST (array) CV0($optionNames)
0011 V6 = FE_RESET_R T5 0041
0012 FE_FETCH_R V6 CV1($option) 0041
0013 EXT_STMT
0014 V7 = FETCH_OBJ_UNSET THIS string("defined")
0015 UNSET_DIM V7 CV1($option)
0016 EXT_STMT
0017 V8 = FETCH_OBJ_UNSET THIS string("defaults")
0018 UNSET_DIM V8 CV1($option)
0019 EXT_STMT
0020 V9 = FETCH_OBJ_UNSET THIS string("required")
0021 UNSET_DIM V9 CV1($option)
0022 EXT_STMT
0023 V10 = FETCH_OBJ_UNSET THIS string("resolved")
0024 UNSET_DIM V10 CV1($option)
0025 EXT_STMT
0026 V11 = FETCH_OBJ_UNSET THIS string("lazy")
0027 UNSET_DIM V11 CV1($option)
0028 EXT_STMT
0029 V12 = FETCH_OBJ_UNSET THIS string("normalizers")
0030 UNSET_DIM V12 CV1($option)
0031 EXT_STMT
0032 V13 = FETCH_OBJ_UNSET THIS string("allowedTypes")
0033 UNSET_DIM V13 CV1($option)
0034 EXT_STMT
0035 V14 = FETCH_OBJ_UNSET THIS string("allowedValues")
0036 UNSET_DIM V14 CV1($option)
0037 EXT_STMT
0038 V15 = FETCH_OBJ_UNSET THIS string("info")
0039 UNSET_DIM V15 CV1($option)
0040 JMP 0012
0041 FE_FREE V6
0042 EXT_STMT
0043 T16 = FETCH_THIS
0044 RETURN T16
0045 EXT_STMT
0046 RETURN null
LIVE RANGES:
     3: 0006 - 0008 (new)
     6: 0012 - 0041 (loop)

Symfony\Component\OptionsResolver\OptionsResolver::clear:
     ; (lines=46, args=0, vars=0, tmps=15)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:840-859
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("locked")
0002 JMPZ T0 0008
0003 EXT_STMT
0004 V1 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0005 SEND_VAL_EX string("Options cannot be cleared from a lazy option or normalizer.") 1
0006 DO_FCALL
0007 THROW V1
0008 EXT_STMT
0009 ASSIGN_OBJ THIS string("defined")
0010 OP_DATA array(...)
0011 EXT_STMT
0012 ASSIGN_OBJ THIS string("defaults")
0013 OP_DATA array(...)
0014 EXT_STMT
0015 ASSIGN_OBJ THIS string("nested")
0016 OP_DATA array(...)
0017 EXT_STMT
0018 ASSIGN_OBJ THIS string("required")
0019 OP_DATA array(...)
0020 EXT_STMT
0021 ASSIGN_OBJ THIS string("resolved")
0022 OP_DATA array(...)
0023 EXT_STMT
0024 ASSIGN_OBJ THIS string("lazy")
0025 OP_DATA array(...)
0026 EXT_STMT
0027 ASSIGN_OBJ THIS string("normalizers")
0028 OP_DATA array(...)
0029 EXT_STMT
0030 ASSIGN_OBJ THIS string("allowedTypes")
0031 OP_DATA array(...)
0032 EXT_STMT
0033 ASSIGN_OBJ THIS string("allowedValues")
0034 OP_DATA array(...)
0035 EXT_STMT
0036 ASSIGN_OBJ THIS string("deprecated")
0037 OP_DATA array(...)
0038 EXT_STMT
0039 ASSIGN_OBJ THIS string("info")
0040 OP_DATA array(...)
0041 EXT_STMT
0042 T14 = FETCH_THIS
0043 RETURN T14
0044 EXT_STMT
0045 RETURN null
LIVE RANGES:
     1: 0005 - 0007 (new)

Symfony\Component\OptionsResolver\OptionsResolver::resolve:
     ; (lines=145, args=1, vars=6, tmps=57)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:883-928
     ; return  [] RANGE[0..0]
0000 CV0($options) = RECV_INIT 1 array(...)
0001 EXT_STMT
0002 T6 = FETCH_OBJ_R THIS string("locked")
0003 JMPZ T6 0009
0004 EXT_STMT
0005 V7 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0006 SEND_VAL_EX string("Options cannot be resolved from a lazy option or normalizer.") 1
0007 DO_FCALL
0008 THROW V7
0009 EXT_STMT
0010 T9 = FETCH_THIS
0011 T10 = CLONE T9
0012 ASSIGN CV1($clone) T10
0013 EXT_STMT
0014 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\array_diff_key")
0015 SEND_VAR_EX CV0($options) 1
0016 CHECK_FUNC_ARG 2
0017 V12 = FETCH_OBJ_FUNC_ARG (ref) CV1($clone) string("defined")
0018 SEND_FUNC_ARG V12 2
0019 V13 = DO_FCALL
0020 ASSIGN CV2($diff) V13
0021 EXT_STMT
0022 T15 = COUNT CV2($diff)
0023 T16 = IS_SMALLER int(0) T15
0024 JMPZ T16 0067
0025 EXT_STMT
0026 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\ksort")
0027 CHECK_FUNC_ARG 1
0028 V17 = FETCH_OBJ_FUNC_ARG (ref) CV1($clone) string("defined")
0029 SEND_FUNC_ARG V17 1
0030 DO_FCALL
0031 EXT_STMT
0032 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\ksort")
0033 SEND_VAR_EX CV2($diff) 1
0034 DO_FCALL
0035 EXT_STMT
0036 V20 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException")
0037 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0038 T21 = COUNT CV2($diff)
0039 T22 = IS_SMALLER int(1) T21
0040 JMPZ T22 0043
0041 T23 = QM_ASSIGN string("The options "%s" do not exist.")
0042 JMP 0044
0043 T23 = QM_ASSIGN string("The option "%s" does not exist.")
0044 T24 = CONCAT T23 string(" Defined options are: "%s".")
0045 SEND_VAL_EX T24 1
0046 INIT_METHOD_CALL 1 THIS string("formatOptions")
0047 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0048 SEND_VAR_EX CV2($diff) 1
0049 V25 = DO_FCALL
0050 SEND_VAR_NO_REF_EX V25 1
0051 V26 = DO_FCALL
0052 SEND_VAR_NO_REF_EX V26 2
0053 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0054 SEND_VAL_EX string("", "") 1
0055 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0056 CHECK_FUNC_ARG 1
0057 V27 = FETCH_OBJ_FUNC_ARG (ref) CV1($clone) string("defined")
0058 SEND_FUNC_ARG V27 1
0059 V28 = DO_FCALL
0060 SEND_VAR_NO_REF_EX V28 2
0061 V29 = DO_FCALL
0062 SEND_VAR_NO_REF_EX V29 3
0063 V30 = DO_FCALL
0064 SEND_VAR_NO_REF_EX V30 1
0065 DO_FCALL
0066 THROW V20
0067 EXT_STMT
0068 V32 = FE_RESET_R CV0($options) 0086
0069 T33 = FE_FETCH_R V32 CV3($value) 0086
0070 ASSIGN CV4($option) T33
0071 EXT_STMT
0072 V35 = FETCH_OBJ_W (dim write) CV1($clone) string("given")
0073 ASSIGN_DIM V35 CV4($option)
0074 OP_DATA bool(true)
0075 EXT_STMT
0076 V37 = FETCH_OBJ_W (dim write) CV1($clone) string("defaults")
0077 ASSIGN_DIM V37 CV4($option)
0078 OP_DATA CV3($value)
0079 EXT_STMT
0080 V39 = FETCH_OBJ_UNSET CV1($clone) string("resolved")
0081 UNSET_DIM V39 CV4($option)
0082 EXT_STMT
0083 V40 = FETCH_OBJ_UNSET CV1($clone) string("lazy")
0084 UNSET_DIM V40 CV4($option)
0085 JMP 0069
0086 FE_FREE V32
0087 EXT_STMT
0088 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\array_diff_key")
0089 CHECK_FUNC_ARG 1
0090 V41 = FETCH_OBJ_FUNC_ARG (ref) CV1($clone) string("required")
0091 SEND_FUNC_ARG V41 1
0092 CHECK_FUNC_ARG 2
0093 V42 = FETCH_OBJ_FUNC_ARG (ref) CV1($clone) string("defaults")
0094 SEND_FUNC_ARG V42 2
0095 V43 = DO_FCALL
0096 ASSIGN CV2($diff) V43
0097 EXT_STMT
0098 T45 = COUNT CV2($diff)
0099 T46 = IS_SMALLER int(0) T45
0100 JMPZ T46 0126
0101 EXT_STMT
0102 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\ksort")
0103 SEND_VAR_EX CV2($diff) 1
0104 DO_FCALL
0105 EXT_STMT
0106 V48 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\MissingOptionsException")
0107 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\sprintf")
0108 T49 = COUNT CV2($diff)
0109 T50 = IS_SMALLER int(1) T49
0110 JMPZ T50 0113
0111 T51 = QM_ASSIGN string("The required options "%s" are missing.")
0112 JMP 0114
0113 T51 = QM_ASSIGN string("The required option "%s" is missing.")
0114 SEND_VAL_EX T51 1
0115 INIT_METHOD_CALL 1 THIS string("formatOptions")
0116 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0117 SEND_VAR_EX CV2($diff) 1
0118 V52 = DO_FCALL
0119 SEND_VAR_NO_REF_EX V52 1
0120 V53 = DO_FCALL
0121 SEND_VAR_NO_REF_EX V53 2
0122 V54 = DO_FCALL
0123 SEND_VAR_NO_REF_EX V54 1
0124 DO_FCALL
0125 THROW V48
0126 EXT_STMT
0127 ASSIGN_OBJ CV1($clone) string("locked")
0128 OP_DATA bool(true)
0129 EXT_STMT
0130 T57 = FETCH_OBJ_R CV1($clone) string("defaults")
0131 V58 = FE_RESET_R T57 0139
0132 T59 = FE_FETCH_R V58 CV5($_) 0139
0133 ASSIGN CV4($option) T59
0134 EXT_STMT
0135 INIT_METHOD_CALL 1 CV1($clone) string("offsetGet")
0136 SEND_VAR_EX CV4($option) 1
0137 DO_FCALL
0138 JMP 0132
0139 FE_FREE V58
0140 EXT_STMT
0141 T62 = FETCH_OBJ_R CV1($clone) string("resolved")
0142 RETURN T62
0143 EXT_STMT
0144 RETURN null
LIVE RANGES:
     7: 0006 - 0008 (new)
     20: 0037 - 0066 (new)
     32: 0069 - 0086 (loop)
     48: 0107 - 0125 (new)
     58: 0132 - 0139 (loop)

Symfony\Component\OptionsResolver\OptionsResolver::offsetGet:
     ; (lines=655, args=2, vars=21, tmps=267)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:945-1163
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 CV1($triggerDeprecation) = RECV_INIT 2 bool(true)
0002 EXT_STMT
0003 T21 = FETCH_OBJ_R THIS string("locked")
0004 T22 = BOOL_NOT T21
0005 JMPZ T22 0011
0006 EXT_STMT
0007 V23 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0008 SEND_VAL_EX string("Array access is only supported within closures of lazy options and normalizers.") 1
0009 DO_FCALL
0010 THROW V23
0011 EXT_STMT
0012 T25 = FETCH_OBJ_IS THIS string("resolved")
0013 T26 = ISSET_ISEMPTY_DIM_OBJ (isset) T25 CV0($option)
0014 T26 = JMPNZ_EX T26 0018
0015 T27 = FETCH_OBJ_R THIS string("resolved")
0016 T28 = ARRAY_KEY_EXISTS CV0($option) T27
0017 T26 = BOOL T28
0018 JMPZ T26 0065
0019 EXT_STMT
0020 T29 = JMPZ_EX CV1($triggerDeprecation) 0024
0021 T30 = FETCH_OBJ_IS THIS string("deprecated")
0022 T31 = ISSET_ISEMPTY_DIM_OBJ (isset) T30 CV0($option)
0023 T29 = BOOL T31
0024 T29 = JMPZ_EX T29 0031
0025 T32 = FETCH_OBJ_IS THIS string("given")
0026 T33 = ISSET_ISEMPTY_DIM_OBJ (isset) T32 CV0($option)
0027 T33 = JMPNZ_EX T33 0030
0028 T34 = FETCH_OBJ_R THIS string("calling")
0029 T33 = BOOL T34
0030 T29 = BOOL T33
0031 T29 = JMPZ_EX T29 0037
0032 T35 = FETCH_OBJ_R THIS string("deprecated")
0033 T36 = FETCH_DIM_R T35 CV0($option)
0034 T37 = FETCH_DIM_R T36 string("message")
0035 T38 = TYPE_CHECK (string) T37
0036 T29 = BOOL T38
0037 JMPZ T29 0061
0038 EXT_STMT
0039 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\trigger_deprecation")
0040 CHECK_FUNC_ARG 1
0041 V39 = FETCH_OBJ_FUNC_ARG THIS string("deprecated")
0042 V40 = FETCH_DIM_FUNC_ARG V39 CV0($option)
0043 V41 = FETCH_DIM_FUNC_ARG V40 string("package")
0044 SEND_FUNC_ARG V41 1
0045 CHECK_FUNC_ARG 2
0046 V42 = FETCH_OBJ_FUNC_ARG THIS string("deprecated")
0047 V43 = FETCH_DIM_FUNC_ARG V42 CV0($option)
0048 V44 = FETCH_DIM_FUNC_ARG V43 string("version")
0049 SEND_FUNC_ARG V44 2
0050 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\strtr")
0051 CHECK_FUNC_ARG 1
0052 V45 = FETCH_OBJ_FUNC_ARG THIS string("deprecated")
0053 V46 = FETCH_DIM_FUNC_ARG V45 CV0($option)
0054 V47 = FETCH_DIM_FUNC_ARG V46 string("message")
0055 SEND_FUNC_ARG V47 1
0056 T48 = INIT_ARRAY 1 CV0($option) string("%name%")
0057 SEND_VAL_EX T48 2
0058 V49 = DO_FCALL
0059 SEND_VAR_NO_REF_EX V49 3
0060 DO_FCALL
0061 EXT_STMT
0062 T51 = FETCH_OBJ_R THIS string("resolved")
0063 T52 = FETCH_DIM_R T51 CV0($option)
0064 RETURN T52
0065 EXT_STMT
0066 T53 = FETCH_OBJ_IS THIS string("defaults")
0067 T54 = ISSET_ISEMPTY_DIM_OBJ (isset) T53 CV0($option)
0068 T55 = BOOL_NOT T54
0069 T55 = JMPZ_EX T55 0074
0070 T56 = FETCH_OBJ_R THIS string("defaults")
0071 T57 = ARRAY_KEY_EXISTS CV0($option) T56
0072 T58 = BOOL_NOT T57
0073 T55 = BOOL T58
0074 JMPZ T55 0116
0075 EXT_STMT
0076 T59 = FETCH_OBJ_IS THIS string("defined")
0077 T60 = ISSET_ISEMPTY_DIM_OBJ (isset) T59 CV0($option)
0078 T61 = BOOL_NOT T60
0079 JMPZ T61 0103
0080 EXT_STMT
0081 V62 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\NoSuchOptionException")
0082 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0083 SEND_VAL_EX string("The option "%s" does not exist. Defined options are: "%s".") 1
0084 INIT_METHOD_CALL 1 THIS string("formatOptions")
0085 T63 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0086 SEND_VAL_EX T63 1
0087 V64 = DO_FCALL
0088 SEND_VAR_NO_REF_EX V64 2
0089 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0090 SEND_VAL_EX string("", "") 1
0091 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0092 CHECK_FUNC_ARG 1
0093 V65 = FETCH_OBJ_FUNC_ARG (ref) THIS string("defined")
0094 SEND_FUNC_ARG V65 1
0095 V66 = DO_FCALL
0096 SEND_VAR_NO_REF_EX V66 2
0097 V67 = DO_FCALL
0098 SEND_VAR_NO_REF_EX V67 3
0099 V68 = DO_FCALL
0100 SEND_VAR_NO_REF_EX V68 1
0101 DO_FCALL
0102 THROW V62
0103 EXT_STMT
0104 V70 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\NoSuchOptionException")
0105 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\sprintf")
0106 SEND_VAL_EX string("The optional option "%s" has no value set. You should make sure it is set with "isset" before reading it.") 1
0107 INIT_METHOD_CALL 1 THIS string("formatOptions")
0108 T71 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0109 SEND_VAL_EX T71 1
0110 V72 = DO_FCALL
0111 SEND_VAR_NO_REF_EX V72 2
0112 V73 = DO_FCALL
0113 SEND_VAR_NO_REF_EX V73 1
0114 DO_FCALL
0115 THROW V70
0116 EXT_STMT
0117 T75 = FETCH_OBJ_R THIS string("defaults")
0118 T76 = FETCH_DIM_R T75 CV0($option)
0119 ASSIGN CV2($value) T76
0120 EXT_STMT
0121 T78 = FETCH_OBJ_IS THIS string("nested")
0122 T79 = ISSET_ISEMPTY_DIM_OBJ (isset) T78 CV0($option)
0123 JMPZ T79 0261
0124 EXT_STMT
0125 T80 = FETCH_OBJ_IS THIS string("calling")
0126 T81 = ISSET_ISEMPTY_DIM_OBJ (isset) T80 CV0($option)
0127 JMPZ T81 0145
0128 EXT_STMT
0129 V82 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\OptionDefinitionException")
0130 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\sprintf")
0131 SEND_VAL_EX string("The options "%s" have a cyclic dependency.") 1
0132 INIT_METHOD_CALL 1 THIS string("formatOptions")
0133 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0134 CHECK_FUNC_ARG 1
0135 V83 = FETCH_OBJ_FUNC_ARG (ref) THIS string("calling")
0136 SEND_FUNC_ARG V83 1
0137 V84 = DO_FCALL
0138 SEND_VAR_NO_REF_EX V84 1
0139 V85 = DO_FCALL
0140 SEND_VAR_NO_REF_EX V85 2
0141 V86 = DO_FCALL
0142 SEND_VAR_NO_REF_EX V86 1
0143 DO_FCALL
0144 THROW V82
0145 EXT_STMT
0146 T88 = TYPE_CHECK (array) CV2($value)
0147 T89 = BOOL_NOT T88
0148 JMPZ T89 0170
0149 EXT_STMT
0150 V90 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\InvalidOptionsException")
0151 INIT_NS_FCALL_BY_NAME 4 string("Symfony\Component\OptionsResolver\sprintf")
0152 SEND_VAL_EX string("The nested option "%s" with value %s is expected to be of type array, but is of type "%s".") 1
0153 INIT_METHOD_CALL 1 THIS string("formatOptions")
0154 T91 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0155 SEND_VAL_EX T91 1
0156 V92 = DO_FCALL
0157 SEND_VAR_NO_REF_EX V92 2
0158 INIT_METHOD_CALL 1 THIS string("formatValue")
0159 SEND_VAR_EX CV2($value) 1
0160 V93 = DO_FCALL
0161 SEND_VAR_NO_REF_EX V93 3
0162 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\get_debug_type")
0163 SEND_VAR_EX CV2($value) 1
0164 V94 = DO_FCALL
0165 SEND_VAR_NO_REF_EX V94 4
0166 V95 = DO_FCALL
0167 SEND_VAR_NO_REF_EX V95 1
0168 DO_FCALL
0169 THROW V90
0170 EXT_STMT
0171 V97 = FETCH_OBJ_W (dim write) THIS string("calling")
0172 ASSIGN_DIM V97 CV0($option)
0173 OP_DATA bool(true)
0174 NOP
0175 EXT_STMT
0176 V100 = NEW 0 (self) (exception)
0177 DO_FCALL
0178 ASSIGN CV3($resolver) V100
0179 EXT_STMT
0180 ASSIGN_OBJ CV3($resolver) string("prototype")
0181 OP_DATA bool(false)
0182 EXT_STMT
0183 T105 = FETCH_OBJ_R THIS string("parentsOptions")
0184 ASSIGN_OBJ CV3($resolver) string("parentsOptions")
0185 OP_DATA T105
0186 EXT_STMT
0187 V106 = FETCH_OBJ_W (dim write) CV3($resolver) string("parentsOptions")
0188 ASSIGN_DIM V106 NEXT
0189 OP_DATA CV0($option)
0190 EXT_STMT
0191 T108 = FETCH_OBJ_R THIS string("nested")
0192 T109 = FETCH_DIM_R T108 CV0($option)
0193 V110 = FE_RESET_R T109 0202
0194 FE_FETCH_R V110 CV4($closure) 0202
0195 EXT_STMT
0196 INIT_DYNAMIC_CALL 2 CV4($closure)
0197 SEND_VAR_EX CV3($resolver) 1
0198 V111 = FETCH_THIS
0199 SEND_VAR_EX V111 2
0200 DO_FCALL
0201 JMP 0194
0202 FE_FREE V110
0203 EXT_STMT
0204 T113 = FETCH_OBJ_R CV3($resolver) string("prototype")
0205 JMPZ T113 0247
0206 EXT_STMT
0207 ASSIGN CV5($values) array(...)
0208 EXT_STMT
0209 V115 = FE_RESET_R CV2($value) 0243
0210 T116 = FE_FETCH_R V115 CV6($prototypeValue) 0243
0211 ASSIGN CV7($index) T116
0212 EXT_STMT
0213 T118 = TYPE_CHECK (array) CV6($prototypeValue)
0214 T119 = BOOL_NOT T118
0215 JMPZ T119 0233
0216 EXT_STMT
0217 V120 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\InvalidOptionsException")
0218 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0219 SEND_VAL_EX string("The value of the option "%s" is expected to be of type array of array, but is of type array of "%s".") 1
0220 INIT_METHOD_CALL 1 THIS string("formatOptions")
0221 T121 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0222 SEND_VAL_EX T121 1
0223 V122 = DO_FCALL
0224 SEND_VAR_NO_REF_EX V122 2
0225 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\get_debug_type")
0226 SEND_VAR_EX CV6($prototypeValue) 1
0227 V123 = DO_FCALL
0228 SEND_VAR_NO_REF_EX V123 3
0229 V124 = DO_FCALL
0230 SEND_VAR_NO_REF_EX V124 1
0231 DO_FCALL
0232 THROW V120
0233 EXT_STMT
0234 ASSIGN_OBJ CV3($resolver) string("prototypeIndex")
0235 OP_DATA CV7($index)
0236 EXT_STMT
0237 INIT_METHOD_CALL 1 CV3($resolver) string("resolve")
0238 SEND_VAR_EX CV6($prototypeValue) 1
0239 V128 = DO_FCALL
0240 ASSIGN_DIM CV5($values) CV7($index)
0241 OP_DATA V128
0242 JMP 0210
0243 FE_FREE V115
0244 EXT_STMT
0245 ASSIGN CV2($value) CV5($values)
0246 JMP 0252
0247 EXT_STMT
0248 INIT_METHOD_CALL 1 CV3($resolver) string("resolve")
0249 SEND_VAR_EX CV2($value) 1
0250 V130 = DO_FCALL
0251 ASSIGN CV2($value) V130
0252 T99 = FAST_CALL 0254
0253 JMP 0261
0254 EXT_STMT
0255 ASSIGN_OBJ CV3($resolver) string("prototypeIndex")
0256 OP_DATA null
0257 EXT_STMT
0258 V133 = FETCH_OBJ_UNSET THIS string("calling")
0259 UNSET_DIM V133 CV0($option)
0260 FAST_RET T99
0261 EXT_STMT
0262 T134 = FETCH_OBJ_IS THIS string("lazy")
0263 T135 = ISSET_ISEMPTY_DIM_OBJ (isset) T134 CV0($option)
0264 JMPZ T135 0311
0265 EXT_STMT
0266 T136 = FETCH_OBJ_IS THIS string("calling")
0267 T137 = ISSET_ISEMPTY_DIM_OBJ (isset) T136 CV0($option)
0268 JMPZ T137 0286
0269 EXT_STMT
0270 V138 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\OptionDefinitionException")
0271 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\sprintf")
0272 SEND_VAL_EX string("The options "%s" have a cyclic dependency.") 1
0273 INIT_METHOD_CALL 1 THIS string("formatOptions")
0274 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0275 CHECK_FUNC_ARG 1
0276 V139 = FETCH_OBJ_FUNC_ARG (ref) THIS string("calling")
0277 SEND_FUNC_ARG V139 1
0278 V140 = DO_FCALL
0279 SEND_VAR_NO_REF_EX V140 1
0280 V141 = DO_FCALL
0281 SEND_VAR_NO_REF_EX V141 2
0282 V142 = DO_FCALL
0283 SEND_VAR_NO_REF_EX V142 1
0284 DO_FCALL
0285 THROW V138
0286 EXT_STMT
0287 V144 = FETCH_OBJ_W (dim write) THIS string("calling")
0288 ASSIGN_DIM V144 CV0($option)
0289 OP_DATA bool(true)
0290 NOP
0291 EXT_STMT
0292 T147 = FETCH_OBJ_R THIS string("lazy")
0293 T148 = FETCH_DIM_R T147 CV0($option)
0294 V149 = FE_RESET_R T148 0304
0295 FE_FETCH_R V149 CV4($closure) 0304
0296 EXT_STMT
0297 INIT_DYNAMIC_CALL 2 CV4($closure)
0298 V150 = FETCH_THIS
0299 SEND_VAR_EX V150 1
0300 SEND_VAR_EX CV2($value) 2
0301 V151 = DO_FCALL
0302 ASSIGN CV2($value) V151
0303 JMP 0295
0304 FE_FREE V149
0305 T146 = FAST_CALL 0307
0306 JMP 0311
0307 EXT_STMT
0308 V153 = FETCH_OBJ_UNSET THIS string("calling")
0309 UNSET_DIM V153 CV0($option)
0310 FAST_RET T146
0311 EXT_STMT
0312 T154 = FETCH_OBJ_IS THIS string("allowedTypes")
0313 T155 = ISSET_ISEMPTY_DIM_OBJ (isset) T154 CV0($option)
0314 JMPZ T155 0411
0315 EXT_STMT
0316 ASSIGN CV8($valid) bool(true)
0317 EXT_STMT
0318 ASSIGN CV9($invalidTypes) array(...)
0319 EXT_STMT
0320 T158 = FETCH_OBJ_R THIS string("allowedTypes")
0321 T159 = FETCH_DIM_R T158 CV0($option)
0322 V160 = FE_RESET_R T159 0335
0323 FE_FETCH_R V160 CV10($type) 0335
0324 EXT_STMT
0325 INIT_METHOD_CALL 3 THIS string("verifyTypes")
0326 SEND_VAR_EX CV10($type) 1
0327 SEND_VAR_EX CV2($value) 2
0328 SEND_VAR_EX CV9($invalidTypes) 3
0329 V161 = DO_FCALL
0330 T162 = ASSIGN CV8($valid) V161
0331 JMPZ T162 0334
0332 EXT_STMT
0333 JMP 0335
0334 JMP 0323
0335 FE_FREE V160
0336 EXT_STMT
0337 T163 = BOOL_NOT CV8($valid)
0338 JMPZ T163 0411
0339 EXT_STMT
0340 INIT_METHOD_CALL 1 THIS string("formatValue")
0341 SEND_VAR_EX CV2($value) 1
0342 V164 = DO_FCALL
0343 ASSIGN CV11($fmtActualValue) V164
0344 EXT_STMT
0345 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0346 SEND_VAL_EX string("" or "") 1
0347 CHECK_FUNC_ARG 2
0348 V166 = FETCH_OBJ_FUNC_ARG THIS string("allowedTypes")
0349 V167 = FETCH_DIM_FUNC_ARG V166 CV0($option)
0350 SEND_FUNC_ARG V167 2
0351 V168 = DO_FCALL
0352 ASSIGN CV12($fmtAllowedTypes) V168
0353 EXT_STMT
0354 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0355 SEND_VAL_EX string("|") 1
0356 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0357 SEND_VAR_EX CV9($invalidTypes) 1
0358 V170 = DO_FCALL
0359 SEND_VAR_NO_REF_EX V170 2
0360 V171 = DO_FCALL
0361 ASSIGN CV13($fmtProvidedTypes) V171
0362 EXT_STMT
0363 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\array_filter")
0364 CHECK_FUNC_ARG 1
0365 V173 = FETCH_OBJ_FUNC_ARG THIS string("allowedTypes")
0366 V174 = FETCH_DIM_FUNC_ARG V173 CV0($option)
0367 SEND_FUNC_ARG V174 1
0368 T175 = DECLARE_LAMBDA_FUNCTION string("")
0369 SEND_VAL_EX T175 2
0370 V176 = DO_FCALL
0371 T177 = COUNT V176
0372 T178 = IS_SMALLER int(0) T177
0373 ASSIGN CV14($allowedContainsArrayType) T178
0374 EXT_STMT
0375 T180 = TYPE_CHECK (array) CV2($value)
0376 T180 = JMPZ_EX T180 0378
0377 T180 = BOOL CV14($allowedContainsArrayType)
0378 JMPZ T180 0395
0379 EXT_STMT
0380 V181 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\InvalidOptionsException")
0381 INIT_NS_FCALL_BY_NAME 5 string("Symfony\Component\OptionsResolver\sprintf")
0382 SEND_VAL_EX string("The option "%s" with value %s is expected to be of type "%s", but one of the elements is of type "%s".") 1
0383 INIT_METHOD_CALL 1 THIS string("formatOptions")
0384 T182 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0385 SEND_VAL_EX T182 1
0386 V183 = DO_FCALL
0387 SEND_VAR_NO_REF_EX V183 2
0388 SEND_VAR_EX CV11($fmtActualValue) 3
0389 SEND_VAR_EX CV12($fmtAllowedTypes) 4
0390 SEND_VAR_EX CV13($fmtProvidedTypes) 5
0391 V184 = DO_FCALL
0392 SEND_VAR_NO_REF_EX V184 1
0393 DO_FCALL
0394 THROW V181
0395 EXT_STMT
0396 V186 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\InvalidOptionsException")
0397 INIT_NS_FCALL_BY_NAME 5 string("Symfony\Component\OptionsResolver\sprintf")
0398 SEND_VAL_EX string("The option "%s" with value %s is expected to be of type "%s", but is of type "%s".") 1
0399 INIT_METHOD_CALL 1 THIS string("formatOptions")
0400 T187 = INIT_ARRAY 1 (packed) CV0($option) NEXT
0401 SEND_VAL_EX T187 1
0402 V188 = DO_FCALL
0403 SEND_VAR_NO_REF_EX V188 2
0404 SEND_VAR_EX CV11($fmtActualValue) 3
0405 SEND_VAR_EX CV12($fmtAllowedTypes) 4
0406 SEND_VAR_EX CV13($fmtProvidedTypes) 5
0407 V189 = DO_FCALL
0408 SEND_VAR_NO_REF_EX V189 1
0409 DO_FCALL
0410 THROW V186
0411 EXT_STMT
0412 T191 = FETCH_OBJ_IS THIS string("allowedValues")
0413 T192 = ISSET_ISEMPTY_DIM_OBJ (isset) T191 CV0($option)
0414 JMPZ T192 0494
0415 EXT_STMT
0416 ASSIGN CV15($success) bool(false)
0417 EXT_STMT
0418 ASSIGN CV16($printableAllowedValues) array(...)
0419 EXT_STMT
0420 T195 = FETCH_OBJ_R THIS string("allowedValues")
0421 T196 = FETCH_DIM_R T195 CV0($option)
0422 V197 = FE_RESET_R T196 0449
0423 FE_FETCH_R V197 CV17($allowedValue) 0449
0424 EXT_STMT
0425 T198 = INSTANCEOF CV17($allowedValue) string("Closure")
0426 JMPZ T198 0438
0427 EXT_STMT
0428 INIT_DYNAMIC_CALL 1 CV17($allowedValue)
0429 SEND_VAR_EX CV2($value) 1
0430 V199 = DO_FCALL
0431 JMPZ V199 0436
0432 EXT_STMT
0433 ASSIGN CV15($success) bool(true)
0434 EXT_STMT
0435 JMP 0449
0436 EXT_STMT
0437 JMP 0423
0438 EXT_STMT
0439 T201 = IS_IDENTICAL CV2($value) CV17($allowedValue)
0440 JMPZ T201 0445
0441 EXT_STMT
0442 ASSIGN CV15($success) bool(true)
0443 EXT_STMT
0444 JMP 0449
0445 EXT_STMT
0446 ASSIGN_DIM CV16($printableAllowedValues) NEXT
0447 OP_DATA CV17($allowedValue)
0448 JMP 0423
0449 FE_FREE V197
0450 EXT_STMT
0451 T204 = BOOL_NOT CV15($success)
0452 JMPZ T204 0494
0453 EXT_STMT
0454 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\sprintf")
0455 SEND_VAL_EX string("The option "%s" with value %s is invalid.") 1
0456 SEND_VAR_EX CV0($option) 2
0457 INIT_METHOD_CALL 1 THIS string("formatValue")
0458 SEND_VAR_EX CV2($value) 1
0459 V205 = DO_FCALL
0460 SEND_VAR_NO_REF_EX V205 3
0461 V206 = DO_FCALL
0462 ASSIGN CV18($message) V206
0463 EXT_STMT
0464 T208 = COUNT CV16($printableAllowedValues)
0465 T209 = IS_SMALLER int(0) T208
0466 JMPZ T209 0476
0467 EXT_STMT
0468 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\sprintf")
0469 SEND_VAL_EX string(" Accepted values are: %s.") 1
0470 INIT_METHOD_CALL 1 THIS string("formatValues")
0471 SEND_VAR_EX CV16($printableAllowedValues) 1
0472 V210 = DO_FCALL
0473 SEND_VAR_NO_REF_EX V210 2
0474 V211 = DO_FCALL
0475 ASSIGN_OP (CONCAT) CV18($message) V211
0476 EXT_STMT
0477 T213 = FETCH_OBJ_IS THIS string("info")
0478 T214 = ISSET_ISEMPTY_DIM_OBJ (isset) T213 CV0($option)
0479 JMPZ T214 0489
0480 EXT_STMT
0481 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\sprintf")
0482 SEND_VAL_EX string(" Info: %s.") 1
0483 CHECK_FUNC_ARG 2
0484 V215 = FETCH_OBJ_FUNC_ARG THIS string("info")
0485 V216 = FETCH_DIM_FUNC_ARG V215 CV0($option)
0486 SEND_FUNC_ARG V216 2
0487 V217 = DO_FCALL
0488 ASSIGN_OP (CONCAT) CV18($message) V217
0489 EXT_STMT
0490 V219 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\InvalidOptionsException")
0491 SEND_VAR_EX CV18($message) 1
0492 DO_FCALL
0493 THROW V219
0494 EXT_STMT
0495 T221 = JMPZ_EX CV1($triggerDeprecation) 0499
0496 T222 = FETCH_OBJ_IS THIS string("deprecated")
0497 T223 = ISSET_ISEMPTY_DIM_OBJ (isset) T222 CV0($option)
0498 T221 = BOOL T223
0499 T221 = JMPZ_EX T221 0512
0500 T224 = FETCH_OBJ_IS THIS string("given")
0501 T225 = ISSET_ISEMPTY_DIM_OBJ (isset) T224 CV0($option)
0502 T225 = JMPNZ_EX T225 0511
0503 T226 = FETCH_OBJ_R THIS string("calling")
0504 T226 = JMPZ_EX T226 0510
0505 T227 = FETCH_OBJ_R THIS string("deprecated")
0506 T228 = FETCH_DIM_R T227 CV0($option)
0507 T229 = FETCH_DIM_R T228 string("message")
0508 T230 = TYPE_CHECK (string) T229
0509 T226 = BOOL T230
0510 T225 = BOOL T226
0511 T221 = BOOL T225
0512 JMPZ T221 0597
0513 EXT_STMT
0514 T231 = FETCH_OBJ_R THIS string("deprecated")
0515 T232 = FETCH_DIM_R T231 CV0($option)
0516 ASSIGN CV19($deprecation) T232
0517 EXT_STMT
0518 T234 = FETCH_OBJ_R THIS string("deprecated")
0519 T235 = FETCH_DIM_R T234 CV0($option)
0520 T236 = FETCH_DIM_R T235 string("message")
0521 ASSIGN CV18($message) T236
0522 EXT_STMT
0523 T238 = INSTANCEOF CV18($message) string("Closure")
0524 JMPZ T238 0579
0525 EXT_STMT
0526 T239 = FETCH_OBJ_IS THIS string("calling")
0527 T240 = ISSET_ISEMPTY_DIM_OBJ (isset) T239 CV0($option)
0528 JMPZ T240 0546
0529 EXT_STMT
0530 V241 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\OptionDefinitionException")
0531 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\sprintf")
0532 SEND_VAL_EX string("The options "%s" have a cyclic dependency.") 1
0533 INIT_METHOD_CALL 1 THIS string("formatOptions")
0534 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0535 CHECK_FUNC_ARG 1
0536 V242 = FETCH_OBJ_FUNC_ARG (ref) THIS string("calling")
0537 SEND_FUNC_ARG V242 1
0538 V243 = DO_FCALL
0539 SEND_VAR_NO_REF_EX V243 1
0540 V244 = DO_FCALL
0541 SEND_VAR_NO_REF_EX V244 2
0542 V245 = DO_FCALL
0543 SEND_VAR_NO_REF_EX V245 1
0544 DO_FCALL
0545 THROW V241
0546 EXT_STMT
0547 V247 = FETCH_OBJ_W (dim write) THIS string("calling")
0548 ASSIGN_DIM V247 CV0($option)
0549 OP_DATA bool(true)
0550 NOP
0551 EXT_STMT
0552 INIT_DYNAMIC_CALL 2 CV18($message)
0553 V250 = FETCH_THIS
0554 SEND_VAR_EX V250 1
0555 SEND_VAR_EX CV2($value) 2
0556 V251 = DO_FCALL
0557 T252 = ASSIGN CV18($message) V251
0558 T253 = TYPE_CHECK (string) T252
0559 T254 = BOOL_NOT T253
0560 JMPZ T254 0573
0561 EXT_STMT
0562 V255 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\InvalidOptionsException")
0563 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\sprintf")
0564 SEND_VAL_EX string("Invalid type for deprecation message, expected string but got "%s", return an empty string to ignore.") 1
0565 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\get_debug_type")
0566 SEND_VAR_EX CV18($message) 1
0567 V256 = DO_FCALL
0568 SEND_VAR_NO_REF_EX V256 2
0569 V257 = DO_FCALL
0570 SEND_VAR_NO_REF_EX V257 1
0571 DO_FCALL
0572 THROW V255
0573 T249 = FAST_CALL 0575
0574 JMP 0579
0575 EXT_STMT
0576 V259 = FETCH_OBJ_UNSET THIS string("calling")
0577 UNSET_DIM V259 CV0($option)
0578 FAST_RET T249
0579 EXT_STMT
0580 T260 = IS_NOT_IDENTICAL CV18($message) string("")
0581 JMPZ T260 0597
0582 EXT_STMT
0583 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\trigger_deprecation")
0584 CHECK_FUNC_ARG 1
0585 V261 = FETCH_DIM_FUNC_ARG CV19($deprecation) string("package")
0586 SEND_FUNC_ARG V261 1
0587 CHECK_FUNC_ARG 2
0588 V262 = FETCH_DIM_FUNC_ARG CV19($deprecation) string("version")
0589 SEND_FUNC_ARG V262 2
0590 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\strtr")
0591 SEND_VAR_EX CV18($message) 1
0592 T263 = INIT_ARRAY 1 CV0($option) string("%name%")
0593 SEND_VAL_EX T263 2
0594 V264 = DO_FCALL
0595 SEND_VAR_NO_REF_EX V264 3
0596 DO_FCALL
0597 EXT_STMT
0598 T266 = FETCH_OBJ_IS THIS string("normalizers")
0599 T267 = ISSET_ISEMPTY_DIM_OBJ (isset) T266 CV0($option)
0600 JMPZ T267 0647
0601 EXT_STMT
0602 T268 = FETCH_OBJ_IS THIS string("calling")
0603 T269 = ISSET_ISEMPTY_DIM_OBJ (isset) T268 CV0($option)
0604 JMPZ T269 0622
0605 EXT_STMT
0606 V270 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\OptionDefinitionException")
0607 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\sprintf")
0608 SEND_VAL_EX string("The options "%s" have a cyclic dependency.") 1
0609 INIT_METHOD_CALL 1 THIS string("formatOptions")
0610 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_keys")
0611 CHECK_FUNC_ARG 1
0612 V271 = FETCH_OBJ_FUNC_ARG (ref) THIS string("calling")
0613 SEND_FUNC_ARG V271 1
0614 V272 = DO_FCALL
0615 SEND_VAR_NO_REF_EX V272 1
0616 V273 = DO_FCALL
0617 SEND_VAR_NO_REF_EX V273 2
0618 V274 = DO_FCALL
0619 SEND_VAR_NO_REF_EX V274 1
0620 DO_FCALL
0621 THROW V270
0622 EXT_STMT
0623 V276 = FETCH_OBJ_W (dim write) THIS string("calling")
0624 ASSIGN_DIM V276 CV0($option)
0625 OP_DATA bool(true)
0626 NOP
0627 EXT_STMT
0628 T279 = FETCH_OBJ_R THIS string("normalizers")
0629 T280 = FETCH_DIM_R T279 CV0($option)
0630 V281 = FE_RESET_R T280 0640
0631 FE_FETCH_R V281 CV20($normalizer) 0640
0632 EXT_STMT
0633 INIT_DYNAMIC_CALL 2 CV20($normalizer)
0634 V282 = FETCH_THIS
0635 SEND_VAR_EX V282 1
0636 SEND_VAR_EX CV2($value) 2
0637 V283 = DO_FCALL
0638 ASSIGN CV2($value) V283
0639 JMP 0631
0640 FE_FREE V281
0641 T278 = FAST_CALL 0643
0642 JMP 0647
0643 EXT_STMT
0644 V285 = FETCH_OBJ_UNSET THIS string("calling")
0645 UNSET_DIM V285 CV0($option)
0646 FAST_RET T278
0647 EXT_STMT
0648 V286 = FETCH_OBJ_W (dim write) THIS string("resolved")
0649 ASSIGN_DIM V286 CV0($option)
0650 OP_DATA CV2($value)
0651 EXT_STMT
0652 RETURN CV2($value)
0653 EXT_STMT
0654 RETURN null
LIVE RANGES:
     23: 0008 - 0010 (new)
     62: 0082 - 0102 (new)
     70: 0105 - 0115 (new)
     82: 0130 - 0144 (new)
     90: 0151 - 0169 (new)
     100: 0177 - 0178 (new)
     110: 0194 - 0202 (loop)
     115: 0210 - 0243 (loop)
     120: 0218 - 0232 (new)
     138: 0271 - 0285 (new)
     149: 0295 - 0304 (loop)
     160: 0323 - 0335 (loop)
     181: 0381 - 0394 (new)
     186: 0397 - 0410 (new)
     197: 0423 - 0449 (loop)
     219: 0491 - 0493 (new)
     241: 0531 - 0545 (new)
     255: 0563 - 0572 (new)
     270: 0607 - 0621 (new)
     281: 0631 - 0640 (loop)
EXCEPTION TABLE:
     0175, -, 0254, 0260     0291, -, 0307, 0310     0551, -, 0575, 0578     0627, -, 0643, 0646
Symfony\Component\OptionsResolver\OptionsResolver::verifyTypes:
     ; (lines=83, args=4, vars=6, tmps=25)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:1165-1189
     ; return  [] RANGE[0..0]
0000 CV0($type) = RECV 1
0001 CV1($value) = RECV 2
0002 CV2($invalidTypes) = RECV 3
0003 CV3($level) = RECV_INIT 4 int(0)
0004 EXT_STMT
0005 T6 = TYPE_CHECK (array) CV1($value)
0006 T6 = JMPZ_EX T6 0013
0007 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\substr")
0008 SEND_VAR_EX CV0($type) 1
0009 SEND_VAL_EX int(-2) 2
0010 V7 = DO_FCALL
0011 T8 = IS_IDENTICAL V7 string("[]")
0012 T6 = BOOL T8
0013 JMPZ T6 0043
0014 EXT_STMT
0015 INIT_NS_FCALL_BY_NAME 3 string("Symfony\Component\OptionsResolver\substr")
0016 SEND_VAR_EX CV0($type) 1
0017 SEND_VAL_EX int(0) 2
0018 SEND_VAL_EX int(-2) 3
0019 V9 = DO_FCALL
0020 ASSIGN CV0($type) V9
0021 EXT_STMT
0022 ASSIGN CV4($valid) bool(true)
0023 EXT_STMT
0024 V12 = FE_RESET_R CV1($value) 0039
0025 FE_FETCH_R V12 CV5($val) 0039
0026 EXT_STMT
0027 INIT_METHOD_CALL 4 THIS string("verifyTypes")
0028 SEND_VAR CV0($type) 1
0029 SEND_VAR CV5($val) 2
0030 SEND_REF CV2($invalidTypes) 3
0031 T13 = ADD CV3($level) int(1)
0032 SEND_VAL T13 4
0033 V14 = DO_FCALL
0034 T15 = BOOL_NOT V14
0035 JMPZ T15 0038
0036 EXT_STMT
0037 ASSIGN CV4($valid) bool(false)
0038 JMP 0025
0039 FE_FREE V12
0040 EXT_STMT
0041 VERIFY_RETURN_TYPE CV4($valid)
0042 RETURN CV4($valid)
0043 EXT_STMT
0044 T17 = IS_IDENTICAL CV0($type) string("null")
0045 T17 = JMPZ_EX T17 0048
0046 T18 = TYPE_CHECK (null) CV1($value)
0047 T17 = BOOL T18
0048 T17 = JMPNZ_EX T17 0063
0049 T19 = FETCH_CLASS_CONSTANT (self) (exception) string("VALIDATION_FUNCTIONS")
0050 T20 = ISSET_ISEMPTY_DIM_OBJ (isset) T19 CV0($type)
0051 JMPZ T20 0059
0052 T21 = FETCH_CLASS_CONSTANT (self) (exception) string("VALIDATION_FUNCTIONS")
0053 T22 = FETCH_DIM_R T21 CV0($type)
0054 INIT_DYNAMIC_CALL 1 T22
0055 SEND_VAR_EX CV1($value) 1
0056 V23 = DO_FCALL
0057 T24 = QM_ASSIGN V23
0058 JMP 0062
0059 V25 = FETCH_CLASS (no-autolod) (exception) CV0($type)
0060 T26 = INSTANCEOF CV1($value) V25
0061 T24 = QM_ASSIGN T26
0062 T17 = BOOL T24
0063 JMPZ T17 0066
0064 EXT_STMT
0065 RETURN bool(true)
0066 EXT_STMT
0067 T27 = BOOL_NOT CV2($invalidTypes)
0068 T27 = JMPNZ_EX T27 0071
0069 T28 = IS_SMALLER int(0) CV3($level)
0070 T27 = BOOL T28
0071 JMPZ T27 0078
0072 EXT_STMT
0073 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\get_debug_type")
0074 SEND_VAR_EX CV1($value) 1
0075 V29 = DO_FCALL
0076 ASSIGN_DIM CV2($invalidTypes) V29
0077 OP_DATA bool(true)
0078 EXT_STMT
0079 RETURN bool(false)
0080 EXT_STMT
0081 VERIFY_RETURN_TYPE
0082 RETURN null
LIVE RANGES:
     12: 0025 - 0039 (loop)

Symfony\Component\OptionsResolver\OptionsResolver::offsetExists:
     ; (lines=16, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:1202-1209
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_R THIS string("locked")
0003 T2 = BOOL_NOT T1
0004 JMPZ T2 0010
0005 EXT_STMT
0006 V3 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0007 SEND_VAL_EX string("Array access is only supported within closures of lazy options and normalizers.") 1
0008 DO_FCALL
0009 THROW V3
0010 EXT_STMT
0011 T5 = FETCH_OBJ_R THIS string("defaults")
0012 T6 = ARRAY_KEY_EXISTS CV0($option) T5
0013 RETURN T6
0014 EXT_STMT
0015 RETURN null
LIVE RANGES:
     3: 0007 - 0009 (new)

Symfony\Component\OptionsResolver\OptionsResolver::offsetSet:
     ; (lines=9, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:1218-1221
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 CV1($value) = RECV 2
0002 EXT_STMT
0003 V2 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0004 SEND_VAL_EX string("Setting options via array access is not supported. Use setDefault() instead.") 1
0005 DO_FCALL
0006 THROW V2
0007 EXT_STMT
0008 RETURN null
LIVE RANGES:
     2: 0004 - 0006 (new)

Symfony\Component\OptionsResolver\OptionsResolver::offsetUnset:
     ; (lines=8, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:1230-1233
     ; return  [] RANGE[0..0]
0000 CV0($option) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0003 SEND_VAL_EX string("Removing options via array access is not supported. Use remove() instead.") 1
0004 DO_FCALL
0005 THROW V1
0006 EXT_STMT
0007 RETURN null
LIVE RANGES:
     1: 0003 - 0005 (new)

Symfony\Component\OptionsResolver\OptionsResolver::count:
     ; (lines=15, args=0, vars=0, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:1246-1253
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("locked")
0002 T1 = BOOL_NOT T0
0003 JMPZ T1 0009
0004 EXT_STMT
0005 V2 = NEW 1 string("Symfony\Component\OptionsResolver\Exception\AccessException")
0006 SEND_VAL_EX string("Counting is only supported within closures of lazy options and normalizers.") 1
0007 DO_FCALL
0008 THROW V2
0009 EXT_STMT
0010 T4 = FETCH_OBJ_R THIS string("defaults")
0011 T5 = COUNT T4
0012 RETURN T5
0013 EXT_STMT
0014 RETURN null
LIVE RANGES:
     2: 0006 - 0008 (new)

Symfony\Component\OptionsResolver\OptionsResolver::formatValue:
     ; (lines=48, args=1, vars=1, tmps=11)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:1264-1295
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 T1 = TYPE_CHECK (object) CV0($value)
0003 JMPZ T1 0008
0004 EXT_STMT
0005 T2 = GET_CLASS CV0($value)
0006 VERIFY_RETURN_TYPE T2
0007 RETURN T2
0008 EXT_STMT
0009 T3 = TYPE_CHECK (array) CV0($value)
0010 JMPZ T3 0013
0011 EXT_STMT
0012 RETURN string("array")
0013 EXT_STMT
0014 T4 = TYPE_CHECK (string) CV0($value)
0015 JMPZ T4 0021
0016 EXT_STMT
0017 T5 = CONCAT string(""") CV0($value)
0018 T6 = CONCAT T5 string(""")
0019 VERIFY_RETURN_TYPE T6
0020 RETURN T6
0021 EXT_STMT
0022 T7 = TYPE_CHECK (resource) CV0($value)
0023 JMPZ T7 0026
0024 EXT_STMT
0025 RETURN string("resource")
0026 EXT_STMT
0027 T8 = TYPE_CHECK (null) CV0($value)
0028 JMPZ T8 0031
0029 EXT_STMT
0030 RETURN string("null")
0031 EXT_STMT
0032 T9 = TYPE_CHECK (false) CV0($value)
0033 JMPZ T9 0036
0034 EXT_STMT
0035 RETURN string("false")
0036 EXT_STMT
0037 T10 = TYPE_CHECK (true) CV0($value)
0038 JMPZ T10 0041
0039 EXT_STMT
0040 RETURN string("true")
0041 EXT_STMT
0042 T11 = CAST (string) CV0($value)
0043 VERIFY_RETURN_TYPE T11
0044 RETURN T11
0045 EXT_STMT
0046 VERIFY_RETURN_TYPE
0047 RETURN null
LIVE RANGES:
     2: 0006 - 0007 (tmp/var)
     6: 0019 - 0020 (tmp/var)
     11: 0043 - 0044 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::formatValues:
     ; (lines=23, args=1, vars=3, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:1305-1312
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 EXT_STMT
0002 V3 = FE_RESET_R CV0($values) 0012
0003 T4 = FE_FETCH_R V3 CV1($value) 0012
0004 ASSIGN CV2($key) T4
0005 EXT_STMT
0006 INIT_METHOD_CALL 1 THIS string("formatValue")
0007 SEND_VAR CV1($value) 1
0008 V7 = DO_FCALL
0009 ASSIGN_DIM CV0($values) CV2($key)
0010 OP_DATA V7
0011 JMP 0003
0012 FE_FREE V3
0013 EXT_STMT
0014 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0015 SEND_VAL_EX string(", ") 1
0016 SEND_VAR_EX CV0($values) 2
0017 V8 = DO_FCALL
0018 VERIFY_RETURN_TYPE V8
0019 RETURN V8
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     3: 0003 - 0012 (loop)
     8: 0018 - 0019 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::formatOptions:
     ; (lines=59, args=1, vars=2, tmps=19)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:1314-1332
     ; return  [] RANGE[0..0]
0000 CV0($options) = RECV 1
0001 EXT_STMT
0002 T2 = FETCH_OBJ_R THIS string("parentsOptions")
0003 JMPZ T2 0049
0004 EXT_STMT
0005 INIT_NS_FCALL_BY_NAME 1 string("Symfony\Component\OptionsResolver\array_shift")
0006 CHECK_FUNC_ARG 1
0007 V3 = FETCH_OBJ_FUNC_ARG (ref) THIS string("parentsOptions")
0008 SEND_FUNC_ARG V3 1
0009 V4 = DO_FCALL
0010 ASSIGN CV1($prefix) V4
0011 EXT_STMT
0012 T6 = FETCH_OBJ_R THIS string("parentsOptions")
0013 JMPZ T6 0026
0014 EXT_STMT
0015 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\sprintf")
0016 SEND_VAL_EX string("[%s]") 1
0017 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0018 SEND_VAL_EX string("][") 1
0019 CHECK_FUNC_ARG 2
0020 V7 = FETCH_OBJ_FUNC_ARG (ref) THIS string("parentsOptions")
0021 SEND_FUNC_ARG V7 2
0022 V8 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V8 2
0024 V9 = DO_FCALL
0025 ASSIGN_OP (CONCAT) CV1($prefix) V9
0026 EXT_STMT
0027 T11 = FETCH_OBJ_R THIS string("prototype")
0028 T11 = JMPZ_EX T11 0032
0029 T12 = FETCH_OBJ_R THIS string("prototypeIndex")
0030 T13 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] T12
0031 T11 = BOOL T13
0032 JMPZ T11 0041
0033 EXT_STMT
0034 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\sprintf")
0035 SEND_VAL_EX string("[%s]") 1
0036 CHECK_FUNC_ARG 2
0037 V14 = FETCH_OBJ_FUNC_ARG (ref) THIS string("prototypeIndex")
0038 SEND_FUNC_ARG V14 2
0039 V15 = DO_FCALL
0040 ASSIGN_OP (CONCAT) CV1($prefix) V15
0041 EXT_STMT
0042 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\array_map")
0043 T17 = DECLARE_LAMBDA_FUNCTION string("")
0044 BIND_LEXICAL T17 CV1($prefix)
0045 SEND_VAL_EX T17 1
0046 SEND_VAR_EX CV0($options) 2
0047 V18 = DO_FCALL
0048 ASSIGN CV0($options) V18
0049 EXT_STMT
0050 INIT_NS_FCALL_BY_NAME 2 string("Symfony\Component\OptionsResolver\implode")
0051 SEND_VAL_EX string("", "") 1
0052 SEND_VAR_EX CV0($options) 2
0053 V20 = DO_FCALL
0054 VERIFY_RETURN_TYPE V20
0055 RETURN V20
0056 EXT_STMT
0057 VERIFY_RETURN_TYPE
0058 RETURN null
LIVE RANGES:
     17: 0044 - 0045 (tmp/var)
     20: 0054 - 0055 (tmp/var)

Symfony\Component\OptionsResolver\OptionsResolver::getParameterClassName:
     ; (lines=22, args=1, vars=2, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/OptionsResolver.php:1334-1341
     ; return  [] RANGE[0..0]
0000 CV0($parameter) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 CV0($parameter) string("getType")
0003 V2 = DO_FCALL
0004 T3 = ASSIGN CV1($type) V2
0005 T4 = INSTANCEOF T3 string("ReflectionNamedType")
0006 T5 = BOOL_NOT T4
0007 T5 = JMPNZ_EX T5 0011
0008 INIT_METHOD_CALL 0 CV1($type) string("isBuiltin")
0009 V6 = DO_FCALL
0010 T5 = BOOL V6
0011 JMPZ T5 0014
0012 EXT_STMT
0013 RETURN null
0014 EXT_STMT
0015 INIT_METHOD_CALL 0 CV1($type) string("getName")
0016 V7 = DO_FCALL
0017 VERIFY_RETURN_TYPE V7
0018 RETURN V7
0019 EXT_STMT
0020 VERIFY_RETURN_TYPE
0021 RETURN null
LIVE RANGES:
     7: 0017 - 0018 (tmp/var)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/options-resolver/Options.php:1-23
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 DECLARE_CLASS string("symfony\component\optionsresolver\options")
0002 RETURN int(1)

$_main:
     ; (lines=13, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/CoreExtension.php:1-126
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 EXT_STMT
0011 DECLARE_CLASS string("phpbench\extension\coreextension")
0012 RETURN int(1)

PhpBench\Extension\{closure}:
     ; (lines=30, args=1, vars=4, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/CoreExtension.php:84-93
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V4 = NEW 0 string("PhpBench\Console\Application")
0003 DO_FCALL
0004 ASSIGN CV1($application) V4
0005 EXT_STMT
0006 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Extension\array_keys")
0007 INIT_METHOD_CALL 1 CV0($container) string("getServiceIdsForTag")
0008 T7 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("TAG_CONSOLE_COMMAND")
0009 SEND_VAL_EX T7 1
0010 V8 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V8 1
0012 V9 = DO_FCALL
0013 V10 = FE_RESET_R V9 0025
0014 FE_FETCH_R V10 CV2($serviceId) 0025
0015 EXT_STMT
0016 INIT_METHOD_CALL 1 CV0($container) string("get")
0017 SEND_VAR_EX CV2($serviceId) 1
0018 V11 = DO_FCALL
0019 ASSIGN CV3($command) V11
0020 EXT_STMT
0021 INIT_METHOD_CALL 1 CV1($application) string("add")
0022 SEND_VAR_EX CV3($command) 1
0023 DO_FCALL
0024 JMP 0014
0025 FE_FREE V10
0026 EXT_STMT
0027 RETURN CV1($application)
0028 EXT_STMT
0029 RETURN null
LIVE RANGES:
     4: 0003 - 0004 (new)
     10: 0014 - 0025 (loop)

PhpBench\Extension\{closure}:
     ; (lines=17, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/CoreExtension.php:95-100
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 string("PhpBench\Logger\ConsoleLogger")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("SERVICE_OUTPUT_ERR")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0009 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_DEBUG")
0010 SEND_VAL_EX T4 1
0011 V5 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V5 2
0013 DO_FCALL
0014 RETURN V1
0015 EXT_STMT
0016 RETURN null
LIVE RANGES:
     1: 0003 - 0014 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/CoreExtension.php:102-104
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 string("PhpBench\Util\TimeUnit")
0003 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Util\TimeUnit") string("MICROSECONDS")
0004 SEND_VAL_EX T2 1
0005 T3 = FETCH_CLASS_CONSTANT string("PhpBench\Util\TimeUnit") string("MICROSECONDS")
0006 SEND_VAL_EX T3 2
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/CoreExtension.php:112-114
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Json\JsonDecoder")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/CoreExtension.php:119-123
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Console\Command\Handler\TimeUnitHandler")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Util\TimeUnit") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\CoreExtension::configure:
     ; (lines=74, args=1, vars=1, tmps=29)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/CoreExtension.php:38-80
     ; return  [] RANGE[0..0]
0000 CV0($resolver) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 CV0($resolver) string("setDefaults")
0003 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_SCHEMA")
0004 T2 = INIT_ARRAY 6 (packed) null T1
0005 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_DEBUG")
0006 T2 = ADD_ARRAY_ELEMENT bool(false) T3
0007 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_EXTENSIONS")
0008 T2 = ADD_ARRAY_ELEMENT array(...) T4
0009 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_WORKING_DIR")
0010 INIT_NS_FCALL_BY_NAME 0 string("PhpBench\Extension\getcwd")
0011 V6 = DO_FCALL
0012 T2 = ADD_ARRAY_ELEMENT V6 T5
0013 T7 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_CONFIG_PATH")
0014 T2 = ADD_ARRAY_ELEMENT null T7
0015 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROFILES")
0016 T2 = ADD_ARRAY_ELEMENT array(...) T8
0017 SEND_VAL_EX T2 1
0018 DO_FCALL
0019 EXT_STMT
0020 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0021 T10 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_SCHEMA")
0022 SEND_VAL_EX T10 1
0023 SEND_VAL_EX array(...) 2
0024 DO_FCALL
0025 EXT_STMT
0026 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0027 T12 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROFILES")
0028 SEND_VAL_EX T12 1
0029 SEND_VAL_EX array(...) 2
0030 DO_FCALL
0031 EXT_STMT
0032 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0033 T14 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_DEBUG")
0034 SEND_VAL_EX T14 1
0035 SEND_VAL_EX array(...) 2
0036 DO_FCALL
0037 EXT_STMT
0038 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0039 T16 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_CONFIG_PATH")
0040 SEND_VAL_EX T16 1
0041 SEND_VAL_EX array(...) 2
0042 DO_FCALL
0043 EXT_STMT
0044 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0045 T18 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_EXTENSIONS")
0046 SEND_VAL_EX T18 1
0047 SEND_VAL_EX array(...) 2
0048 DO_FCALL
0049 EXT_STMT
0050 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0051 T20 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_WORKING_DIR")
0052 SEND_VAL_EX T20 1
0053 SEND_VAL_EX array(...) 2
0054 DO_FCALL
0055 EXT_STMT
0056 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Compat\SymfonyOptionsResolverCompat") string("setInfos")
0057 SEND_VAR_EX CV0($resolver) 1
0058 T22 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROFILES")
0059 T23 = INIT_ARRAY 6 (packed) string("Alternative configurations::

    {
        "core.profiles": {
            "php8": {
                "runner.php_bin": "/bin/php8"
            }
        }
    }

The named configuration will be merged with the default configuration, and can be used via:

.. code-block:: bash

    $ phpbench run --profile=php8") T22
0060 T24 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_DEBUG")
0061 T23 = ADD_ARRAY_ELEMENT string("If enabled output debug messages (e.g. the commands being executed when running benchamrks). Same as ``-vvv``") T24
0062 T25 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_EXTENSIONS")
0063 T23 = ADD_ARRAY_ELEMENT string("List of additional extensions to enable") T25
0064 T26 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_CONFIG_PATH")
0065 T23 = ADD_ARRAY_ELEMENT string("Alternative path to a PHPBench configuration file (default is ``phpbench.json``") T26
0066 T27 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_WORKING_DIR")
0067 T23 = ADD_ARRAY_ELEMENT string("Working directory to use") T27
0068 T28 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_SCHEMA")
0069 T23 = ADD_ARRAY_ELEMENT string("JSON schema location, e.g. ``./vendor/phpbench/phpbench/phpbench.schema.json``") T28
0070 SEND_VAL_EX T23 2
0071 DO_FCALL
0072 EXT_STMT
0073 RETURN null
LIVE RANGES:
     2: 0005 - 0017 (tmp/var)
     5: 0010 - 0012 (tmp/var)
     23: 0060 - 0070 (tmp/var)

PhpBench\Extension\CoreExtension::load:
     ; (lines=29, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/CoreExtension.php:82-108
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Console\Application") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 INIT_METHOD_CALL 2 CV0($container) string("register")
0009 SEND_VAL_EX string("Psr\Log\LoggerInterface") 1
0010 T3 = DECLARE_LAMBDA_FUNCTION string("")
0011 SEND_VAL_EX T3 2
0012 DO_FCALL
0013 EXT_STMT
0014 INIT_METHOD_CALL 2 CV0($container) string("register")
0015 SEND_VAL_EX string("PhpBench\Util\TimeUnit") 1
0016 T5 = DECLARE_LAMBDA_FUNCTION string("")
0017 SEND_VAL_EX T5 2
0018 DO_FCALL
0019 EXT_STMT
0020 INIT_METHOD_CALL 1 THIS string("registerJson")
0021 SEND_VAR_EX CV0($container) 1
0022 DO_FCALL
0023 EXT_STMT
0024 INIT_METHOD_CALL 1 THIS string("registerCommands")
0025 SEND_VAR_EX CV0($container) 1
0026 DO_FCALL
0027 EXT_STMT
0028 RETURN null

PhpBench\Extension\CoreExtension::registerJson:
     ; (lines=9, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/CoreExtension.php:110-115
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Json\JsonDecoder") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 RETURN null

PhpBench\Extension\CoreExtension::registerCommands:
     ; (lines=9, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/CoreExtension.php:117-124
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Console\Command\Handler\TimeUnitHandler") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 RETURN null

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Compat/SymfonyOptionsResolverCompat.php:1-24
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 RETURN int(1)

PhpBench\Compat\SymfonyOptionsResolverCompat::setInfos:
     ; (lines=24, args=2, vars=4, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Compat/SymfonyOptionsResolverCompat.php:13-22
     ; return  [] RANGE[0..0]
0000 CV0($resolver) = RECV 1
0001 CV1($infoMap) = RECV 2
0002 EXT_STMT
0003 INIT_FCALL 2 112 string("method_exists")
0004 SEND_VAR CV0($resolver) 1
0005 SEND_VAL string("setInfo") 2
0006 V4 = DO_FCALL
0007 T5 = BOOL_NOT V4
0008 JMPZ T5 0011
0009 EXT_STMT
0010 RETURN null
0011 EXT_STMT
0012 V6 = FE_RESET_R CV1($infoMap) 0021
0013 T7 = FE_FETCH_R V6 CV2($help) 0021
0014 ASSIGN CV3($option) T7
0015 EXT_STMT
0016 INIT_METHOD_CALL 2 CV0($resolver) string("setInfo")
0017 SEND_VAR_EX CV3($option) 1
0018 SEND_VAR_EX CV2($help) 2
0019 DO_FCALL
0020 JMP 0013
0021 FE_FREE V6
0022 EXT_STMT
0023 RETURN null
LIVE RANGES:
     6: 0013 - 0021 (loop)

$_main:
     ; (lines=61, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:1-662
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 NOP
0012 NOP
0013 NOP
0014 NOP
0015 NOP
0016 NOP
0017 NOP
0018 NOP
0019 NOP
0020 NOP
0021 NOP
0022 NOP
0023 NOP
0024 NOP
0025 NOP
0026 NOP
0027 NOP
0028 NOP
0029 NOP
0030 NOP
0031 NOP
0032 NOP
0033 NOP
0034 NOP
0035 NOP
0036 NOP
0037 NOP
0038 NOP
0039 NOP
0040 NOP
0041 NOP
0042 NOP
0043 NOP
0044 NOP
0045 NOP
0046 NOP
0047 NOP
0048 NOP
0049 NOP
0050 NOP
0051 NOP
0052 NOP
0053 NOP
0054 NOP
0055 NOP
0056 NOP
0057 NOP
0058 EXT_STMT
0059 DECLARE_CLASS string("phpbench\extension\runnerextension")
0060 RETURN int(1)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:237-239
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Environment\Provider\Uname")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:243-247
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Environment\Provider\Php")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Remote\Launcher") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:251-255
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Environment\Provider\Opcache")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Remote\Launcher") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:259-261
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Environment\Provider\UnixSysload")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=12, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:265-267
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Environment\Provider\Git")
0003 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0004 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\CoreExtension") string("PARAM_WORKING_DIR")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 DO_FCALL
0009 RETURN V1
0010 EXT_STMT
0011 RETURN null
LIVE RANGES:
     1: 0003 - 0009 (new)

PhpBench\Extension\{closure}:
     ; (lines=16, args=1, vars=1, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:271-276
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 string("PhpBench\Environment\Provider\Sampler")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Benchmark\SamplerManager") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0008 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ENV_SAMPLERS")
0009 SEND_VAL_EX T3 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 DO_FCALL
0013 RETURN V1
0014 EXT_STMT
0015 RETURN null
LIVE RANGES:
     1: 0003 - 0013 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:280-282
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Environment\Provider\TestProvider")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=58, args=1, vars=6, tmps=22)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:286-306
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V6 = NEW 0 string("PhpBench\Environment\Supplier")
0003 DO_FCALL
0004 ASSIGN CV1($supplier) V6
0005 EXT_STMT
0006 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0007 T9 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ENABLED_PROVIDERS")
0008 SEND_VAL_EX T9 1
0009 V10 = DO_FCALL
0010 ASSIGN CV2($enabledProviders) V10
0011 EXT_STMT
0012 INIT_METHOD_CALL 1 CV0($container) string("getServiceIdsForTag")
0013 T12 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_ENV_PROVIDER")
0014 SEND_VAL_EX T12 1
0015 V13 = DO_FCALL
0016 V14 = FE_RESET_R V13 0053
0017 T15 = FE_FETCH_R V14 CV3($attributes) 0053
0018 ASSIGN CV4($serviceId) T15
0019 EXT_STMT
0020 T17 = ISSET_ISEMPTY_DIM_OBJ (isset) CV3($attributes) string("name")
0021 T18 = BOOL_NOT T17
0022 JMPZ T18 0032
0023 EXT_STMT
0024 V19 = NEW 1 string("RuntimeException")
0025 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Extension\sprintf")
0026 SEND_VAL_EX string("Env provider "%s" has no `name` attribute") 1
0027 SEND_VAR_EX CV4($serviceId) 2
0028 V20 = DO_FCALL
0029 SEND_VAR_NO_REF_EX V20 1
0030 DO_FCALL
0031 THROW V19
0032 EXT_STMT
0033 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Extension\in_array")
0034 CHECK_FUNC_ARG 1
0035 V22 = FETCH_DIM_FUNC_ARG CV3($attributes) string("name")
0036 SEND_FUNC_ARG V22 1
0037 SEND_VAR_EX CV2($enabledProviders) 2
0038 V23 = DO_FCALL
0039 T24 = BOOL_NOT V23
0040 JMPZ T24 0043
0041 EXT_STMT
0042 JMP 0017
0043 EXT_STMT
0044 INIT_METHOD_CALL 1 CV0($container) string("get")
0045 SEND_VAR_EX CV4($serviceId) 1
0046 V25 = DO_FCALL
0047 ASSIGN CV5($provider) V25
0048 EXT_STMT
0049 INIT_METHOD_CALL 1 CV1($supplier) string("addProvider")
0050 SEND_VAR_EX CV5($provider) 1
0051 DO_FCALL
0052 JMP 0017
0053 FE_FREE V14
0054 EXT_STMT
0055 RETURN CV1($supplier)
0056 EXT_STMT
0057 RETURN null
LIVE RANGES:
     6: 0003 - 0004 (new)
     14: 0017 - 0053 (loop)
     19: 0025 - 0031 (new)

PhpBench\Extension\{closure}:
     ; (lines=30, args=1, vars=1, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:311-319
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 5 string("PhpBench\Benchmark\Runner")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_REGISTRY_EXECUTOR")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Environment\Supplier") 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Assertion\AssertionProcessor") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0017 T6 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_RETRY_THRESHOLD")
0018 SEND_VAL_EX T6 1
0019 V7 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V7 4
0021 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0022 T8 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\CoreExtension") string("PARAM_CONFIG_PATH")
0023 SEND_VAL_EX T8 1
0024 V9 = DO_FCALL
0025 SEND_VAR_NO_REF_EX V9 5
0026 DO_FCALL
0027 RETURN V1
0028 EXT_STMT
0029 RETURN null
LIVE RANGES:
     1: 0003 - 0027 (new)

PhpBench\Extension\{closure}:
     ; (lines=18, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:321-326
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 string("PhpBench\Executor\CompositeExecutor")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Executor\Benchmark\RemoteExecutor") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 V3 = NEW 1 string("PhpBench\Executor\Method\ErrorHandlingExecutorDecorator")
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Executor\Method\RemoteMethodExecutor") 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 1
0012 DO_FCALL
0013 SEND_VAR_NO_REF_EX V3 2
0014 DO_FCALL
0015 RETURN V1
0016 EXT_STMT
0017 RETURN null
LIVE RANGES:
     1: 0003 - 0015 (new)
     3: 0008 - 0013 (new)

PhpBench\Extension\{closure}:
     ; (lines=18, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:328-333
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 string("PhpBench\Executor\CompositeExecutor")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Executor\Benchmark\LocalExecutor") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 V3 = NEW 1 string("PhpBench\Executor\Method\ErrorHandlingExecutorDecorator")
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Executor\Method\LocalMethodExecutor") 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 1
0012 DO_FCALL
0013 SEND_VAR_NO_REF_EX V3 2
0014 DO_FCALL
0015 RETURN V1
0016 EXT_STMT
0017 RETURN null
LIVE RANGES:
     1: 0003 - 0015 (new)
     3: 0008 - 0013 (new)

PhpBench\Extension\{closure}:
     ; (lines=18, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:335-340
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 string("PhpBench\Executor\CompositeExecutor")
0003 V2 = NEW 1 string("PhpBench\Executor\Benchmark\MemoryCentricMicrotimeExecutor")
0004 INIT_METHOD_CALL 1 CV0($container) string("get")
0005 SEND_VAL_EX string("PhpBench\Remote\Launcher") 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 DO_FCALL
0009 SEND_VAR_NO_REF_EX V2 1
0010 INIT_METHOD_CALL 1 CV0($container) string("get")
0011 SEND_VAL_EX string("PhpBench\Executor\Method\RemoteMethodExecutor") 1
0012 V5 = DO_FCALL
0013 SEND_VAR_NO_REF_EX V5 2
0014 DO_FCALL
0015 RETURN V1
0016 EXT_STMT
0017 RETURN null
LIVE RANGES:
     1: 0003 - 0015 (new)
     2: 0004 - 0009 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:342-346
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Executor\Benchmark\RemoteExecutor")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Remote\Launcher") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=12, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:348-352
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Executor\Benchmark\LocalExecutor")
0003 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0004 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_BOOTSTRAP")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 DO_FCALL
0009 RETURN V1
0010 EXT_STMT
0011 RETURN null
LIVE RANGES:
     1: 0003 - 0009 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:354-358
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Executor\Method\RemoteMethodExecutor")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Remote\Launcher") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:360-362
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Executor\Method\LocalMethodExecutor")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:364-366
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Executor\Benchmark\DebugExecutor")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=14, args=1, vars=1, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:370-375
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 string("PhpBench\Executor\Benchmark\OpcodeExecutor")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Remote\Launcher") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 V3 = NEW 0 string("PhpBench\Opcache\OpcodeDebugParser")
0008 DO_FCALL
0009 SEND_VAR_NO_REF_EX V3 2
0010 DO_FCALL
0011 RETURN V1
0012 EXT_STMT
0013 RETURN null
LIVE RANGES:
     1: 0003 - 0011 (new)
     3: 0008 - 0009 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:379-381
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("Symfony\Component\Finder\Finder")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:383-385
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Remote\ProcessFactory")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("Psr\Log\LoggerInterface") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=100, args=1, vars=1, tmps=39)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:387-404
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 7 string("PhpBench\Remote\Launcher")
0003 V2 = NEW 3 string("PhpBench\Remote\PayloadFactory")
0004 INIT_METHOD_CALL 1 CV0($container) string("get")
0005 SEND_VAL_EX string("PhpBench\Remote\ProcessFactory") 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0009 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_REMOTE_SCRIPT_PATH")
0010 SEND_VAL_EX T4 1
0011 V5 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V5 2
0013 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0014 T6 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_REMOTE_SCRIPT_REMOVE")
0015 SEND_VAL_EX T6 1
0016 V7 = DO_FCALL
0017 SEND_VAR_NO_REF_EX V7 3
0018 DO_FCALL
0019 SEND_VAR_NO_REF_EX V2 1
0020 V9 = NEW 0 string("Symfony\Component\Process\ExecutableFinder")
0021 DO_FCALL
0022 SEND_VAR_NO_REF_EX V9 2
0023 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0024 T11 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_BOOTSTRAP")
0025 SEND_VAL_EX T11 1
0026 V12 = DO_FCALL
0027 JMPZ V12 0042
0028 INIT_STATIC_METHOD_CALL 2 string("Webmozart\PathUtil\Path") string("makeAbsolute")
0029 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0030 T13 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_BOOTSTRAP")
0031 SEND_VAL_EX T13 1
0032 V14 = DO_FCALL
0033 SEND_VAR_NO_REF_EX V14 1
0034 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0035 T15 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\CoreExtension") string("PARAM_WORKING_DIR")
0036 SEND_VAL_EX T15 1
0037 V16 = DO_FCALL
0038 SEND_VAR_NO_REF_EX V16 2
0039 V17 = DO_FCALL
0040 T18 = QM_ASSIGN V17
0041 JMP 0043
0042 T18 = QM_ASSIGN null
0043 SEND_VAL_EX T18 3
0044 INIT_METHOD_CALL 1 CV0($container) string("hasParameter")
0045 T19 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_BINARY")
0046 SEND_VAL_EX T19 1
0047 V20 = DO_FCALL
0048 JMPZ V20 0055
0049 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0050 T21 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_BINARY")
0051 SEND_VAL_EX T21 1
0052 V22 = DO_FCALL
0053 T23 = QM_ASSIGN V22
0054 JMP 0056
0055 T23 = QM_ASSIGN null
0056 SEND_VAL_EX T23 4
0057 INIT_METHOD_CALL 1 CV0($container) string("hasParameter")
0058 T24 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_CONFIG")
0059 SEND_VAL_EX T24 1
0060 V25 = DO_FCALL
0061 JMPZ V25 0068
0062 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0063 T26 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_CONFIG")
0064 SEND_VAL_EX T26 1
0065 V27 = DO_FCALL
0066 T28 = QM_ASSIGN V27
0067 JMP 0069
0068 T28 = QM_ASSIGN null
0069 SEND_VAL_EX T28 5
0070 INIT_METHOD_CALL 1 CV0($container) string("hasParameter")
0071 T29 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_WRAPPER")
0072 SEND_VAL_EX T29 1
0073 V30 = DO_FCALL
0074 JMPZ V30 0081
0075 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0076 T31 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_WRAPPER")
0077 SEND_VAL_EX T31 1
0078 V32 = DO_FCALL
0079 T33 = QM_ASSIGN V32
0080 JMP 0082
0081 T33 = QM_ASSIGN null
0082 SEND_VAL_EX T33 6
0083 INIT_METHOD_CALL 1 CV0($container) string("hasParameter")
0084 T34 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_DISABLE_INI")
0085 SEND_VAL_EX T34 1
0086 V35 = DO_FCALL
0087 JMPZ V35 0094
0088 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0089 T36 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_DISABLE_INI")
0090 SEND_VAL_EX T36 1
0091 V37 = DO_FCALL
0092 T38 = QM_ASSIGN V37
0093 JMP 0095
0094 T38 = QM_ASSIGN bool(false)
0095 SEND_VAL_EX T38 7
0096 DO_FCALL
0097 RETURN V1
0098 EXT_STMT
0099 RETURN null
LIVE RANGES:
     1: 0003 - 0097 (new)
     2: 0004 - 0019 (new)
     9: 0021 - 0022 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:406-408
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Reflection\RemoteReflector")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Remote\Launcher") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=30, args=1, vars=1, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:413-421
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 5 string("PhpBench\Console\Command\Handler\RunnerHandler")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Benchmark\Runner") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_REGISTRY_LOGGER")
0009 SEND_VAL_EX T3 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Benchmark\BenchmarkFinder") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0017 T6 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROGRESS")
0018 SEND_VAL_EX T6 1
0019 V7 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V7 4
0021 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0022 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PATH")
0023 SEND_VAL_EX T8 1
0024 V9 = DO_FCALL
0025 SEND_VAR_NO_REF_EX V9 5
0026 DO_FCALL
0027 RETURN V1
0028 EXT_STMT
0029 RETURN null
LIVE RANGES:
     1: 0003 - 0027 (new)

PhpBench\Extension\{closure}:
     ; (lines=32, args=1, vars=1, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:423-432
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 6 string("PhpBench\Console\Command\RunCommand")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Console\Command\Handler\RunnerHandler") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 SEND_VAL_EX string("PhpBench\Console\Command\Handler\ReportHandler") 1
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 2
0011 INIT_METHOD_CALL 1 CV0($container) string("get")
0012 SEND_VAL_EX string("PhpBench\Console\Command\Handler\SuiteCollectionHandler") 1
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 3
0015 INIT_METHOD_CALL 1 CV0($container) string("get")
0016 SEND_VAL_EX string("PhpBench\Console\Command\Handler\TimeUnitHandler") 1
0017 V5 = DO_FCALL
0018 SEND_VAR_NO_REF_EX V5 4
0019 INIT_METHOD_CALL 1 CV0($container) string("get")
0020 SEND_VAL_EX string("PhpBench\Console\Command\Handler\DumpHandler") 1
0021 V6 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V6 5
0023 INIT_METHOD_CALL 1 CV0($container) string("get")
0024 T7 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\StorageExtension") string("SERVICE_REGISTRY_DRIVER")
0025 SEND_VAL_EX T7 1
0026 V8 = DO_FCALL
0027 SEND_VAR_NO_REF_EX V8 6
0028 DO_FCALL
0029 RETURN V1
0030 EXT_STMT
0031 RETURN null
LIVE RANGES:
     1: 0003 - 0029 (new)

PhpBench\Extension\{closure}:
     ; (lines=29, args=1, vars=1, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:439-447
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 5 string("PhpBench\Progress\VariantSummaryFormatter")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Expression\ExpressionLanguage") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 SEND_VAL_EX string("PhpBench\Expression\Printer\EvaluatingPrinter") 1
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 2
0011 INIT_METHOD_CALL 1 CV0($container) string("get")
0012 SEND_VAL_EX string("PhpBench\Assertion\ParameterProvider") 1
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 3
0015 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0016 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROGRESS_SUMMARY_FORMAT")
0017 SEND_VAL_EX T5 1
0018 V6 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V6 4
0020 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0021 T7 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROGRESS_SUMMARY_BASELINE_FORMAT")
0022 SEND_VAL_EX T7 1
0023 V8 = DO_FCALL
0024 SEND_VAR_NO_REF_EX V8 5
0025 DO_FCALL
0026 RETURN V1
0027 EXT_STMT
0028 RETURN null
LIVE RANGES:
     1: 0003 - 0026 (new)

PhpBench\Extension\{closure}:
     ; (lines=29, args=1, vars=4, tmps=11)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:448-459
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V4 = NEW 0 string("PhpBench\Progress\LoggerRegistry")
0003 DO_FCALL
0004 ASSIGN CV1($registry) V4
0005 EXT_STMT
0006 INIT_METHOD_CALL 1 CV0($container) string("getServiceIdsForTag")
0007 T7 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_PROGRESS_LOGGER")
0008 SEND_VAL_EX T7 1
0009 V8 = DO_FCALL
0010 V9 = FE_RESET_R V8 0024
0011 T10 = FE_FETCH_R V9 CV2($attributes) 0024
0012 ASSIGN CV3($serviceId) T10
0013 EXT_STMT
0014 INIT_METHOD_CALL 2 CV1($registry) string("addProgressLogger")
0015 CHECK_FUNC_ARG 1
0016 V12 = FETCH_DIM_FUNC_ARG CV2($attributes) string("name")
0017 SEND_FUNC_ARG V12 1
0018 INIT_METHOD_CALL 1 CV0($container) string("get")
0019 SEND_VAR_EX CV3($serviceId) 1
0020 V13 = DO_FCALL
0021 SEND_VAR_NO_REF_EX V13 2
0022 DO_FCALL
0023 JMP 0011
0024 FE_FREE V9
0025 EXT_STMT
0026 RETURN CV1($registry)
0027 EXT_STMT
0028 RETURN null
LIVE RANGES:
     4: 0003 - 0004 (new)
     9: 0011 - 0024 (loop)

PhpBench\Extension\{closure}:
     ; (lines=20, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:461-467
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Progress\Logger\DotsLogger")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("SERVICE_OUTPUT_ERR")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Progress\VariantFormatter") 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Util\TimeUnit") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 DO_FCALL
0017 RETURN V1
0018 EXT_STMT
0019 RETURN null
LIVE RANGES:
     1: 0003 - 0017 (new)

PhpBench\Extension\{closure}:
     ; (lines=21, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:469-476
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 4 string("PhpBench\Progress\Logger\DotsLogger")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("SERVICE_OUTPUT_ERR")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Progress\VariantFormatter") 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Util\TimeUnit") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 SEND_VAL_EX bool(true) 4
0017 DO_FCALL
0018 RETURN V1
0019 EXT_STMT
0020 RETURN null
LIVE RANGES:
     1: 0003 - 0018 (new)

PhpBench\Extension\{closure}:
     ; (lines=20, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:478-484
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Progress\Logger\VerboseLogger")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("SERVICE_OUTPUT_ERR")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Progress\VariantFormatter") 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Util\TimeUnit") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 DO_FCALL
0017 RETURN V1
0018 EXT_STMT
0019 RETURN null
LIVE RANGES:
     1: 0003 - 0017 (new)

PhpBench\Extension\{closure}:
     ; (lines=20, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:486-492
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Progress\Logger\PlainLogger")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("SERVICE_OUTPUT_ERR")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Progress\VariantFormatter") 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Util\TimeUnit") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 DO_FCALL
0017 RETURN V1
0018 EXT_STMT
0019 RETURN null
LIVE RANGES:
     1: 0003 - 0017 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:494-496
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Progress\Logger\NullLogger")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=20, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:498-504
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Progress\Logger\BlinkenLogger")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("SERVICE_OUTPUT_ERR")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Progress\VariantFormatter") 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Util\TimeUnit") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 DO_FCALL
0017 RETURN V1
0018 EXT_STMT
0019 RETURN null
LIVE RANGES:
     1: 0003 - 0017 (new)

PhpBench\Extension\{closure}:
     ; (lines=20, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:506-512
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Progress\Logger\HistogramLogger")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("SERVICE_OUTPUT_ERR")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Progress\VariantFormatter") 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Util\TimeUnit") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 DO_FCALL
0017 RETURN V1
0018 EXT_STMT
0019 RETURN null
LIVE RANGES:
     1: 0003 - 0017 (new)

PhpBench\Extension\{closure}:
     ; (lines=25, args=1, vars=2, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:524-533
     ; return  [] RANGE[0..0]
0000 CV0($path) = RECV 1
0001 BIND_STATIC CV1($container)
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 1 string("Webmozart\PathUtil\Path") string("isAbsolute")
0004 SEND_VAR_EX CV0($path) 1
0005 V2 = DO_FCALL
0006 JMPZ V2 0009
0007 EXT_STMT
0008 RETURN CV0($path)
0009 EXT_STMT
0010 INIT_STATIC_METHOD_CALL 1 string("Webmozart\PathUtil\Path") string("join")
0011 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Extension\dirname")
0012 INIT_METHOD_CALL 1 CV1($container) string("getParameter")
0013 T3 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\CoreExtension") string("PARAM_CONFIG_PATH")
0014 SEND_VAL_EX T3 1
0015 V4 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V4 1
0017 V5 = DO_FCALL
0018 T6 = INIT_ARRAY 2 (packed) V5 NEXT
0019 T6 = ADD_ARRAY_ELEMENT CV0($path) NEXT
0020 SEND_VAL_EX T6 1
0021 V7 = DO_FCALL
0022 RETURN V7
0023 EXT_STMT
0024 RETURN null
LIVE RANGES:
     6: 0019 - 0020 (tmp/var)

PhpBench\Extension\{closure}:
     ; (lines=54, args=1, vars=7, tmps=20)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:538-559
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V7 = NEW 3 string("PhpBench\Registry\ConfigurableRegistry")
0003 SEND_VAL_EX string("executor") 1
0004 SEND_VAR_EX CV0($container) 2
0005 INIT_METHOD_CALL 1 CV0($container) string("get")
0006 SEND_VAL_EX string("PhpBench\Json\JsonDecoder") 1
0007 V8 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V8 3
0009 DO_FCALL
0010 ASSIGN CV1($registry) V7
0011 EXT_STMT
0012 INIT_METHOD_CALL 1 CV0($container) string("getServiceIdsForTag")
0013 T11 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_EXECUTOR")
0014 SEND_VAL_EX T11 1
0015 V12 = DO_FCALL
0016 V13 = FE_RESET_R V12 0027
0017 T14 = FE_FETCH_R V13 CV2($attributes) 0027
0018 ASSIGN CV3($serviceId) T14
0019 EXT_STMT
0020 INIT_METHOD_CALL 2 CV1($registry) string("registerService")
0021 CHECK_FUNC_ARG 1
0022 V16 = FETCH_DIM_FUNC_ARG CV2($attributes) string("name")
0023 SEND_FUNC_ARG V16 1
0024 SEND_VAR_EX CV3($serviceId) 2
0025 DO_FCALL
0026 JMP 0017
0027 FE_FREE V13
0028 EXT_STMT
0029 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Extension\array_merge")
0030 V18 = INCLUDE_OR_EVAL (require) string("/home/daniel/www/phpbench/phpbench/lib/Extension/config/benchmark/executors.php")
0031 SEND_VAR_NO_REF_EX V18 1
0032 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0033 T19 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_EXECUTORS")
0034 SEND_VAL_EX T19 1
0035 V20 = DO_FCALL
0036 SEND_VAR_NO_REF_EX V20 2
0037 V21 = DO_FCALL
0038 ASSIGN CV4($executorConfigs) V21
0039 EXT_STMT
0040 V23 = FE_RESET_R CV4($executorConfigs) 0049
0041 T24 = FE_FETCH_R V23 CV5($config) 0049
0042 ASSIGN CV6($name) T24
0043 EXT_STMT
0044 INIT_METHOD_CALL 2 CV1($registry) string("setConfig")
0045 SEND_VAR_EX CV6($name) 1
0046 SEND_VAR_EX CV5($config) 2
0047 DO_FCALL
0048 JMP 0041
0049 FE_FREE V23
0050 EXT_STMT
0051 RETURN CV1($registry)
0052 EXT_STMT
0053 RETURN null
LIVE RANGES:
     7: 0003 - 0010 (new)
     13: 0017 - 0027 (loop)
     23: 0041 - 0049 (loop)

PhpBench\Extension\{closure}:
     ; (lines=12, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:564-566
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Benchmark\Metadata\AnnotationReader")
0003 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0004 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ANNOTATION_IMPORT_USE")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 DO_FCALL
0009 RETURN V1
0010 EXT_STMT
0011 RETURN null
LIVE RANGES:
     1: 0003 - 0009 (new)

PhpBench\Extension\{closure}:
     ; (lines=20, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:568-574
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Benchmark\Metadata\Driver\AnnotationDriver")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Reflection\RemoteReflector") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0008 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_SUBJECT_PATTERN")
0009 SEND_VAL_EX T3 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Benchmark\Metadata\AnnotationReader") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 DO_FCALL
0017 RETURN V1
0018 EXT_STMT
0019 RETURN null
LIVE RANGES:
     1: 0003 - 0017 (new)

PhpBench\Extension\{closure}:
     ; (lines=12, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:576-580
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Benchmark\Metadata\Driver\AttributeDriver")
0003 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0004 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_SUBJECT_PATTERN")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 DO_FCALL
0009 RETURN V1
0010 EXT_STMT
0011 RETURN null
LIVE RANGES:
     1: 0003 - 0009 (new)

PhpBench\Extension\{closure}:
     ; (lines=34, args=1, vars=2, tmps=11)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:582-594
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 ASSIGN CV1($drivers) array(...)
0003 EXT_STMT
0004 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0005 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ANNOTATIONS")
0006 SEND_VAL_EX T3 1
0007 V4 = DO_FCALL
0008 JMPZ V4 0015
0009 EXT_STMT
0010 INIT_METHOD_CALL 1 CV0($container) string("get")
0011 SEND_VAL_EX string("PhpBench\Benchmark\Metadata\Driver\AnnotationDriver") 1
0012 V6 = DO_FCALL
0013 ASSIGN_DIM CV1($drivers) NEXT
0014 OP_DATA V6
0015 EXT_STMT
0016 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0017 T7 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ATTRIBUTES")
0018 SEND_VAL_EX T7 1
0019 V8 = DO_FCALL
0020 JMPZ V8 0027
0021 EXT_STMT
0022 INIT_METHOD_CALL 1 CV0($container) string("get")
0023 SEND_VAL_EX string("PhpBench\Benchmark\Metadata\Driver\AttributeDriver") 1
0024 V10 = DO_FCALL
0025 ASSIGN_DIM CV1($drivers) NEXT
0026 OP_DATA V10
0027 EXT_STMT
0028 V11 = NEW 1 string("PhpBench\Benchmark\Metadata\Driver\ChainDriver")
0029 SEND_VAR_EX CV1($drivers) 1
0030 DO_FCALL
0031 RETURN V11
0032 EXT_STMT
0033 RETURN null
LIVE RANGES:
     11: 0029 - 0031 (new)

PhpBench\Extension\{closure}:
     ; (lines=19, args=1, vars=1, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:596-602
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Benchmark\Metadata\MetadataFactory")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Reflection\RemoteReflector") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 SEND_VAL_EX string("PhpBench\Benchmark\Metadata\Driver\ConfigDriver") 1
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 2
0011 INIT_METHOD_CALL 1 CV0($container) string("get")
0012 SEND_VAL_EX string("Psr\Log\LoggerInterface") 1
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 3
0015 DO_FCALL
0016 RETURN V1
0017 EXT_STMT
0018 RETURN null
LIVE RANGES:
     1: 0003 - 0016 (new)

PhpBench\Extension\{closure}:
     ; (lines=66, args=1, vars=1, tmps=28)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:604-618
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 11 string("PhpBench\Benchmark\Metadata\Driver\ConfigDriver")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Benchmark\Metadata\Driver\ChainDriver") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0008 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_ASSERT")
0009 SEND_VAL_EX T3 1
0010 V4 = DO_FCALL
0011 T5 = CAST (array) V4
0012 SEND_VAL_EX T5 2
0013 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0014 T6 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_EXECUTOR")
0015 SEND_VAL_EX T6 1
0016 V7 = DO_FCALL
0017 SEND_VAR_NO_REF_EX V7 3
0018 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0019 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_FORMAT")
0020 SEND_VAL_EX T8 1
0021 V9 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V9 4
0023 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0024 T10 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_ITERATIONS")
0025 SEND_VAL_EX T10 1
0026 V11 = DO_FCALL
0027 T12 = CAST (array) V11
0028 SEND_VAL_EX T12 5
0029 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0030 T13 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_OUTPUT_MODE")
0031 SEND_VAL_EX T13 1
0032 V14 = DO_FCALL
0033 SEND_VAR_NO_REF_EX V14 6
0034 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0035 T15 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_OUTPUT_TIME_UNIT")
0036 SEND_VAL_EX T15 1
0037 V16 = DO_FCALL
0038 SEND_VAR_NO_REF_EX V16 7
0039 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0040 T17 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_REVS")
0041 SEND_VAL_EX T17 1
0042 V18 = DO_FCALL
0043 T19 = CAST (array) V18
0044 SEND_VAL_EX T19 8
0045 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0046 T20 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_TIMEOUT")
0047 SEND_VAL_EX T20 1
0048 V21 = DO_FCALL
0049 SEND_VAR_NO_REF_EX V21 9
0050 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0051 T22 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_WARMUP")
0052 SEND_VAL_EX T22 1
0053 V23 = DO_FCALL
0054 T24 = CAST (array) V23
0055 SEND_VAL_EX T24 10
0056 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0057 T25 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_RETRY_THRESHOLD")
0058 SEND_VAL_EX T25 1
0059 V26 = DO_FCALL
0060 T27 = CAST (double) V26
0061 SEND_VAL_EX T27 11
0062 DO_FCALL
0063 RETURN V1
0064 EXT_STMT
0065 RETURN null
LIVE RANGES:
     1: 0003 - 0063 (new)

PhpBench\Extension\{closure}:
     ; (lines=24, args=1, vars=1, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:620-627
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 4 string("PhpBench\Benchmark\BenchmarkFinder")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Benchmark\Metadata\MetadataFactory") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0008 T3 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\CoreExtension") string("PARAM_WORKING_DIR")
0009 SEND_VAL_EX T3 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("Psr\Log\LoggerInterface") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0017 SEND_VAL_EX string("runner.file_pattern") 1
0018 V6 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V6 4
0020 DO_FCALL
0021 RETURN V1
0022 EXT_STMT
0023 RETURN null
LIVE RANGES:
     1: 0003 - 0021 (new)

PhpBench\Extension\{closure}:
     ; (lines=30, args=1, vars=5, tmps=11)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:629-642
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V5 = NEW 0 string("PhpBench\Benchmark\SamplerManager")
0003 DO_FCALL
0004 ASSIGN CV1($manager) V5
0005 EXT_STMT
0006 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Extension\array_merge")
0007 SEND_VAL_EX array(...) 1
0008 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0009 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ENV_SAMPLER_CALLABLES")
0010 SEND_VAL_EX T8 1
0011 V9 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V9 2
0013 V10 = DO_FCALL
0014 ASSIGN CV2($callables) V10
0015 EXT_STMT
0016 V12 = FE_RESET_R CV2($callables) 0025
0017 T13 = FE_FETCH_R V12 CV3($callable) 0025
0018 ASSIGN CV4($name) T13
0019 EXT_STMT
0020 INIT_METHOD_CALL 2 CV1($manager) string("addSamplerCallable")
0021 SEND_VAR_EX CV4($name) 1
0022 SEND_VAR_EX CV3($callable) 2
0023 DO_FCALL
0024 JMP 0017
0025 FE_FREE V12
0026 EXT_STMT
0027 RETURN CV1($manager)
0028 EXT_STMT
0029 RETURN null
LIVE RANGES:
     5: 0003 - 0004 (new)
     12: 0017 - 0025 (loop)

PhpBench\Extension\{closure}:
     ; (lines=27, args=1, vars=1, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:647-655
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 5 string("PhpBench\Assertion\AssertionProcessor")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Expression\ExpressionLanguage") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 SEND_VAL_EX string("PhpBench\Expression\Evaluator") 1
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 2
0011 INIT_METHOD_CALL 1 CV0($container) string("get")
0012 SEND_VAL_EX string("PhpBench\Expression\Printer") 1
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 3
0015 INIT_METHOD_CALL 1 CV0($container) string("get")
0016 SEND_VAL_EX string("PhpBench\Expression\Printer\EvaluatingPrinter") 1
0017 V5 = DO_FCALL
0018 SEND_VAR_NO_REF_EX V5 4
0019 INIT_METHOD_CALL 1 CV0($container) string("get")
0020 SEND_VAL_EX string("PhpBench\Assertion\ParameterProvider") 1
0021 V6 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V6 5
0023 DO_FCALL
0024 RETURN V1
0025 EXT_STMT
0026 RETURN null
LIVE RANGES:
     1: 0003 - 0024 (new)

PhpBench\Extension\{closure}:
     ; (lines=6, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:657-659
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 0 string("PhpBench\Assertion\ParameterProvider")
0002 DO_FCALL
0003 RETURN V0
0004 EXT_STMT
0005 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (new)

PhpBench\Extension\RunnerExtension::configure:
     ; (lines=326, args=1, vars=1, tmps=133)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:113-218
     ; return  [] RANGE[0..0]
0000 CV0($resolver) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 CV0($resolver) string("setDefaults")
0003 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ANNOTATIONS")
0004 T2 = INIT_ARRAY 30 (packed) bool(true) T1
0005 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ANNOTATION_IMPORT_USE")
0006 T2 = ADD_ARRAY_ELEMENT bool(false) T3
0007 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ATTRIBUTES")
0008 T2 = ADD_ARRAY_ELEMENT bool(true) T4
0009 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_BOOTSTRAP")
0010 T2 = ADD_ARRAY_ELEMENT null T5
0011 T6 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ENABLED_PROVIDERS")
0012 T7 = FETCH_CLASS_CONSTANT (self) (exception) string("ENV_PROVIDER_SAMPLER")
0013 T8 = INIT_ARRAY 6 (packed) T7 NEXT
0014 T9 = FETCH_CLASS_CONSTANT (self) (exception) string("ENV_PROVIDER_GIT")
0015 T8 = ADD_ARRAY_ELEMENT T9 NEXT
0016 T10 = FETCH_CLASS_CONSTANT (self) (exception) string("ENV_PROVIDER_OPCACHE")
0017 T8 = ADD_ARRAY_ELEMENT T10 NEXT
0018 T11 = FETCH_CLASS_CONSTANT (self) (exception) string("ENV_PROVIDER_PHP")
0019 T8 = ADD_ARRAY_ELEMENT T11 NEXT
0020 T12 = FETCH_CLASS_CONSTANT (self) (exception) string("ENV_PROVIDER_UNAME")
0021 T8 = ADD_ARRAY_ELEMENT T12 NEXT
0022 T13 = FETCH_CLASS_CONSTANT (self) (exception) string("ENV_PROVIDER_UNIX_SYSLOAD")
0023 T8 = ADD_ARRAY_ELEMENT T13 NEXT
0024 T2 = ADD_ARRAY_ELEMENT T8 T6
0025 T14 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ENV_SAMPLERS")
0026 T2 = ADD_ARRAY_ELEMENT array(...) T14
0027 T15 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ENV_SAMPLER_CALLABLES")
0028 T2 = ADD_ARRAY_ELEMENT array(...) T15
0029 T16 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_EXECUTORS")
0030 T2 = ADD_ARRAY_ELEMENT array(...) T16
0031 T17 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PATH")
0032 T2 = ADD_ARRAY_ELEMENT null T17
0033 T18 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_BINARY")
0034 T2 = ADD_ARRAY_ELEMENT null T18
0035 T19 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_CONFIG")
0036 T2 = ADD_ARRAY_ELEMENT array(...) T19
0037 T20 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_DISABLE_INI")
0038 T2 = ADD_ARRAY_ELEMENT bool(false) T20
0039 T21 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_WRAPPER")
0040 T2 = ADD_ARRAY_ELEMENT null T21
0041 T22 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROGRESS")
0042 T2 = ADD_ARRAY_ELEMENT string("verbose") T22
0043 T23 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROGRESS_SUMMARY_FORMAT")
0044 T24 = FETCH_CLASS_CONSTANT string("PhpBench\Progress\VariantSummaryFormatter") string("DEFAULT_FORMAT")
0045 T2 = ADD_ARRAY_ELEMENT T24 T23
0046 T25 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROGRESS_SUMMARY_BASELINE_FORMAT")
0047 T26 = FETCH_CLASS_CONSTANT string("PhpBench\Progress\VariantSummaryFormatter") string("BASELINE_FORMAT")
0048 T2 = ADD_ARRAY_ELEMENT T26 T25
0049 T27 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_REMOTE_SCRIPT_PATH")
0050 T2 = ADD_ARRAY_ELEMENT null T27
0051 T28 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_REMOTE_SCRIPT_REMOVE")
0052 T2 = ADD_ARRAY_ELEMENT bool(true) T28
0053 T29 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_ASSERT")
0054 T2 = ADD_ARRAY_ELEMENT null T29
0055 T30 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_EXECUTOR")
0056 T2 = ADD_ARRAY_ELEMENT null T30
0057 T31 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_FORMAT")
0058 T2 = ADD_ARRAY_ELEMENT null T31
0059 T32 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_ITERATIONS")
0060 T2 = ADD_ARRAY_ELEMENT null T32
0061 T33 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_OUTPUT_MODE")
0062 T2 = ADD_ARRAY_ELEMENT null T33
0063 T34 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_OUTPUT_TIME_UNIT")
0064 T2 = ADD_ARRAY_ELEMENT null T34
0065 T35 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_RETRY_THRESHOLD")
0066 T2 = ADD_ARRAY_ELEMENT null T35
0067 T36 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_REVS")
0068 T2 = ADD_ARRAY_ELEMENT null T36
0069 T37 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_TIMEOUT")
0070 T2 = ADD_ARRAY_ELEMENT null T37
0071 T38 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_WARMUP")
0072 T2 = ADD_ARRAY_ELEMENT null T38
0073 T39 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_SUBJECT_PATTERN")
0074 T2 = ADD_ARRAY_ELEMENT string("^bench") T39
0075 T40 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_FILE_PATTERN")
0076 T2 = ADD_ARRAY_ELEMENT null T40
0077 SEND_VAL_EX T2 1
0078 DO_FCALL
0079 EXT_STMT
0080 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0081 T42 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ANNOTATIONS")
0082 SEND_VAL_EX T42 1
0083 SEND_VAL_EX array(...) 2
0084 DO_FCALL
0085 EXT_STMT
0086 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0087 T44 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ANNOTATION_IMPORT_USE")
0088 SEND_VAL_EX T44 1
0089 SEND_VAL_EX array(...) 2
0090 DO_FCALL
0091 EXT_STMT
0092 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0093 T46 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ATTRIBUTES")
0094 SEND_VAL_EX T46 1
0095 SEND_VAL_EX array(...) 2
0096 DO_FCALL
0097 EXT_STMT
0098 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0099 T48 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_BOOTSTRAP")
0100 SEND_VAL_EX T48 1
0101 SEND_VAL_EX array(...) 2
0102 DO_FCALL
0103 EXT_STMT
0104 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0105 T50 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ENABLED_PROVIDERS")
0106 SEND_VAL_EX T50 1
0107 SEND_VAL_EX array(...) 2
0108 DO_FCALL
0109 EXT_STMT
0110 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0111 T52 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ENV_SAMPLERS")
0112 SEND_VAL_EX T52 1
0113 SEND_VAL_EX array(...) 2
0114 DO_FCALL
0115 EXT_STMT
0116 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0117 T54 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ENV_SAMPLER_CALLABLES")
0118 SEND_VAL_EX T54 1
0119 SEND_VAL_EX array(...) 2
0120 DO_FCALL
0121 EXT_STMT
0122 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0123 T56 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_EXECUTORS")
0124 SEND_VAL_EX T56 1
0125 SEND_VAL_EX array(...) 2
0126 DO_FCALL
0127 EXT_STMT
0128 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0129 T58 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PATH")
0130 SEND_VAL_EX T58 1
0131 SEND_VAL_EX array(...) 2
0132 DO_FCALL
0133 EXT_STMT
0134 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0135 T60 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_BINARY")
0136 SEND_VAL_EX T60 1
0137 SEND_VAL_EX array(...) 2
0138 DO_FCALL
0139 EXT_STMT
0140 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0141 T62 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_CONFIG")
0142 SEND_VAL_EX T62 1
0143 SEND_VAL_EX array(...) 2
0144 DO_FCALL
0145 EXT_STMT
0146 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0147 T64 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_DISABLE_INI")
0148 SEND_VAL_EX T64 1
0149 SEND_VAL_EX array(...) 2
0150 DO_FCALL
0151 EXT_STMT
0152 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0153 T66 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_WRAPPER")
0154 SEND_VAL_EX T66 1
0155 SEND_VAL_EX array(...) 2
0156 DO_FCALL
0157 EXT_STMT
0158 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0159 T68 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROGRESS")
0160 SEND_VAL_EX T68 1
0161 SEND_VAL_EX array(...) 2
0162 DO_FCALL
0163 EXT_STMT
0164 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0165 T70 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROGRESS_SUMMARY_BASELINE_FORMAT")
0166 SEND_VAL_EX T70 1
0167 SEND_VAL_EX array(...) 2
0168 DO_FCALL
0169 EXT_STMT
0170 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0171 T72 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROGRESS_SUMMARY_FORMAT")
0172 SEND_VAL_EX T72 1
0173 SEND_VAL_EX array(...) 2
0174 DO_FCALL
0175 EXT_STMT
0176 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0177 T74 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_REMOTE_SCRIPT_PATH")
0178 SEND_VAL_EX T74 1
0179 SEND_VAL_EX array(...) 2
0180 DO_FCALL
0181 EXT_STMT
0182 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0183 T76 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_REMOTE_SCRIPT_REMOVE")
0184 SEND_VAL_EX T76 1
0185 SEND_VAL_EX array(...) 2
0186 DO_FCALL
0187 EXT_STMT
0188 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0189 T78 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_ASSERT")
0190 SEND_VAL_EX T78 1
0191 SEND_VAL_EX array(...) 2
0192 DO_FCALL
0193 EXT_STMT
0194 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0195 T80 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_EXECUTOR")
0196 SEND_VAL_EX T80 1
0197 SEND_VAL_EX array(...) 2
0198 DO_FCALL
0199 EXT_STMT
0200 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0201 T82 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_FORMAT")
0202 SEND_VAL_EX T82 1
0203 SEND_VAL_EX array(...) 2
0204 DO_FCALL
0205 EXT_STMT
0206 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0207 T84 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_ITERATIONS")
0208 SEND_VAL_EX T84 1
0209 SEND_VAL_EX array(...) 2
0210 DO_FCALL
0211 EXT_STMT
0212 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0213 T86 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_OUTPUT_MODE")
0214 SEND_VAL_EX T86 1
0215 SEND_VAL_EX array(...) 2
0216 DO_FCALL
0217 EXT_STMT
0218 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0219 T88 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_OUTPUT_TIME_UNIT")
0220 SEND_VAL_EX T88 1
0221 SEND_VAL_EX array(...) 2
0222 DO_FCALL
0223 EXT_STMT
0224 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0225 T90 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_RETRY_THRESHOLD")
0226 SEND_VAL_EX T90 1
0227 SEND_VAL_EX array(...) 2
0228 DO_FCALL
0229 EXT_STMT
0230 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0231 T92 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_REVS")
0232 SEND_VAL_EX T92 1
0233 SEND_VAL_EX array(...) 2
0234 DO_FCALL
0235 EXT_STMT
0236 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0237 T94 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_TIMEOUT")
0238 SEND_VAL_EX T94 1
0239 SEND_VAL_EX array(...) 2
0240 DO_FCALL
0241 EXT_STMT
0242 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0243 T96 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_WARMUP")
0244 SEND_VAL_EX T96 1
0245 SEND_VAL_EX array(...) 2
0246 DO_FCALL
0247 EXT_STMT
0248 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0249 T98 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_SUBJECT_PATTERN")
0250 SEND_VAL_EX T98 1
0251 SEND_VAL_EX array(...) 2
0252 DO_FCALL
0253 EXT_STMT
0254 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0255 T100 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_FILE_PATTERN")
0256 SEND_VAL_EX T100 1
0257 SEND_VAL_EX array(...) 2
0258 DO_FCALL
0259 EXT_STMT
0260 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Compat\SymfonyOptionsResolverCompat") string("setInfos")
0261 SEND_VAR CV0($resolver) 1
0262 T102 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ANNOTATIONS")
0263 T103 = INIT_ARRAY 30 (packed) string("Read metadata from annotations") T102
0264 T104 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ANNOTATION_IMPORT_USE")
0265 T103 = ADD_ARRAY_ELEMENT string("Require that annotations be imported before use") T104
0266 T105 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ATTRIBUTES")
0267 T103 = ADD_ARRAY_ELEMENT string("Read metadata from PHP 8 attributes") T105
0268 T106 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_BOOTSTRAP")
0269 T103 = ADD_ARRAY_ELEMENT string("Path to bootstrap (e.g. ``vendor/autoload.php``)") T106
0270 T107 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ENABLED_PROVIDERS")
0271 T103 = ADD_ARRAY_ELEMENT string("Select which environment samplers to use") T107
0272 T108 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ENV_SAMPLERS")
0273 T103 = ADD_ARRAY_ELEMENT string("Environment baselines (not to be confused with baseline comparisons when running benchmarks) are small benchmarks which run to sample the speed of the system (e.g. file I/O, computation etc). This setting enables or disables these baselines") T108
0274 T109 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_ENV_SAMPLER_CALLABLES")
0275 T103 = ADD_ARRAY_ELEMENT string("Map of baseline callables (adds you to register a new environemntal baseline)") T109
0276 T110 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_EXECUTORS")
0277 T103 = ADD_ARRAY_ELEMENT string("Add new executor configurations") T110
0278 T111 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PATH")
0279 T103 = ADD_ARRAY_ELEMENT string("Path or paths to the benchmarks") T111
0280 T112 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_BINARY")
0281 T103 = ADD_ARRAY_ELEMENT string("Specify a PHP binary to use when executing out-of-band benchmarks, e.g. ``/usr/bin/php6``, defaults to the version of PHP used to invoke PHPBench") T112
0282 T113 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_CONFIG")
0283 T103 = ADD_ARRAY_ELEMENT string("Map of PHP ini settings to use when executing out-of-band benchmarks") T113
0284 T114 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_DISABLE_INI")
0285 T103 = ADD_ARRAY_ELEMENT string("Disable reading the default PHP configuration") T114
0286 T115 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PHP_WRAPPER")
0287 T103 = ADD_ARRAY_ELEMENT string("Wrap the PHP binary with this command (e.g. ``blackfire run``)") T115
0288 T116 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROGRESS")
0289 T103 = ADD_ARRAY_ELEMENT string("Default progress logger to use") T116
0290 T117 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROGRESS_SUMMARY_FORMAT")
0291 T103 = ADD_ARRAY_ELEMENT string("Expression used to render the summary text default progress loggers") T117
0292 T118 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PROGRESS_SUMMARY_BASELINE_FORMAT")
0293 T103 = ADD_ARRAY_ELEMENT string("When the a comparison benchmark is referenced, alternative expression used to render the summary text default progress loggers") T118
0294 T119 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_REMOTE_SCRIPT_PATH")
0295 T103 = ADD_ARRAY_ELEMENT string("PHPBench generates a PHP file for out-of-band benchmarks which is executed, this setting specifies the path to this file. When NULL a file in the systems temporary directory will be used") T119
0296 T120 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_REMOTE_SCRIPT_REMOVE")
0297 T103 = ADD_ARRAY_ELEMENT string("If the generated file should be removed after it has been executed (useful for debugging)") T120
0298 T121 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_ASSERT")
0299 T103 = ADD_ARRAY_ELEMENT string("Default :ref:`metadata_assertions`") T121
0300 T122 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_EXECUTOR")
0301 T103 = ADD_ARRAY_ELEMENT string("Default executor") T122
0302 T123 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_FORMAT")
0303 T103 = ADD_ARRAY_ELEMENT string("Default :ref:`metadata_format`") T123
0304 T124 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_ITERATIONS")
0305 T103 = ADD_ARRAY_ELEMENT string("Default :ref:`metadata_iterations`") T124
0306 T125 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_OUTPUT_MODE")
0307 T103 = ADD_ARRAY_ELEMENT string("Default :ref:`output mode <metadata_mode>`") T125
0308 T126 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_OUTPUT_TIME_UNIT")
0309 T103 = ADD_ARRAY_ELEMENT string("Default :ref:`time unit <metadata_time_unit>`") T126
0310 T127 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_RETRY_THRESHOLD")
0311 T103 = ADD_ARRAY_ELEMENT string("Default :ref:`metadata_retry_threshold`") T127
0312 T128 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_REVS")
0313 T103 = ADD_ARRAY_ELEMENT string("Default number of :ref:`metadata_revolutions`") T128
0314 T129 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_TIMEOUT")
0315 T103 = ADD_ARRAY_ELEMENT string("Default :ref:`metadata_timeout`") T129
0316 T130 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_RUNNER_WARMUP")
0317 T103 = ADD_ARRAY_ELEMENT string("Default :ref:`metadata_warmup`") T130
0318 T131 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_SUBJECT_PATTERN")
0319 T103 = ADD_ARRAY_ELEMENT string("Subject pattern (regex) to use when finding benchmarks") T131
0320 T132 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_FILE_PATTERN")
0321 T103 = ADD_ARRAY_ELEMENT string("Consider file names matching this pattern to be benchmarks. NOTE: In 2.0 this will be set to ``*Bench.php``") T132
0322 SEND_VAL T103 2
0323 DO_FCALL
0324 EXT_STMT
0325 RETURN null
LIVE RANGES:
     2: 0005 - 0077 (tmp/var)
     6: 0012 - 0024 (tmp/var)
     8: 0014 - 0024 (tmp/var)
     23: 0044 - 0045 (tmp/var)
     25: 0047 - 0048 (tmp/var)
     103: 0264 - 0322 (tmp/var)

PhpBench\Extension\RunnerExtension::load:
     ; (lines=35, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:223-233
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 THIS string("relativizeConfigPath")
0003 SEND_VAR_EX CV0($container) 1
0004 DO_FCALL
0005 EXT_STMT
0006 INIT_METHOD_CALL 1 THIS string("registerBenchmark")
0007 SEND_VAR_EX CV0($container) 1
0008 DO_FCALL
0009 EXT_STMT
0010 INIT_METHOD_CALL 1 THIS string("registerCommands")
0011 SEND_VAR_EX CV0($container) 1
0012 DO_FCALL
0013 EXT_STMT
0014 INIT_METHOD_CALL 1 THIS string("registerProgressLoggers")
0015 SEND_VAR_EX CV0($container) 1
0016 DO_FCALL
0017 EXT_STMT
0018 INIT_METHOD_CALL 1 THIS string("registerExecutors")
0019 SEND_VAR_EX CV0($container) 1
0020 DO_FCALL
0021 EXT_STMT
0022 INIT_METHOD_CALL 1 THIS string("registerEnvironment")
0023 SEND_VAR_EX CV0($container) 1
0024 DO_FCALL
0025 EXT_STMT
0026 INIT_METHOD_CALL 1 THIS string("registerAsserters")
0027 SEND_VAR_EX CV0($container) 1
0028 DO_FCALL
0029 EXT_STMT
0030 INIT_METHOD_CALL 1 THIS string("registerMetadata")
0031 SEND_VAR_EX CV0($container) 1
0032 DO_FCALL
0033 EXT_STMT
0034 RETURN null

PhpBench\Extension\RunnerExtension::registerEnvironment:
     ; (lines=86, args=1, vars=1, tmps=44)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:235-307
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 3 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Environment\Provider\Uname") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_ENV_PROVIDER")
0007 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("ENV_PROVIDER_UNAME")
0008 T4 = INIT_ARRAY 1 T3 string("name")
0009 T5 = INIT_ARRAY 1 (packed) T4 T2
0010 SEND_VAL_EX T5 3
0011 DO_FCALL
0012 EXT_STMT
0013 INIT_METHOD_CALL 3 CV0($container) string("register")
0014 SEND_VAL_EX string("PhpBench\Environment\Provider\Php") 1
0015 T7 = DECLARE_LAMBDA_FUNCTION string("")
0016 SEND_VAL_EX T7 2
0017 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_ENV_PROVIDER")
0018 T9 = FETCH_CLASS_CONSTANT (self) (exception) string("ENV_PROVIDER_PHP")
0019 T10 = INIT_ARRAY 1 T9 string("name")
0020 T11 = INIT_ARRAY 1 (packed) T10 T8
0021 SEND_VAL_EX T11 3
0022 DO_FCALL
0023 EXT_STMT
0024 INIT_METHOD_CALL 3 CV0($container) string("register")
0025 SEND_VAL_EX string("PhpBench\Environment\Provider\Opcache") 1
0026 T13 = DECLARE_LAMBDA_FUNCTION string("")
0027 SEND_VAL_EX T13 2
0028 T14 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_ENV_PROVIDER")
0029 T15 = FETCH_CLASS_CONSTANT (self) (exception) string("ENV_PROVIDER_OPCACHE")
0030 T16 = INIT_ARRAY 1 T15 string("name")
0031 T17 = INIT_ARRAY 1 (packed) T16 T14
0032 SEND_VAL_EX T17 3
0033 DO_FCALL
0034 EXT_STMT
0035 INIT_METHOD_CALL 3 CV0($container) string("register")
0036 SEND_VAL_EX string("PhpBench\Environment\Provider\UnixSysload") 1
0037 T19 = DECLARE_LAMBDA_FUNCTION string("")
0038 SEND_VAL_EX T19 2
0039 T20 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_ENV_PROVIDER")
0040 T21 = FETCH_CLASS_CONSTANT (self) (exception) string("ENV_PROVIDER_UNIX_SYSLOAD")
0041 T22 = INIT_ARRAY 1 T21 string("name")
0042 T23 = INIT_ARRAY 1 (packed) T22 T20
0043 SEND_VAL_EX T23 3
0044 DO_FCALL
0045 EXT_STMT
0046 INIT_METHOD_CALL 3 CV0($container) string("register")
0047 SEND_VAL_EX string("PhpBench\Environment\Provider\Git") 1
0048 T25 = DECLARE_LAMBDA_FUNCTION string("")
0049 SEND_VAL_EX T25 2
0050 T26 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_ENV_PROVIDER")
0051 T27 = FETCH_CLASS_CONSTANT (self) (exception) string("ENV_PROVIDER_GIT")
0052 T28 = INIT_ARRAY 1 T27 string("name")
0053 T29 = INIT_ARRAY 1 (packed) T28 T26
0054 SEND_VAL_EX T29 3
0055 DO_FCALL
0056 EXT_STMT
0057 INIT_METHOD_CALL 3 CV0($container) string("register")
0058 SEND_VAL_EX string("PhpBench\Environment\Provider\Sampler") 1
0059 T31 = DECLARE_LAMBDA_FUNCTION string("")
0060 SEND_VAL_EX T31 2
0061 T32 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_ENV_PROVIDER")
0062 T33 = FETCH_CLASS_CONSTANT (self) (exception) string("ENV_PROVIDER_SAMPLER")
0063 T34 = INIT_ARRAY 1 T33 string("name")
0064 T35 = INIT_ARRAY 1 (packed) T34 T32
0065 SEND_VAL_EX T35 3
0066 DO_FCALL
0067 EXT_STMT
0068 INIT_METHOD_CALL 3 CV0($container) string("register")
0069 SEND_VAL_EX string("PhpBench\Environment\Provider\TestProvider") 1
0070 T37 = DECLARE_LAMBDA_FUNCTION string("")
0071 SEND_VAL_EX T37 2
0072 T38 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_ENV_PROVIDER")
0073 T39 = FETCH_CLASS_CONSTANT (self) (exception) string("ENV_PROVIDER_TEST")
0074 T40 = INIT_ARRAY 1 T39 string("name")
0075 T41 = INIT_ARRAY 1 (packed) T40 T38
0076 SEND_VAL_EX T41 3
0077 DO_FCALL
0078 EXT_STMT
0079 INIT_METHOD_CALL 2 CV0($container) string("register")
0080 SEND_VAL_EX string("PhpBench\Environment\Supplier") 1
0081 T43 = DECLARE_LAMBDA_FUNCTION string("")
0082 SEND_VAL_EX T43 2
0083 DO_FCALL
0084 EXT_STMT
0085 RETURN null
LIVE RANGES:
     2: 0007 - 0009 (tmp/var)
     8: 0018 - 0020 (tmp/var)
     14: 0029 - 0031 (tmp/var)
     20: 0040 - 0042 (tmp/var)
     26: 0051 - 0053 (tmp/var)
     32: 0062 - 0064 (tmp/var)
     38: 0073 - 0075 (tmp/var)

PhpBench\Extension\RunnerExtension::registerBenchmark:
     ; (lines=102, args=1, vars=1, tmps=38)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:309-409
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Benchmark\Runner") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 INIT_METHOD_CALL 3 CV0($container) string("register")
0009 SEND_VAL_EX string("PhpBench\Executor\Benchmark\RemoteExecutor.composite") 1
0010 T3 = DECLARE_LAMBDA_FUNCTION string("")
0011 SEND_VAL_EX T3 2
0012 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_EXECUTOR")
0013 T5 = INIT_ARRAY 1 (packed) array(...) T4
0014 SEND_VAL_EX T5 3
0015 DO_FCALL
0016 EXT_STMT
0017 INIT_METHOD_CALL 3 CV0($container) string("register")
0018 SEND_VAL_EX string("PhpBench\Executor\Benchmark\LocalExecutor.composite") 1
0019 T7 = DECLARE_LAMBDA_FUNCTION string("")
0020 SEND_VAL_EX T7 2
0021 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_EXECUTOR")
0022 T9 = INIT_ARRAY 1 (packed) array(...) T8
0023 SEND_VAL_EX T9 3
0024 DO_FCALL
0025 EXT_STMT
0026 INIT_METHOD_CALL 3 CV0($container) string("register")
0027 SEND_VAL_EX string("PhpBench\Executor\Benchmark\MemoryCentricMicrotimeExecutor") 1
0028 T11 = DECLARE_LAMBDA_FUNCTION string("")
0029 SEND_VAL_EX T11 2
0030 T12 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_EXECUTOR")
0031 T13 = INIT_ARRAY 1 (packed) array(...) T12
0032 SEND_VAL_EX T13 3
0033 DO_FCALL
0034 EXT_STMT
0035 INIT_METHOD_CALL 2 CV0($container) string("register")
0036 SEND_VAL_EX string("PhpBench\Executor\Benchmark\RemoteExecutor") 1
0037 T15 = DECLARE_LAMBDA_FUNCTION string("")
0038 SEND_VAL_EX T15 2
0039 DO_FCALL
0040 EXT_STMT
0041 INIT_METHOD_CALL 2 CV0($container) string("register")
0042 SEND_VAL_EX string("PhpBench\Executor\Benchmark\LocalExecutor") 1
0043 T17 = DECLARE_LAMBDA_FUNCTION string("")
0044 SEND_VAL_EX T17 2
0045 DO_FCALL
0046 EXT_STMT
0047 INIT_METHOD_CALL 2 CV0($container) string("register")
0048 SEND_VAL_EX string("PhpBench\Executor\Method\RemoteMethodExecutor") 1
0049 T19 = DECLARE_LAMBDA_FUNCTION string("")
0050 SEND_VAL_EX T19 2
0051 DO_FCALL
0052 EXT_STMT
0053 INIT_METHOD_CALL 2 CV0($container) string("register")
0054 SEND_VAL_EX string("PhpBench\Executor\Method\LocalMethodExecutor") 1
0055 T21 = DECLARE_LAMBDA_FUNCTION string("")
0056 SEND_VAL_EX T21 2
0057 DO_FCALL
0058 EXT_STMT
0059 INIT_METHOD_CALL 3 CV0($container) string("register")
0060 SEND_VAL_EX string("PhpBench\Executor\Benchmark\DebugExecutor") 1
0061 T23 = DECLARE_LAMBDA_FUNCTION string("")
0062 SEND_VAL_EX T23 2
0063 T24 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_EXECUTOR")
0064 T25 = INIT_ARRAY 1 (packed) array(...) T24
0065 SEND_VAL_EX T25 3
0066 DO_FCALL
0067 EXT_STMT
0068 INIT_METHOD_CALL 3 CV0($container) string("register")
0069 SEND_VAL_EX string("PhpBench\Executor\Benchmark\OpcodeExecutor") 1
0070 T27 = DECLARE_LAMBDA_FUNCTION string("")
0071 SEND_VAL_EX T27 2
0072 T28 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_EXECUTOR")
0073 T29 = INIT_ARRAY 1 (packed) array(...) T28
0074 SEND_VAL_EX T29 3
0075 DO_FCALL
0076 EXT_STMT
0077 INIT_METHOD_CALL 2 CV0($container) string("register")
0078 SEND_VAL_EX string("Symfony\Component\Finder\Finder") 1
0079 T31 = DECLARE_LAMBDA_FUNCTION string("")
0080 SEND_VAL_EX T31 2
0081 DO_FCALL
0082 EXT_STMT
0083 INIT_METHOD_CALL 2 CV0($container) string("register")
0084 SEND_VAL_EX string("PhpBench\Remote\ProcessFactory") 1
0085 T33 = DECLARE_LAMBDA_FUNCTION string("")
0086 SEND_VAL_EX T33 2
0087 DO_FCALL
0088 EXT_STMT
0089 INIT_METHOD_CALL 2 CV0($container) string("register")
0090 SEND_VAL_EX string("PhpBench\Remote\Launcher") 1
0091 T35 = DECLARE_LAMBDA_FUNCTION string("")
0092 SEND_VAL_EX T35 2
0093 DO_FCALL
0094 EXT_STMT
0095 INIT_METHOD_CALL 2 CV0($container) string("register")
0096 SEND_VAL_EX string("PhpBench\Reflection\RemoteReflector") 1
0097 T37 = DECLARE_LAMBDA_FUNCTION string("")
0098 SEND_VAL_EX T37 2
0099 DO_FCALL
0100 EXT_STMT
0101 RETURN null

PhpBench\Extension\RunnerExtension::registerCommands:
     ; (lines=18, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:411-435
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Console\Command\Handler\RunnerHandler") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 INIT_METHOD_CALL 3 CV0($container) string("register")
0009 SEND_VAL_EX string("PhpBench\Console\Command\RunCommand") 1
0010 T3 = DECLARE_LAMBDA_FUNCTION string("")
0011 SEND_VAL_EX T3 2
0012 T4 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("TAG_CONSOLE_COMMAND")
0013 T5 = INIT_ARRAY 1 (packed) array(...) T4
0014 SEND_VAL_EX T5 3
0015 DO_FCALL
0016 EXT_STMT
0017 RETURN null

PhpBench\Extension\RunnerExtension::registerProgressLoggers:
     ; (lines=79, args=1, vars=1, tmps=33)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:437-513
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Progress\VariantFormatter") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 INIT_METHOD_CALL 2 CV0($container) string("register")
0009 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_REGISTRY_LOGGER")
0010 SEND_VAL_EX T3 1
0011 T4 = DECLARE_LAMBDA_FUNCTION string("")
0012 SEND_VAL_EX T4 2
0013 DO_FCALL
0014 EXT_STMT
0015 INIT_METHOD_CALL 3 CV0($container) string("register")
0016 SEND_VAL_EX string("PhpBench\Progress\Logger\DotsLogger") 1
0017 T6 = DECLARE_LAMBDA_FUNCTION string("")
0018 SEND_VAL_EX T6 2
0019 T7 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_PROGRESS_LOGGER")
0020 T8 = INIT_ARRAY 1 (packed) array(...) T7
0021 SEND_VAL_EX T8 3
0022 DO_FCALL
0023 EXT_STMT
0024 INIT_METHOD_CALL 3 CV0($container) string("register")
0025 SEND_VAL_EX string("PhpBench\Progress\Logger\DotsLogger.show") 1
0026 T10 = DECLARE_LAMBDA_FUNCTION string("")
0027 SEND_VAL_EX T10 2
0028 T11 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_PROGRESS_LOGGER")
0029 T12 = INIT_ARRAY 1 (packed) array(...) T11
0030 SEND_VAL_EX T12 3
0031 DO_FCALL
0032 EXT_STMT
0033 INIT_METHOD_CALL 3 CV0($container) string("register")
0034 SEND_VAL_EX string("PhpBench\Progress\Logger\VerboseLogger") 1
0035 T14 = DECLARE_LAMBDA_FUNCTION string("")
0036 SEND_VAL_EX T14 2
0037 T15 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_PROGRESS_LOGGER")
0038 T16 = INIT_ARRAY 1 (packed) array(...) T15
0039 SEND_VAL_EX T16 3
0040 DO_FCALL
0041 EXT_STMT
0042 INIT_METHOD_CALL 3 CV0($container) string("register")
0043 SEND_VAL_EX string("PhpBench\Progress\Logger\PlainLogger") 1
0044 T18 = DECLARE_LAMBDA_FUNCTION string("")
0045 SEND_VAL_EX T18 2
0046 T19 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_PROGRESS_LOGGER")
0047 T20 = INIT_ARRAY 1 (packed) array(...) T19
0048 SEND_VAL_EX T20 3
0049 DO_FCALL
0050 EXT_STMT
0051 INIT_METHOD_CALL 3 CV0($container) string("register")
0052 SEND_VAL_EX string("PhpBench\Progress\Logger\NullLogger") 1
0053 T22 = DECLARE_LAMBDA_FUNCTION string("")
0054 SEND_VAL_EX T22 2
0055 T23 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_PROGRESS_LOGGER")
0056 T24 = INIT_ARRAY 1 (packed) array(...) T23
0057 SEND_VAL_EX T24 3
0058 DO_FCALL
0059 EXT_STMT
0060 INIT_METHOD_CALL 3 CV0($container) string("register")
0061 SEND_VAL_EX string("PhpBench\Progress\Logger\BlinkenLogger") 1
0062 T26 = DECLARE_LAMBDA_FUNCTION string("")
0063 SEND_VAL_EX T26 2
0064 T27 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_PROGRESS_LOGGER")
0065 T28 = INIT_ARRAY 1 (packed) array(...) T27
0066 SEND_VAL_EX T28 3
0067 DO_FCALL
0068 EXT_STMT
0069 INIT_METHOD_CALL 3 CV0($container) string("register")
0070 SEND_VAL_EX string("PhpBench\Progress\Logger\HistogramLogger") 1
0071 T30 = DECLARE_LAMBDA_FUNCTION string("")
0072 SEND_VAL_EX T30 2
0073 T31 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_PROGRESS_LOGGER")
0074 T32 = INIT_ARRAY 1 (packed) array(...) T31
0075 SEND_VAL_EX T32 3
0076 DO_FCALL
0077 EXT_STMT
0078 RETURN null

PhpBench\Extension\RunnerExtension::relativizeConfigPath:
     ; (lines=27, args=1, vars=2, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:516-534
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0003 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PATH")
0004 SEND_VAL_EX T2 1
0005 V3 = DO_FCALL
0006 T4 = CAST (array) V3
0007 ASSIGN CV1($paths) T4
0008 EXT_STMT
0009 T6 = ISSET_ISEMPTY_CV (empty) CV1($paths)
0010 JMPZ T6 0013
0011 EXT_STMT
0012 RETURN null
0013 EXT_STMT
0014 INIT_METHOD_CALL 2 CV0($container) string("setParameter")
0015 T7 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_PATH")
0016 SEND_VAL_EX T7 1
0017 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Extension\array_map")
0018 T8 = DECLARE_LAMBDA_FUNCTION string("")
0019 BIND_LEXICAL T8 CV0($container)
0020 SEND_VAL_EX T8 1
0021 SEND_VAR_EX CV1($paths) 2
0022 V9 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V9 2
0024 DO_FCALL
0025 EXT_STMT
0026 RETURN null
LIVE RANGES:
     8: 0019 - 0020 (tmp/var)

PhpBench\Extension\RunnerExtension::registerExecutors:
     ; (lines=10, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:536-560
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_REGISTRY_EXECUTOR")
0004 SEND_VAL_EX T1 1
0005 T2 = DECLARE_LAMBDA_FUNCTION string("")
0006 SEND_VAL_EX T2 2
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PhpBench\Extension\RunnerExtension::registerMetadata:
     ; (lines=51, args=1, vars=1, tmps=16)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:562-643
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Benchmark\Metadata\AnnotationReader") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 INIT_METHOD_CALL 2 CV0($container) string("register")
0009 SEND_VAL_EX string("PhpBench\Benchmark\Metadata\Driver\AnnotationDriver") 1
0010 T3 = DECLARE_LAMBDA_FUNCTION string("")
0011 SEND_VAL_EX T3 2
0012 DO_FCALL
0013 EXT_STMT
0014 INIT_METHOD_CALL 2 CV0($container) string("register")
0015 SEND_VAL_EX string("PhpBench\Benchmark\Metadata\Driver\AttributeDriver") 1
0016 T5 = DECLARE_LAMBDA_FUNCTION string("")
0017 SEND_VAL_EX T5 2
0018 DO_FCALL
0019 EXT_STMT
0020 INIT_METHOD_CALL 2 CV0($container) string("register")
0021 SEND_VAL_EX string("PhpBench\Benchmark\Metadata\Driver\ChainDriver") 1
0022 T7 = DECLARE_LAMBDA_FUNCTION string("")
0023 SEND_VAL_EX T7 2
0024 DO_FCALL
0025 EXT_STMT
0026 INIT_METHOD_CALL 2 CV0($container) string("register")
0027 SEND_VAL_EX string("PhpBench\Benchmark\Metadata\MetadataFactory") 1
0028 T9 = DECLARE_LAMBDA_FUNCTION string("")
0029 SEND_VAL_EX T9 2
0030 DO_FCALL
0031 EXT_STMT
0032 INIT_METHOD_CALL 2 CV0($container) string("register")
0033 SEND_VAL_EX string("PhpBench\Benchmark\Metadata\Driver\ConfigDriver") 1
0034 T11 = DECLARE_LAMBDA_FUNCTION string("")
0035 SEND_VAL_EX T11 2
0036 DO_FCALL
0037 EXT_STMT
0038 INIT_METHOD_CALL 2 CV0($container) string("register")
0039 SEND_VAL_EX string("PhpBench\Benchmark\BenchmarkFinder") 1
0040 T13 = DECLARE_LAMBDA_FUNCTION string("")
0041 SEND_VAL_EX T13 2
0042 DO_FCALL
0043 EXT_STMT
0044 INIT_METHOD_CALL 2 CV0($container) string("register")
0045 SEND_VAL_EX string("PhpBench\Benchmark\SamplerManager") 1
0046 T15 = DECLARE_LAMBDA_FUNCTION string("")
0047 SEND_VAL_EX T15 2
0048 DO_FCALL
0049 EXT_STMT
0050 RETURN null

PhpBench\Extension\RunnerExtension::registerAsserters:
     ; (lines=15, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/RunnerExtension.php:645-660
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Assertion\AssertionProcessor") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 INIT_METHOD_CALL 2 CV0($container) string("register")
0009 SEND_VAL_EX string("PhpBench\Assertion\ParameterProvider") 1
0010 T3 = DECLARE_LAMBDA_FUNCTION string("")
0011 SEND_VAL_EX T3 2
0012 DO_FCALL
0013 EXT_STMT
0014 RETURN null

$_main:
     ; (lines=12, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Progress/VariantSummaryFormatter.php:1-78
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 EXT_STMT
0010 DECLARE_CLASS string("phpbench\progress\variantsummaryformatter")
0011 RETURN int(1)

PhpBench\Progress\VariantSummaryFormatter::__construct:
     ; (lines=22, args=5, vars=5, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Progress/VariantSummaryFormatter.php:52-64
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($printer) = RECV 2
0002 CV2($paramProvider) = RECV 3
0003 CV3($format) = RECV_INIT 4 zval(type=11)
0004 CV4($baselineFormat) = RECV_INIT 5 zval(type=11)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("format")
0007 OP_DATA CV3($format)
0008 EXT_STMT
0009 ASSIGN_OBJ THIS string("baselineFormat")
0010 OP_DATA CV4($baselineFormat)
0011 EXT_STMT
0012 ASSIGN_OBJ THIS string("parser")
0013 OP_DATA CV0($parser)
0014 EXT_STMT
0015 ASSIGN_OBJ THIS string("printer")
0016 OP_DATA CV1($printer)
0017 EXT_STMT
0018 ASSIGN_OBJ THIS string("paramProvider")
0019 OP_DATA CV2($paramProvider)
0020 EXT_STMT
0021 RETURN null

PhpBench\Progress\VariantSummaryFormatter::formatVariant:
     ; (lines=48, args=1, vars=4, tmps=20)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Progress/VariantSummaryFormatter.php:66-76
     ; return  [] RANGE[0..0]
0000 CV0($variant) = RECV 1
0001 EXT_STMT
0002 T4 = FETCH_OBJ_R THIS string("paramProvider")
0003 INIT_METHOD_CALL 1 T4 string("provideFor")
0004 SEND_VAR_EX CV0($variant) 1
0005 V5 = DO_FCALL
0006 ASSIGN CV1($data) V5
0007 EXT_STMT
0008 INIT_METHOD_CALL 0 CV0($variant) string("getSubject")
0009 V7 = DO_FCALL
0010 INIT_METHOD_CALL 0 V7 string("getFormat")
0011 V8 = DO_FCALL
0012 ASSIGN CV2($subjectFormat) V8
0013 EXT_STMT
0014 INIT_METHOD_CALL 0 CV0($variant) string("getBaseline")
0015 V10 = DO_FCALL
0016 JMPZ V10 0026
0017 T11 = FETCH_OBJ_R THIS string("parser")
0018 INIT_METHOD_CALL 1 T11 string("parse")
0019 T12 = COALESCE CV2($subjectFormat) 0022
0020 T13 = FETCH_OBJ_R THIS string("baselineFormat")
0021 T12 = QM_ASSIGN T13
0022 SEND_VAL_EX T12 1
0023 V14 = DO_FCALL
0024 T15 = QM_ASSIGN V14
0025 JMP 0034
0026 T16 = FETCH_OBJ_R THIS string("parser")
0027 INIT_METHOD_CALL 1 T16 string("parse")
0028 T17 = COALESCE CV2($subjectFormat) 0031
0029 T18 = FETCH_OBJ_R THIS string("format")
0030 T17 = QM_ASSIGN T18
0031 SEND_VAL_EX T17 1
0032 V19 = DO_FCALL
0033 T15 = QM_ASSIGN V19
0034 ASSIGN CV3($node) T15
0035 EXT_STMT
0036 T21 = FETCH_OBJ_R THIS string("printer")
0037 INIT_METHOD_CALL 1 T21 string("withParams")
0038 SEND_VAR_EX CV1($data) 1
0039 V22 = DO_FCALL
0040 INIT_METHOD_CALL 1 V22 string("print")
0041 SEND_VAR_EX CV3($node) 1
0042 V23 = DO_FCALL
0043 VERIFY_RETURN_TYPE V23
0044 RETURN V23
0045 EXT_STMT
0046 VERIFY_RETURN_TYPE
0047 RETURN null
LIVE RANGES:
     23: 0043 - 0044 (tmp/var)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Progress/VariantFormatter.php:1-11
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 RETURN int(1)

PhpBench\Progress\VariantFormatter::formatVariant:
     ; (lines=4, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Progress/VariantFormatter.php:9-9
     ; return  [] RANGE[0..0]
0000 CV0($variant) = RECV 1
0001 EXT_STMT
0002 VERIFY_RETURN_TYPE
0003 RETURN null

$_main:
     ; (lines=50, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:1-343
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 NOP
0012 NOP
0013 NOP
0014 NOP
0015 NOP
0016 NOP
0017 NOP
0018 NOP
0019 NOP
0020 NOP
0021 NOP
0022 NOP
0023 NOP
0024 NOP
0025 NOP
0026 NOP
0027 NOP
0028 NOP
0029 NOP
0030 NOP
0031 NOP
0032 NOP
0033 NOP
0034 NOP
0035 NOP
0036 NOP
0037 NOP
0038 NOP
0039 NOP
0040 NOP
0041 NOP
0042 NOP
0043 NOP
0044 NOP
0045 NOP
0046 NOP
0047 EXT_STMT
0048 DECLARE_CLASS string("phpbench\extension\reportextension")
0049 RETURN int(1)

PhpBench\Extension\{closure}:
     ; (lines=17, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:104-109
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 string("PhpBench\Report\ReportManager")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_REGISTRY_GENERATOR")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_REGISTRY_RENDERER")
0010 SEND_VAL_EX T4 1
0011 V5 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V5 2
0013 DO_FCALL
0014 RETURN V1
0015 EXT_STMT
0016 RETURN null
LIVE RANGES:
     1: 0003 - 0014 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:123-125
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Json\JsonDecoder")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:130-134
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Console\Command\Handler\ReportHandler")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Report\ReportManager") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=23, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:136-143
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 4 string("PhpBench\Console\Command\ReportCommand")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Console\Command\Handler\ReportHandler") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 SEND_VAL_EX string("PhpBench\Console\Command\Handler\TimeUnitHandler") 1
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 2
0011 INIT_METHOD_CALL 1 CV0($container) string("get")
0012 SEND_VAL_EX string("PhpBench\Console\Command\Handler\SuiteCollectionHandler") 1
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 3
0015 INIT_METHOD_CALL 1 CV0($container) string("get")
0016 SEND_VAL_EX string("PhpBench\Console\Command\Handler\DumpHandler") 1
0017 V5 = DO_FCALL
0018 SEND_VAR_NO_REF_EX V5 4
0019 DO_FCALL
0020 RETURN V1
0021 EXT_STMT
0022 RETURN null
LIVE RANGES:
     1: 0003 - 0020 (new)

PhpBench\Extension\{closure}:
     ; (lines=28, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:147-155
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 5 string("PhpBench\Console\Command\ShowCommand")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\StorageExtension") string("SERVICE_REGISTRY_DRIVER")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Console\Command\Handler\ReportHandler") 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Console\Command\Handler\TimeUnitHandler") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 INIT_METHOD_CALL 1 CV0($container) string("get")
0017 SEND_VAL_EX string("PhpBench\Console\Command\Handler\DumpHandler") 1
0018 V6 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V6 4
0020 INIT_METHOD_CALL 1 CV0($container) string("get")
0021 SEND_VAL_EX string("PhpBench\Storage\UuidResolver") 1
0022 V7 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V7 5
0024 DO_FCALL
0025 RETURN V1
0026 EXT_STMT
0027 RETURN null
LIVE RANGES:
     1: 0003 - 0025 (new)

PhpBench\Extension\{closure}:
     ; (lines=57, args=1, vars=9, tmps=21)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:167-188
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 BIND_STATIC CV1($registryType)
0002 BIND_STATIC CV2($optionName)
0003 EXT_STMT
0004 V9 = NEW 3 string("PhpBench\Registry\ConfigurableRegistry")
0005 SEND_VAR_EX CV1($registryType) 1
0006 SEND_VAR_EX CV0($container) 2
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 SEND_VAL_EX string("PhpBench\Json\JsonDecoder") 1
0009 V10 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V10 3
0011 DO_FCALL
0012 ASSIGN CV3($registry) V9
0013 EXT_STMT
0014 INIT_METHOD_CALL 1 CV0($container) string("getServiceIdsForTag")
0015 T13 = CONCAT string("report.") CV1($registryType)
0016 SEND_VAL_EX T13 1
0017 V14 = DO_FCALL
0018 V15 = FE_RESET_R V14 0029
0019 T16 = FE_FETCH_R V15 CV4($attributes) 0029
0020 ASSIGN CV5($serviceId) T16
0021 EXT_STMT
0022 INIT_METHOD_CALL 2 CV3($registry) string("registerService")
0023 CHECK_FUNC_ARG 1
0024 V18 = FETCH_DIM_FUNC_ARG CV4($attributes) string("name")
0025 SEND_FUNC_ARG V18 1
0026 SEND_VAR_EX CV5($serviceId) 2
0027 DO_FCALL
0028 JMP 0019
0029 FE_FREE V15
0030 EXT_STMT
0031 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Extension\array_merge")
0032 T20 = CONCAT string("/home/daniel/www/phpbench/phpbench/lib/Extension/config/report/") CV1($registryType)
0033 T21 = CONCAT T20 string("s.php")
0034 V22 = INCLUDE_OR_EVAL (require) T21
0035 SEND_VAR_NO_REF_EX V22 1
0036 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0037 SEND_VAR_EX CV2($optionName) 1
0038 V23 = DO_FCALL
0039 SEND_VAR_NO_REF_EX V23 2
0040 V24 = DO_FCALL
0041 ASSIGN CV6($configs) V24
0042 EXT_STMT
0043 V26 = FE_RESET_R CV6($configs) 0052
0044 T27 = FE_FETCH_R V26 CV7($config) 0052
0045 ASSIGN CV8($name) T27
0046 EXT_STMT
0047 INIT_METHOD_CALL 2 CV3($registry) string("setConfig")
0048 SEND_VAR_EX CV8($name) 1
0049 SEND_VAR_EX CV7($config) 2
0050 DO_FCALL
0051 JMP 0044
0052 FE_FREE V26
0053 EXT_STMT
0054 RETURN CV3($registry)
0055 EXT_STMT
0056 RETURN null
LIVE RANGES:
     9: 0005 - 0012 (new)
     15: 0019 - 0029 (loop)
     26: 0044 - 0052 (loop)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:194-196
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Report\Transform\SuiteCollectionTransformer")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=23, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:197-204
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 4 string("PhpBench\Report\Generator\ExpressionGenerator")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Expression\ExpressionEvaluator") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 SEND_VAL_EX string("PhpBench\Expression\Printer\EvaluatingPrinter") 1
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 2
0011 INIT_METHOD_CALL 1 CV0($container) string("get")
0012 SEND_VAL_EX string("PhpBench\Report\Transform\SuiteCollectionTransformer") 1
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 3
0015 INIT_METHOD_CALL 1 CV0($container) string("get")
0016 SEND_VAL_EX string("Psr\Log\LoggerInterface") 1
0017 V5 = DO_FCALL
0018 SEND_VAR_NO_REF_EX V5 4
0019 DO_FCALL
0020 RETURN V1
0021 EXT_STMT
0022 RETURN null
LIVE RANGES:
     1: 0003 - 0020 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:205-207
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Report\Generator\EnvGenerator")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:208-210
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Report\Generator\BareGenerator")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Report\Transform\SuiteCollectionTransformer") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:211-213
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Report\Generator\OutputTestGenerator")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:214-218
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Report\Generator\CompositeGenerator")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Report\ReportManager") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=24, args=1, vars=1, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:221-228
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 4 string("PhpBench\Report\Generator\ComponentGenerator")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Report\Transform\SuiteCollectionTransformer") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_REGISTRY_COMPONENT")
0009 SEND_VAL_EX T3 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Report\Bridge\ExpressionBridge") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 INIT_METHOD_CALL 1 CV0($container) string("get")
0017 SEND_VAL_EX string("Psr\Log\LoggerInterface") 1
0018 V6 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V6 4
0020 DO_FCALL
0021 RETURN V1
0022 EXT_STMT
0023 RETURN null
LIVE RANGES:
     1: 0003 - 0021 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:236-240
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Report\Renderer\ConsoleRenderer")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Report\Console\ObjectRenderer") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=17, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:242-247
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 string("PhpBench\Report\Renderer\DelimitedRenderer")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("SERVICE_OUTPUT_STD")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 T4 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ExpressionExtension") string("SERVICE_BARE_PRINTER")
0010 SEND_VAL_EX T4 1
0011 V5 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V5 2
0013 DO_FCALL
0014 RETURN V1
0015 EXT_STMT
0016 RETURN null
LIVE RANGES:
     1: 0003 - 0014 (new)

PhpBench\Extension\{closure}:
     ; (lines=21, args=1, vars=1, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:249-255
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Report\Renderer\HtmlRenderer")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("SERVICE_OUTPUT_STD")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Template\ObjectRenderer") 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0013 T5 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\CoreExtension") string("PARAM_WORKING_DIR")
0014 SEND_VAL_EX T5 1
0015 V6 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V6 3
0017 DO_FCALL
0018 RETURN V1
0019 EXT_STMT
0020 RETURN null
LIVE RANGES:
     1: 0003 - 0018 (new)

PhpBench\Extension\{closure}:
     ; (lines=21, args=1, vars=1, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:260-270
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Template\ObjectRenderer")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Template\ObjectPathResolver\ChainObjectPathResolver") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0008 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_TEMPLATE_PATHS")
0009 SEND_VAL_EX T3 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 V5 = NEW 2 string("PhpBench\Template\TemplateService\ContainerTemplateService")
0013 SEND_VAR_EX CV0($container) 1
0014 SEND_VAL_EX array(...) 2
0015 DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 3
0017 DO_FCALL
0018 RETURN V1
0019 EXT_STMT
0020 RETURN null
LIVE RANGES:
     1: 0003 - 0018 (new)
     5: 0013 - 0016 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:272-274
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Color\GradientBuilder")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=16, args=1, vars=1, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:276-282
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Template\ObjectPathResolver\ChainObjectPathResolver")
0003 V2 = NEW 1 string("PhpBench\Template\ObjectPathResolver\ReflectionObjectPathResolver")
0004 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0005 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_TEMPLATE_MAP")
0006 SEND_VAL_EX T3 1
0007 V4 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V4 1
0009 DO_FCALL
0010 T6 = INIT_ARRAY 1 (packed) V2 NEXT
0011 SEND_VAL_EX T6 1
0012 DO_FCALL
0013 RETURN V1
0014 EXT_STMT
0015 RETURN null
LIVE RANGES:
     1: 0003 - 0013 (new)
     2: 0004 - 0010 (new)

PhpBench\Extension\{closure}:
     ; (lines=21, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:284-293
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Template\Expression\Printer\TemplatePrinter")
0003 V2 = NEW 1 string("PhpBench\Expression\Printer\NormalizingPrinter")
0004 V3 = NEW 2 string("PhpBench\Template\Expression\Printer\TemplateNodePrinter")
0005 INIT_METHOD_CALL 1 CV0($container) string("get")
0006 SEND_VAL_EX string("PhpBench\Template\ObjectRenderer") 1
0007 V4 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V4 1
0009 INIT_METHOD_CALL 1 CV0($container) string("get")
0010 SEND_VAL_EX string("PhpBench\Expression\NodePrinters") 1
0011 V5 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V5 2
0013 DO_FCALL
0014 SEND_VAR_NO_REF_EX V3 1
0015 DO_FCALL
0016 SEND_VAR_NO_REF_EX V2 1
0017 DO_FCALL
0018 RETURN V1
0019 EXT_STMT
0020 RETURN null
LIVE RANGES:
     1: 0003 - 0018 (new)
     2: 0004 - 0016 (new)
     3: 0005 - 0014 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:298-300
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Report\ComponentGenerator\TableAggregateComponent")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Report\Bridge\ExpressionBridge") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:304-306
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Report\ComponentGenerator\BarChartAggregateComponentGenerator")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Expression\ExpressionEvaluator") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:309-311
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Report\ComponentGenerator\TextComponentGenerator")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Expression\ExpressionEvaluator") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=40, args=1, vars=1, tmps=18)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:318-330
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 6 string("PhpBench\Report\Console\ObjectRenderer")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("SERVICE_OUTPUT_STD")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 V4 = NEW 0 string("PhpBench\Report\Console\Renderer\ReportsRenderer")
0009 DO_FCALL
0010 SEND_VAR_NO_REF_EX V4 2
0011 V6 = NEW 2 string("PhpBench\Report\Console\Renderer\BarChartRenderer")
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Expression\ExpressionEvaluator") 1
0014 V7 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V7 1
0016 INIT_METHOD_CALL 1 CV0($container) string("get")
0017 T8 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ExpressionExtension") string("SERVICE_PLAIN_PRINTER")
0018 SEND_VAL_EX T8 1
0019 V9 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V9 2
0021 DO_FCALL
0022 SEND_VAR_NO_REF_EX V6 3
0023 V11 = NEW 0 string("PhpBench\Report\Console\Renderer\ReportRenderer")
0024 DO_FCALL
0025 SEND_VAR_NO_REF_EX V11 4
0026 V13 = NEW 1 string("PhpBench\Report\Console\Renderer\TableRenderer")
0027 INIT_METHOD_CALL 1 CV0($container) string("get")
0028 SEND_VAL_EX string("PhpBench\Expression\Printer") 1
0029 V14 = DO_FCALL
0030 SEND_VAR_NO_REF_EX V14 1
0031 DO_FCALL
0032 SEND_VAR_NO_REF_EX V13 5
0033 V16 = NEW 0 string("PhpBench\Report\Console\Renderer\TextRenderer")
0034 DO_FCALL
0035 SEND_VAR_NO_REF_EX V16 6
0036 DO_FCALL
0037 RETURN V1
0038 EXT_STMT
0039 RETURN null
LIVE RANGES:
     1: 0003 - 0037 (new)
     4: 0009 - 0010 (new)
     6: 0012 - 0022 (new)
     11: 0024 - 0025 (new)
     13: 0027 - 0032 (new)
     16: 0034 - 0035 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:336-340
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Report\Bridge\ExpressionBridge")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Expression\ExpressionEvaluator") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\ReportExtension::configure:
     ; (lines=72, args=1, vars=1, tmps=28)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:70-100
     ; return  [] RANGE[0..0]
0000 CV0($resolver) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 CV0($resolver) string("setDefaults")
0003 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_REPORTS")
0004 T2 = INIT_ARRAY 6 (packed) array(...) T1
0005 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_OUTPUTS")
0006 T2 = ADD_ARRAY_ELEMENT array(...) T3
0007 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_COMPONENTS")
0008 T2 = ADD_ARRAY_ELEMENT array(...) T4
0009 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_TEMPLATE_PATHS")
0010 T2 = ADD_ARRAY_ELEMENT array(...) T5
0011 T6 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_OUTPUT_DIR_HTML")
0012 T2 = ADD_ARRAY_ELEMENT string(".phpbench/html") T6
0013 T7 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_TEMPLATE_MAP")
0014 T2 = ADD_ARRAY_ELEMENT array(...) T7
0015 SEND_VAL_EX T2 1
0016 DO_FCALL
0017 EXT_STMT
0018 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0019 T9 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_TEMPLATE_MAP")
0020 SEND_VAL_EX T9 1
0021 SEND_VAL_EX array(...) 2
0022 DO_FCALL
0023 EXT_STMT
0024 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0025 T11 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_TEMPLATE_PATHS")
0026 SEND_VAL_EX T11 1
0027 SEND_VAL_EX array(...) 2
0028 DO_FCALL
0029 EXT_STMT
0030 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0031 T13 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_OUTPUT_DIR_HTML")
0032 SEND_VAL_EX T13 1
0033 SEND_VAL_EX array(...) 2
0034 DO_FCALL
0035 EXT_STMT
0036 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0037 T15 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_REPORTS")
0038 SEND_VAL_EX T15 1
0039 SEND_VAL_EX array(...) 2
0040 DO_FCALL
0041 EXT_STMT
0042 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0043 T17 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_OUTPUTS")
0044 SEND_VAL_EX T17 1
0045 SEND_VAL_EX array(...) 2
0046 DO_FCALL
0047 EXT_STMT
0048 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0049 T19 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_COMPONENTS")
0050 SEND_VAL_EX T19 1
0051 SEND_VAL_EX array(...) 2
0052 DO_FCALL
0053 EXT_STMT
0054 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Compat\SymfonyOptionsResolverCompat") string("setInfos")
0055 SEND_VAR CV0($resolver) 1
0056 T21 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_REPORTS")
0057 T22 = INIT_ARRAY 6 (packed) string("Report generator configurations, see :doc:`report-generators`") T21
0058 T23 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_COMPONENTS")
0059 T22 = ADD_ARRAY_ELEMENT string("Component configurations, see :doc:`report-components`") T23
0060 T24 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_OUTPUTS")
0061 T22 = ADD_ARRAY_ELEMENT string("Report renderer configurations, see :doc:`report-renderers`") T24
0062 T25 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_TEMPLATE_MAP")
0063 T22 = ADD_ARRAY_ELEMENT string("Namespace prefix to template path map for object rendering") T25
0064 T26 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_TEMPLATE_PATHS")
0065 T22 = ADD_ARRAY_ELEMENT string("List of paths to load templates from") T26
0066 T27 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_OUTPUT_DIR_HTML")
0067 T22 = ADD_ARRAY_ELEMENT string("Path in which to render HTML reports") T27
0068 SEND_VAL T22 2
0069 DO_FCALL
0070 EXT_STMT
0071 RETURN null
LIVE RANGES:
     2: 0005 - 0015 (tmp/var)
     22: 0058 - 0068 (tmp/var)

PhpBench\Extension\ReportExtension::load:
     ; (lines=41, args=1, vars=1, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:102-119
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Report\ReportManager") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 INIT_METHOD_CALL 1 THIS string("registerRenderer")
0009 SEND_VAR_EX CV0($container) 1
0010 DO_FCALL
0011 EXT_STMT
0012 INIT_METHOD_CALL 1 THIS string("registerConsoleRenderer")
0013 SEND_VAR_EX CV0($container) 1
0014 DO_FCALL
0015 EXT_STMT
0016 INIT_METHOD_CALL 1 THIS string("registerCommands")
0017 SEND_VAR_EX CV0($container) 1
0018 DO_FCALL
0019 EXT_STMT
0020 INIT_METHOD_CALL 1 THIS string("registerRegistries")
0021 SEND_VAR_EX CV0($container) 1
0022 DO_FCALL
0023 EXT_STMT
0024 INIT_METHOD_CALL 1 THIS string("registerReportGenerators")
0025 SEND_VAR_EX CV0($container) 1
0026 DO_FCALL
0027 EXT_STMT
0028 INIT_METHOD_CALL 1 THIS string("registerReportRenderers")
0029 SEND_VAR_EX CV0($container) 1
0030 DO_FCALL
0031 EXT_STMT
0032 INIT_METHOD_CALL 1 THIS string("registerComponentGenerators")
0033 SEND_VAR_EX CV0($container) 1
0034 DO_FCALL
0035 EXT_STMT
0036 INIT_METHOD_CALL 1 THIS string("registerBridge")
0037 SEND_VAR_EX CV0($container) 1
0038 DO_FCALL
0039 EXT_STMT
0040 RETURN null

PhpBench\Extension\ReportExtension::registerJson:
     ; (lines=9, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:121-126
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Json\JsonDecoder") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 RETURN null

PhpBench\Extension\ReportExtension::registerCommands:
     ; (lines=27, args=1, vars=1, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:128-158
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Console\Command\Handler\ReportHandler") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 INIT_METHOD_CALL 3 CV0($container) string("register")
0009 SEND_VAL_EX string("PhpBench\Console\Command\ReportCommand") 1
0010 T3 = DECLARE_LAMBDA_FUNCTION string("")
0011 SEND_VAL_EX T3 2
0012 T4 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("TAG_CONSOLE_COMMAND")
0013 T5 = INIT_ARRAY 1 (packed) array(...) T4
0014 SEND_VAL_EX T5 3
0015 DO_FCALL
0016 EXT_STMT
0017 INIT_METHOD_CALL 3 CV0($container) string("register")
0018 SEND_VAL_EX string("PhpBench\Console\Command\ShowCommand") 1
0019 T7 = DECLARE_LAMBDA_FUNCTION string("")
0020 SEND_VAL_EX T7 2
0021 T8 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("TAG_CONSOLE_COMMAND")
0022 T9 = INIT_ARRAY 1 (packed) array(...) T8
0023 SEND_VAL_EX T9 3
0024 DO_FCALL
0025 EXT_STMT
0026 RETURN null

PhpBench\Extension\ReportExtension::registerRegistries:
     ; (lines=24, args=1, vars=3, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:160-190
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_REPORTS")
0003 T4 = INIT_ARRAY 3 T3 string("generator")
0004 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_OUTPUTS")
0005 T4 = ADD_ARRAY_ELEMENT T5 string("renderer")
0006 T6 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_COMPONENTS")
0007 T4 = ADD_ARRAY_ELEMENT T6 string("component")
0008 V7 = FE_RESET_R T4 0021
0009 T8 = FE_FETCH_R V7 CV1($optionName) 0021
0010 ASSIGN CV2($registryType) T8
0011 EXT_STMT
0012 INIT_METHOD_CALL 2 CV0($container) string("register")
0013 T10 = CONCAT string("report.registry_") CV2($registryType)
0014 SEND_VAL_EX T10 1
0015 T11 = DECLARE_LAMBDA_FUNCTION string("")
0016 BIND_LEXICAL T11 CV2($registryType)
0017 BIND_LEXICAL T11 CV1($optionName)
0018 SEND_VAL_EX T11 2
0019 DO_FCALL
0020 JMP 0009
0021 FE_FREE V7
0022 EXT_STMT
0023 RETURN null
LIVE RANGES:
     4: 0004 - 0008 (tmp/var)
     7: 0009 - 0021 (loop)
     11: 0016 - 0018 (tmp/var)

PhpBench\Extension\ReportExtension::registerReportGenerators:
     ; (lines=65, args=1, vars=1, tmps=27)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:192-232
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Report\Transform\SuiteCollectionTransformer") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 INIT_METHOD_CALL 3 CV0($container) string("register")
0009 SEND_VAL_EX string("PhpBench\Report\Generator\ExpressionGenerator") 1
0010 T3 = DECLARE_LAMBDA_FUNCTION string("")
0011 SEND_VAL_EX T3 2
0012 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_REPORT_GENERATOR")
0013 T5 = INIT_ARRAY 1 (packed) array(...) T4
0014 SEND_VAL_EX T5 3
0015 DO_FCALL
0016 EXT_STMT
0017 INIT_METHOD_CALL 3 CV0($container) string("register")
0018 SEND_VAL_EX string("PhpBench\Report\Generator\EnvGenerator") 1
0019 T7 = DECLARE_LAMBDA_FUNCTION string("")
0020 SEND_VAL_EX T7 2
0021 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_REPORT_GENERATOR")
0022 T9 = INIT_ARRAY 1 (packed) array(...) T8
0023 SEND_VAL_EX T9 3
0024 DO_FCALL
0025 EXT_STMT
0026 INIT_METHOD_CALL 3 CV0($container) string("register")
0027 SEND_VAL_EX string("PhpBench\Report\Generator\BareGenerator") 1
0028 T11 = DECLARE_LAMBDA_FUNCTION string("")
0029 SEND_VAL_EX T11 2
0030 T12 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_REPORT_GENERATOR")
0031 T13 = INIT_ARRAY 1 (packed) array(...) T12
0032 SEND_VAL_EX T13 3
0033 DO_FCALL
0034 EXT_STMT
0035 INIT_METHOD_CALL 3 CV0($container) string("register")
0036 SEND_VAL_EX string("PhpBench\Report\Generator\OutputTestGenerator") 1
0037 T15 = DECLARE_LAMBDA_FUNCTION string("")
0038 SEND_VAL_EX T15 2
0039 T16 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_REPORT_GENERATOR")
0040 T17 = INIT_ARRAY 1 (packed) array(...) T16
0041 SEND_VAL_EX T17 3
0042 DO_FCALL
0043 EXT_STMT
0044 INIT_METHOD_CALL 3 CV0($container) string("register")
0045 SEND_VAL_EX string("PhpBench\Report\Generator\CompositeGenerator") 1
0046 T19 = DECLARE_LAMBDA_FUNCTION string("")
0047 SEND_VAL_EX T19 2
0048 T20 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_REPORT_GENERATOR")
0049 T21 = INIT_ARRAY 1 (packed) array(...) T20
0050 SEND_VAL_EX T21 3
0051 DO_FCALL
0052 EXT_STMT
0053 INIT_METHOD_CALL 3 CV0($container) string("register")
0054 SEND_VAL_EX string("PhpBench\Report\Generator\ComponentGenerator") 1
0055 T23 = DECLARE_LAMBDA_FUNCTION string("")
0056 SEND_VAL_EX T23 2
0057 T24 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_REPORT_GENERATOR")
0058 T25 = INIT_ARRAY 2 (packed) array(...) T24
0059 T26 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_COMPONENT_GENERATOR")
0060 T25 = ADD_ARRAY_ELEMENT array(...) T26
0061 SEND_VAL_EX T25 3
0062 DO_FCALL
0063 EXT_STMT
0064 RETURN null
LIVE RANGES:
     25: 0059 - 0061 (tmp/var)

PhpBench\Extension\ReportExtension::registerReportRenderers:
     ; (lines=30, args=1, vars=1, tmps=12)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:234-256
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 3 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Report\Renderer\ConsoleRenderer") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_REPORT_RENDERER")
0007 T3 = INIT_ARRAY 1 (packed) array(...) T2
0008 SEND_VAL_EX T3 3
0009 DO_FCALL
0010 EXT_STMT
0011 INIT_METHOD_CALL 3 CV0($container) string("register")
0012 SEND_VAL_EX string("PhpBench\Report\Renderer\DelimitedRenderer") 1
0013 T5 = DECLARE_LAMBDA_FUNCTION string("")
0014 SEND_VAL_EX T5 2
0015 T6 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_REPORT_RENDERER")
0016 T7 = INIT_ARRAY 1 (packed) array(...) T6
0017 SEND_VAL_EX T7 3
0018 DO_FCALL
0019 EXT_STMT
0020 INIT_METHOD_CALL 3 CV0($container) string("register")
0021 SEND_VAL_EX string("PhpBench\Report\Renderer\HtmlRenderer") 1
0022 T9 = DECLARE_LAMBDA_FUNCTION string("")
0023 SEND_VAL_EX T9 2
0024 T10 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_REPORT_RENDERER")
0025 T11 = INIT_ARRAY 1 (packed) array(...) T10
0026 SEND_VAL_EX T11 3
0027 DO_FCALL
0028 EXT_STMT
0029 RETURN null

PhpBench\Extension\ReportExtension::registerRenderer:
     ; (lines=27, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:258-294
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Template\ObjectRenderer") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 INIT_METHOD_CALL 2 CV0($container) string("register")
0009 SEND_VAL_EX string("PhpBench\Color\GradientBuilder") 1
0010 T3 = DECLARE_LAMBDA_FUNCTION string("")
0011 SEND_VAL_EX T3 2
0012 DO_FCALL
0013 EXT_STMT
0014 INIT_METHOD_CALL 2 CV0($container) string("register")
0015 SEND_VAL_EX string("PhpBench\Template\ObjectPathResolver\ChainObjectPathResolver") 1
0016 T5 = DECLARE_LAMBDA_FUNCTION string("")
0017 SEND_VAL_EX T5 2
0018 DO_FCALL
0019 EXT_STMT
0020 INIT_METHOD_CALL 2 CV0($container) string("register")
0021 SEND_VAL_EX string("PhpBench\Template\Expression\Printer\TemplatePrinter") 1
0022 T7 = DECLARE_LAMBDA_FUNCTION string("")
0023 SEND_VAL_EX T7 2
0024 DO_FCALL
0025 EXT_STMT
0026 RETURN null

PhpBench\Extension\ReportExtension::registerComponentGenerators:
     ; (lines=30, args=1, vars=1, tmps=12)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:296-314
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 3 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Report\ComponentGenerator\TableAggregateComponent") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_COMPONENT_GENERATOR")
0007 T3 = INIT_ARRAY 1 (packed) array(...) T2
0008 SEND_VAL_EX T3 3
0009 DO_FCALL
0010 EXT_STMT
0011 INIT_METHOD_CALL 3 CV0($container) string("register")
0012 SEND_VAL_EX string("PhpBench\Report\ComponentGenerator\BarChartAggregateComponentGenerator") 1
0013 T5 = DECLARE_LAMBDA_FUNCTION string("")
0014 SEND_VAL_EX T5 2
0015 T6 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_COMPONENT_GENERATOR")
0016 T7 = INIT_ARRAY 1 (packed) array(...) T6
0017 SEND_VAL_EX T7 3
0018 DO_FCALL
0019 EXT_STMT
0020 INIT_METHOD_CALL 3 CV0($container) string("register")
0021 SEND_VAL_EX string("PhpBench\Report\ComponentGenerator\TextComponentGenerator") 1
0022 T9 = DECLARE_LAMBDA_FUNCTION string("")
0023 SEND_VAL_EX T9 2
0024 T10 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_COMPONENT_GENERATOR")
0025 T11 = INIT_ARRAY 1 (packed) array(...) T10
0026 SEND_VAL_EX T11 3
0027 DO_FCALL
0028 EXT_STMT
0029 RETURN null

PhpBench\Extension\ReportExtension::registerConsoleRenderer:
     ; (lines=10, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:316-332
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 3 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Report\Console\ObjectRenderer") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 SEND_VAL_EX array(...) 3
0007 DO_FCALL
0008 EXT_STMT
0009 RETURN null

PhpBench\Extension\ReportExtension::registerBridge:
     ; (lines=9, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ReportExtension.php:334-341
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Report\Bridge\ExpressionBridge") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 RETURN null

$_main:
     ; (lines=22, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:1-163
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 NOP
0012 NOP
0013 NOP
0014 NOP
0015 NOP
0016 NOP
0017 NOP
0018 NOP
0019 EXT_STMT
0020 DECLARE_CLASS string("phpbench\extension\storageextension")
0021 RETURN int(1)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:73-75
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Json\JsonDecoder")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=20, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:80-86
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Console\Command\Handler\SuiteCollectionHandler")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Serializer\XmlDecoder") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_REGISTRY_DRIVER")
0009 SEND_VAL_EX T3 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Storage\UuidResolver") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 DO_FCALL
0017 RETURN V1
0018 EXT_STMT
0019 RETURN null
LIVE RANGES:
     1: 0003 - 0017 (new)

PhpBench\Extension\{closure}:
     ; (lines=16, args=1, vars=1, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:88-93
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 string("PhpBench\Console\Command\Handler\DumpHandler")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Serializer\XmlEncoder") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 T3 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("SERVICE_OUTPUT_STD")
0009 SEND_VAL_EX T3 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 DO_FCALL
0013 RETURN V1
0014 EXT_STMT
0015 RETURN null
LIVE RANGES:
     1: 0003 - 0013 (new)

PhpBench\Extension\{closure}:
     ; (lines=26, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:95-103
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 5 string("PhpBench\Console\Command\LogCommand")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_REGISTRY_DRIVER")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Util\TimeUnit") 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 INIT_METHOD_CALL 1 CV0($container) string("get")
0013 SEND_VAL_EX string("PhpBench\Console\Command\Handler\TimeUnitHandler") 1
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 3
0016 SEND_VAL_EX null 4
0017 INIT_METHOD_CALL 1 CV0($container) string("get")
0018 T6 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("SERVICE_OUTPUT_STD")
0019 SEND_VAL_EX T6 1
0020 V7 = DO_FCALL
0021 SEND_VAR_NO_REF_EX V7 5
0022 DO_FCALL
0023 RETURN V1
0024 EXT_STMT
0025 RETURN null
LIVE RANGES:
     1: 0003 - 0023 (new)

PhpBench\Extension\{closure}:
     ; (lines=12, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:110-112
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Serializer\XmlEncoder")
0003 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0004 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_STORE_BINARY")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 DO_FCALL
0009 RETURN V1
0010 EXT_STMT
0011 RETURN null
LIVE RANGES:
     1: 0003 - 0009 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:113-115
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Serializer\XmlDecoder")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=32, args=1, vars=4, tmps=12)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:120-128
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V4 = NEW 2 string("PhpBench\Storage\StorageRegistry")
0003 SEND_VAR_EX CV0($container) 1
0004 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0005 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_STORAGE")
0006 SEND_VAL_EX T5 1
0007 V6 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V6 2
0009 DO_FCALL
0010 ASSIGN CV1($registry) V4
0011 EXT_STMT
0012 INIT_METHOD_CALL 1 CV0($container) string("getServiceIdsForTag")
0013 T9 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_STORAGE_DRIVER")
0014 SEND_VAL_EX T9 1
0015 V10 = DO_FCALL
0016 V11 = FE_RESET_R V10 0027
0017 T12 = FE_FETCH_R V11 CV2($attributes) 0027
0018 ASSIGN CV3($serviceId) T12
0019 EXT_STMT
0020 INIT_METHOD_CALL 2 CV1($registry) string("registerService")
0021 CHECK_FUNC_ARG 1
0022 V14 = FETCH_DIM_FUNC_ARG CV2($attributes) string("name")
0023 SEND_FUNC_ARG V14 1
0024 SEND_VAR_EX CV3($serviceId) 2
0025 DO_FCALL
0026 JMP 0017
0027 FE_FREE V11
0028 EXT_STMT
0029 RETURN CV1($registry)
0030 EXT_STMT
0031 RETURN null
LIVE RANGES:
     4: 0003 - 0010 (new)
     11: 0017 - 0027 (loop)

PhpBench\Extension\{closure}:
     ; (lines=28, args=1, vars=1, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:129-138
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Storage\Driver\Xml\XmlDriver")
0003 INIT_STATIC_METHOD_CALL 2 string("Webmozart\PathUtil\Path") string("makeAbsolute")
0004 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0005 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_XML_STORAGE_PATH")
0006 SEND_VAL_EX T2 1
0007 V3 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V3 1
0009 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0010 T4 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\CoreExtension") string("PARAM_WORKING_DIR")
0011 SEND_VAL_EX T4 1
0012 V5 = DO_FCALL
0013 SEND_VAR_NO_REF_EX V5 2
0014 V6 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V6 1
0016 INIT_METHOD_CALL 1 CV0($container) string("get")
0017 SEND_VAL_EX string("PhpBench\Serializer\XmlEncoder") 1
0018 V7 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V7 2
0020 INIT_METHOD_CALL 1 CV0($container) string("get")
0021 SEND_VAL_EX string("PhpBench\Serializer\XmlDecoder") 1
0022 V8 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V8 3
0024 DO_FCALL
0025 RETURN V1
0026 EXT_STMT
0027 RETURN null
LIVE RANGES:
     1: 0003 - 0025 (new)

PhpBench\Extension\{closure}:
     ; (lines=31, args=1, vars=3, tmps=11)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:140-148
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 ASSIGN CV1($resolvers) array(...)
0003 EXT_STMT
0004 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Extension\array_keys")
0005 INIT_METHOD_CALL 1 CV0($container) string("getServiceIdsForTag")
0006 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_UUID_RESOLVER")
0007 SEND_VAL_EX T4 1
0008 V5 = DO_FCALL
0009 SEND_VAR_NO_REF_EX V5 1
0010 V6 = DO_FCALL
0011 V7 = FE_RESET_R V6 0020
0012 FE_FETCH_R V7 CV2($serviceId) 0020
0013 EXT_STMT
0014 INIT_METHOD_CALL 1 CV0($container) string("get")
0015 SEND_VAR_EX CV2($serviceId) 1
0016 V9 = DO_FCALL
0017 ASSIGN_DIM CV1($resolvers) NEXT
0018 OP_DATA V9
0019 JMP 0012
0020 FE_FREE V7
0021 EXT_STMT
0022 V10 = NEW 1 string("PhpBench\Storage\UuidResolver")
0023 V11 = NEW 1 string("PhpBench\Storage\UuidResolver\ChainResolver")
0024 SEND_VAR_EX CV1($resolvers) 1
0025 DO_FCALL
0026 SEND_VAR_NO_REF_EX V11 1
0027 DO_FCALL
0028 RETURN V10
0029 EXT_STMT
0030 RETURN null
LIVE RANGES:
     7: 0012 - 0020 (loop)
     10: 0023 - 0028 (new)
     11: 0024 - 0026 (new)

PhpBench\Extension\{closure}:
     ; (lines=12, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:150-154
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Storage\UuidResolver\LatestResolver")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_REGISTRY_DRIVER")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 DO_FCALL
0009 RETURN V1
0010 EXT_STMT
0011 RETURN null
LIVE RANGES:
     1: 0003 - 0009 (new)

PhpBench\Extension\{closure}:
     ; (lines=12, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:156-160
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Storage\UuidResolver\TagResolver")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_REGISTRY_DRIVER")
0005 SEND_VAL_EX T2 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 DO_FCALL
0009 RETURN V1
0010 EXT_STMT
0011 RETURN null
LIVE RANGES:
     1: 0003 - 0009 (new)

PhpBench\Extension\StorageExtension::configure:
     ; (lines=42, args=1, vars=1, tmps=16)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:46-62
     ; return  [] RANGE[0..0]
0000 CV0($resolver) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 CV0($resolver) string("setDefaults")
0003 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_STORAGE")
0004 T2 = INIT_ARRAY 3 (packed) string("xml") T1
0005 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_XML_STORAGE_PATH")
0006 T2 = ADD_ARRAY_ELEMENT string(".phpbench/storage") T3
0007 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_STORE_BINARY")
0008 T2 = ADD_ARRAY_ELEMENT bool(false) T4
0009 SEND_VAL_EX T2 1
0010 DO_FCALL
0011 EXT_STMT
0012 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0013 T6 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_STORAGE")
0014 SEND_VAL_EX T6 1
0015 SEND_VAL_EX array(...) 2
0016 DO_FCALL
0017 EXT_STMT
0018 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0019 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_XML_STORAGE_PATH")
0020 SEND_VAL_EX T8 1
0021 SEND_VAL_EX array(...) 2
0022 DO_FCALL
0023 EXT_STMT
0024 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0025 T10 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_STORE_BINARY")
0026 SEND_VAL_EX T10 1
0027 SEND_VAL_EX array(...) 2
0028 DO_FCALL
0029 EXT_STMT
0030 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Compat\SymfonyOptionsResolverCompat") string("setInfos")
0031 SEND_VAR CV0($resolver) 1
0032 T12 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_STORAGE")
0033 T13 = INIT_ARRAY 3 (packed) string("Storage driver to use") T12
0034 T14 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_XML_STORAGE_PATH")
0035 T13 = ADD_ARRAY_ELEMENT string("Path to store benchmark runs when they are stored with ``--store`` or ``--tag=foo``") T14
0036 T15 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_STORE_BINARY")
0037 T13 = ADD_ARRAY_ELEMENT string("If binary and serialized parameter values should be stored") T15
0038 SEND_VAL T13 2
0039 DO_FCALL
0040 EXT_STMT
0041 RETURN null
LIVE RANGES:
     2: 0005 - 0009 (tmp/var)
     13: 0034 - 0038 (tmp/var)

PhpBench\Extension\StorageExtension::load:
     ; (lines=15, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:64-69
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 THIS string("registerCommands")
0003 SEND_VAR_EX CV0($container) 1
0004 DO_FCALL
0005 EXT_STMT
0006 INIT_METHOD_CALL 1 THIS string("registerSerializer")
0007 SEND_VAR_EX CV0($container) 1
0008 DO_FCALL
0009 EXT_STMT
0010 INIT_METHOD_CALL 1 THIS string("registerStorage")
0011 SEND_VAR_EX CV0($container) 1
0012 DO_FCALL
0013 EXT_STMT
0014 RETURN null

PhpBench\Extension\StorageExtension::registerJson:
     ; (lines=9, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:71-76
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Json\JsonDecoder") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 RETURN null

PhpBench\Extension\StorageExtension::registerCommands:
     ; (lines=24, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:78-106
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Console\Command\Handler\SuiteCollectionHandler") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 INIT_METHOD_CALL 2 CV0($container) string("register")
0009 SEND_VAL_EX string("PhpBench\Console\Command\Handler\DumpHandler") 1
0010 T3 = DECLARE_LAMBDA_FUNCTION string("")
0011 SEND_VAL_EX T3 2
0012 DO_FCALL
0013 EXT_STMT
0014 INIT_METHOD_CALL 3 CV0($container) string("register")
0015 SEND_VAL_EX string("PhpBench\Console\Command\LogCommand") 1
0016 T5 = DECLARE_LAMBDA_FUNCTION string("")
0017 SEND_VAL_EX T5 2
0018 T6 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("TAG_CONSOLE_COMMAND")
0019 T7 = INIT_ARRAY 1 (packed) array(...) T6
0020 SEND_VAL_EX T7 3
0021 DO_FCALL
0022 EXT_STMT
0023 RETURN null

PhpBench\Extension\StorageExtension::registerSerializer:
     ; (lines=15, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:108-116
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Serializer\XmlEncoder") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 DO_FCALL
0007 EXT_STMT
0008 INIT_METHOD_CALL 2 CV0($container) string("register")
0009 SEND_VAL_EX string("PhpBench\Serializer\XmlDecoder") 1
0010 T3 = DECLARE_LAMBDA_FUNCTION string("")
0011 SEND_VAL_EX T3 2
0012 DO_FCALL
0013 EXT_STMT
0014 RETURN null

PhpBench\Extension\StorageExtension::registerStorage:
     ; (lines=43, args=1, vars=1, tmps=17)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/StorageExtension.php:118-161
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 2 CV0($container) string("register")
0003 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_REGISTRY_DRIVER")
0004 SEND_VAL_EX T1 1
0005 T2 = DECLARE_LAMBDA_FUNCTION string("")
0006 SEND_VAL_EX T2 2
0007 DO_FCALL
0008 EXT_STMT
0009 INIT_METHOD_CALL 3 CV0($container) string("register")
0010 SEND_VAL_EX string("PhpBench\Storage\Driver\Xml\XmlDriver") 1
0011 T4 = DECLARE_LAMBDA_FUNCTION string("")
0012 SEND_VAL_EX T4 2
0013 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_STORAGE_DRIVER")
0014 T6 = INIT_ARRAY 1 (packed) array(...) T5
0015 SEND_VAL_EX T6 3
0016 DO_FCALL
0017 EXT_STMT
0018 INIT_METHOD_CALL 2 CV0($container) string("register")
0019 SEND_VAL_EX string("PhpBench\Storage\UuidResolver") 1
0020 T8 = DECLARE_LAMBDA_FUNCTION string("")
0021 SEND_VAL_EX T8 2
0022 DO_FCALL
0023 EXT_STMT
0024 INIT_METHOD_CALL 3 CV0($container) string("register")
0025 SEND_VAL_EX string("PhpBench\Storage\UuidResolver\LatestResolver") 1
0026 T10 = DECLARE_LAMBDA_FUNCTION string("")
0027 SEND_VAL_EX T10 2
0028 T11 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_UUID_RESOLVER")
0029 T12 = INIT_ARRAY 1 (packed) array(...) T11
0030 SEND_VAL_EX T12 3
0031 DO_FCALL
0032 EXT_STMT
0033 INIT_METHOD_CALL 3 CV0($container) string("register")
0034 SEND_VAL_EX string("PhpBench\Storage\UuidResolver\TagResolver") 1
0035 T14 = DECLARE_LAMBDA_FUNCTION string("")
0036 SEND_VAL_EX T14 2
0037 T15 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_UUID_RESOLVER")
0038 T16 = INIT_ARRAY 1 (packed) array(...) T15
0039 SEND_VAL_EX T16 3
0040 DO_FCALL
0041 EXT_STMT
0042 RETURN null

$_main:
     ; (lines=120, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:1-389
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 NOP
0012 NOP
0013 NOP
0014 NOP
0015 NOP
0016 NOP
0017 NOP
0018 NOP
0019 NOP
0020 NOP
0021 NOP
0022 NOP
0023 NOP
0024 NOP
0025 NOP
0026 NOP
0027 NOP
0028 NOP
0029 NOP
0030 NOP
0031 NOP
0032 NOP
0033 NOP
0034 NOP
0035 NOP
0036 NOP
0037 NOP
0038 NOP
0039 NOP
0040 NOP
0041 NOP
0042 NOP
0043 NOP
0044 NOP
0045 NOP
0046 NOP
0047 NOP
0048 NOP
0049 NOP
0050 NOP
0051 NOP
0052 NOP
0053 NOP
0054 NOP
0055 NOP
0056 NOP
0057 NOP
0058 NOP
0059 NOP
0060 NOP
0061 NOP
0062 NOP
0063 NOP
0064 NOP
0065 NOP
0066 NOP
0067 NOP
0068 NOP
0069 NOP
0070 NOP
0071 NOP
0072 NOP
0073 NOP
0074 NOP
0075 NOP
0076 NOP
0077 NOP
0078 NOP
0079 NOP
0080 NOP
0081 NOP
0082 NOP
0083 NOP
0084 NOP
0085 NOP
0086 NOP
0087 NOP
0088 NOP
0089 NOP
0090 NOP
0091 NOP
0092 NOP
0093 NOP
0094 NOP
0095 NOP
0096 NOP
0097 NOP
0098 NOP
0099 NOP
0100 NOP
0101 NOP
0102 NOP
0103 NOP
0104 NOP
0105 NOP
0106 NOP
0107 NOP
0108 NOP
0109 NOP
0110 NOP
0111 NOP
0112 NOP
0113 NOP
0114 NOP
0115 NOP
0116 NOP
0117 EXT_STMT
0118 DECLARE_CLASS string("phpbench\extension\expressionextension")
0119 RETURN int(1)

PhpBench\Extension\{closure}:
     ; (lines=32, args=1, vars=1, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:141-150
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 6 string("PhpBench\Console\Command\EvaluateCommand")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Expression\Evaluator") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 SEND_VAL_EX string("PhpBench\Expression\Lexer") 1
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 2
0011 INIT_METHOD_CALL 1 CV0($container) string("get")
0012 SEND_VAL_EX string("PhpBench\Expression\Parser") 1
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 3
0015 INIT_METHOD_CALL 1 CV0($container) string("get")
0016 SEND_VAL_EX string("PhpBench\Expression\Printer") 1
0017 V5 = DO_FCALL
0018 SEND_VAR_NO_REF_EX V5 4
0019 INIT_METHOD_CALL 1 CV0($container) string("get")
0020 SEND_VAL_EX string("PhpBench\Expression\Printer\EvaluatingPrinter") 1
0021 V6 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V6 5
0023 INIT_METHOD_CALL 1 CV0($container) string("get")
0024 T7 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("SERVICE_OUTPUT_STD")
0025 SEND_VAL_EX T7 1
0026 V8 = DO_FCALL
0027 SEND_VAR_NO_REF_EX V8 6
0028 DO_FCALL
0029 RETURN V1
0030 EXT_STMT
0031 RETURN null
LIVE RANGES:
     1: 0003 - 0029 (new)

PhpBench\Extension\{closure}:
     ; (lines=147, args=1, vars=1, tmps=86)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:153-191
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Expression\Parser")
0003 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Parselets") string("fromPrefixParselets")
0004 V2 = NEW 0 string("PhpBench\Expression\Parselet\ListParselet")
0005 DO_FCALL
0006 T4 = INIT_ARRAY 9 (packed) V2 NEXT
0007 V5 = NEW 0 string("PhpBench\Expression\Parselet\FunctionParselet")
0008 DO_FCALL
0009 T4 = ADD_ARRAY_ELEMENT V5 NEXT
0010 V7 = NEW 0 string("PhpBench\Expression\Parselet\IntegerParselet")
0011 DO_FCALL
0012 T4 = ADD_ARRAY_ELEMENT V7 NEXT
0013 V9 = NEW 0 string("PhpBench\Expression\Parselet\FloatParselet")
0014 DO_FCALL
0015 T4 = ADD_ARRAY_ELEMENT V9 NEXT
0016 V11 = NEW 0 string("PhpBench\Expression\Parselet\ParenthesisParselet")
0017 DO_FCALL
0018 T4 = ADD_ARRAY_ELEMENT V11 NEXT
0019 V13 = NEW 0 string("PhpBench\Expression\Parselet\BooleanParselet")
0020 DO_FCALL
0021 T4 = ADD_ARRAY_ELEMENT V13 NEXT
0022 V15 = NEW 0 string("PhpBench\Expression\Parselet\StringParselet")
0023 DO_FCALL
0024 T4 = ADD_ARRAY_ELEMENT V15 NEXT
0025 V17 = NEW 0 string("PhpBench\Expression\Parselet\VariableParselet")
0026 DO_FCALL
0027 T4 = ADD_ARRAY_ELEMENT V17 NEXT
0028 V19 = NEW 0 string("PhpBench\Expression\Parselet\NullParselet")
0029 DO_FCALL
0030 T4 = ADD_ARRAY_ELEMENT V19 NEXT
0031 SEND_VAL_EX T4 1
0032 V21 = DO_FCALL
0033 SEND_VAR_NO_REF_EX V21 1
0034 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Parselets") string("fromInfixParselets")
0035 V22 = NEW 2 string("PhpBench\Expression\Parselet\LogicalOperatorParselet")
0036 T23 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_LOGICAL_OR")
0037 SEND_VAL_EX T23 1
0038 T24 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("LOGICAL_OR")
0039 SEND_VAL_EX T24 2
0040 DO_FCALL
0041 T26 = INIT_ARRAY 17 (packed) V22 NEXT
0042 V27 = NEW 2 string("PhpBench\Expression\Parselet\LogicalOperatorParselet")
0043 T28 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_LOGICAL_AND")
0044 SEND_VAL_EX T28 1
0045 T29 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("LOGICAL_AND")
0046 SEND_VAL_EX T29 2
0047 DO_FCALL
0048 T26 = ADD_ARRAY_ELEMENT V27 NEXT
0049 V31 = NEW 2 string("PhpBench\Expression\Parselet\ArithmeticOperatorParselet")
0050 T32 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_PLUS")
0051 SEND_VAL_EX T32 1
0052 T33 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("SUM")
0053 SEND_VAL_EX T33 2
0054 DO_FCALL
0055 T26 = ADD_ARRAY_ELEMENT V31 NEXT
0056 V35 = NEW 2 string("PhpBench\Expression\Parselet\ArithmeticOperatorParselet")
0057 T36 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_MINUS")
0058 SEND_VAL_EX T36 1
0059 T37 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("SUM")
0060 SEND_VAL_EX T37 2
0061 DO_FCALL
0062 T26 = ADD_ARRAY_ELEMENT V35 NEXT
0063 V39 = NEW 2 string("PhpBench\Expression\Parselet\ArithmeticOperatorParselet")
0064 T40 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_MULTIPLY")
0065 SEND_VAL_EX T40 1
0066 T41 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("PRODUCT")
0067 SEND_VAL_EX T41 2
0068 DO_FCALL
0069 T26 = ADD_ARRAY_ELEMENT V39 NEXT
0070 V43 = NEW 2 string("PhpBench\Expression\Parselet\ArithmeticOperatorParselet")
0071 T44 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_DIVIDE")
0072 SEND_VAL_EX T44 1
0073 T45 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("PRODUCT")
0074 SEND_VAL_EX T45 2
0075 DO_FCALL
0076 T26 = ADD_ARRAY_ELEMENT V43 NEXT
0077 V47 = NEW 2 string("PhpBench\Expression\Parselet\ComparisonParselet")
0078 T48 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_LT")
0079 SEND_VAL_EX T48 1
0080 T49 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("COMPARISON")
0081 SEND_VAL_EX T49 2
0082 DO_FCALL
0083 T26 = ADD_ARRAY_ELEMENT V47 NEXT
0084 V51 = NEW 2 string("PhpBench\Expression\Parselet\ComparisonParselet")
0085 T52 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_LTE")
0086 SEND_VAL_EX T52 1
0087 T53 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("COMPARISON")
0088 SEND_VAL_EX T53 2
0089 DO_FCALL
0090 T26 = ADD_ARRAY_ELEMENT V51 NEXT
0091 V55 = NEW 2 string("PhpBench\Expression\Parselet\ComparisonParselet")
0092 T56 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_EQUALS")
0093 SEND_VAL_EX T56 1
0094 T57 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("COMPARISON_EQUALITY")
0095 SEND_VAL_EX T57 2
0096 DO_FCALL
0097 T26 = ADD_ARRAY_ELEMENT V55 NEXT
0098 V59 = NEW 2 string("PhpBench\Expression\Parselet\ComparisonParselet")
0099 T60 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_GT")
0100 SEND_VAL_EX T60 1
0101 T61 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("COMPARISON")
0102 SEND_VAL_EX T61 2
0103 DO_FCALL
0104 T26 = ADD_ARRAY_ELEMENT V59 NEXT
0105 V63 = NEW 2 string("PhpBench\Expression\Parselet\ComparisonParselet")
0106 T64 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_GTE")
0107 SEND_VAL_EX T64 1
0108 T65 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("COMPARISON")
0109 SEND_VAL_EX T65 2
0110 DO_FCALL
0111 T26 = ADD_ARRAY_ELEMENT V63 NEXT
0112 V67 = NEW 0 string("PhpBench\Expression\Parselet\TolerableParselet")
0113 DO_FCALL
0114 T26 = ADD_ARRAY_ELEMENT V67 NEXT
0115 V69 = NEW 0 string("PhpBench\Expression\Parselet\DisplayAsParselet")
0116 DO_FCALL
0117 T26 = ADD_ARRAY_ELEMENT V69 NEXT
0118 V71 = NEW 0 string("PhpBench\Expression\Parselet\ConcatParselet")
0119 DO_FCALL
0120 T26 = ADD_ARRAY_ELEMENT V71 NEXT
0121 V73 = NEW 0 string("PhpBench\Expression\Parselet\ArrayAccessParselet")
0122 DO_FCALL
0123 T26 = ADD_ARRAY_ELEMENT V73 NEXT
0124 V75 = NEW 0 string("PhpBench\Expression\Parselet\PropertyAccessParselet")
0125 DO_FCALL
0126 T26 = ADD_ARRAY_ELEMENT V75 NEXT
0127 V77 = NEW 0 string("PhpBench\Expression\Parselet\NullSafeParselet")
0128 DO_FCALL
0129 T26 = ADD_ARRAY_ELEMENT V77 NEXT
0130 SEND_VAL_EX T26 1
0131 V79 = DO_FCALL
0132 SEND_VAR_NO_REF_EX V79 2
0133 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Parselets") string("fromSuffixParselets")
0134 V80 = NEW 0 string("PhpBench\Expression\Parselet\ValueWithUnitParselet")
0135 DO_FCALL
0136 T82 = INIT_ARRAY 2 (packed) V80 NEXT
0137 V83 = NEW 0 string("PhpBench\Expression\Parselet\PercentageParselet")
0138 DO_FCALL
0139 T82 = ADD_ARRAY_ELEMENT V83 NEXT
0140 SEND_VAL_EX T82 1
0141 V85 = DO_FCALL
0142 SEND_VAR_NO_REF_EX V85 3
0143 DO_FCALL
0144 RETURN V1
0145 EXT_STMT
0146 RETURN null
LIVE RANGES:
     1: 0003 - 0144 (new)
     2: 0005 - 0006 (new)
     4: 0007 - 0031 (tmp/var)
     5: 0008 - 0009 (new)
     7: 0011 - 0012 (new)
     9: 0014 - 0015 (new)
     11: 0017 - 0018 (new)
     13: 0020 - 0021 (new)
     15: 0023 - 0024 (new)
     17: 0026 - 0027 (new)
     19: 0029 - 0030 (new)
     22: 0036 - 0041 (new)
     26: 0042 - 0130 (tmp/var)
     27: 0043 - 0048 (new)
     31: 0050 - 0055 (new)
     35: 0057 - 0062 (new)
     39: 0064 - 0069 (new)
     43: 0071 - 0076 (new)
     47: 0078 - 0083 (new)
     51: 0085 - 0090 (new)
     55: 0092 - 0097 (new)
     59: 0099 - 0104 (new)
     63: 0106 - 0111 (new)
     67: 0113 - 0114 (new)
     69: 0116 - 0117 (new)
     71: 0119 - 0120 (new)
     73: 0122 - 0123 (new)
     75: 0125 - 0126 (new)
     77: 0128 - 0129 (new)
     80: 0135 - 0136 (new)
     82: 0137 - 0140 (tmp/var)
     83: 0138 - 0139 (new)

PhpBench\Extension\{closure}:
     ; (lines=59, args=1, vars=2, tmps=35)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:193-213
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V2 = NEW 1 string("PhpBench\Expression\NodeEvaluators")
0003 V3 = NEW 0 string("PhpBench\Expression\NodeEvaluator\ArgumentListEvaluator")
0004 DO_FCALL
0005 T5 = INIT_ARRAY 15 (packed) V3 NEXT
0006 V6 = NEW 0 string("PhpBench\Expression\NodeEvaluator\ArithmeticOperatorEvaluator")
0007 DO_FCALL
0008 T5 = ADD_ARRAY_ELEMENT V6 NEXT
0009 V8 = NEW 0 string("PhpBench\Expression\NodeEvaluator\LogicalOperatorEvaluator")
0010 DO_FCALL
0011 T5 = ADD_ARRAY_ELEMENT V8 NEXT
0012 V10 = NEW 1 string("PhpBench\Expression\NodeEvaluator\FunctionEvaluator")
0013 INIT_METHOD_CALL 1 CV0($container) string("get")
0014 SEND_VAL_EX string("PhpBench\Expression\ExpressionFunctions") 1
0015 V11 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V11 1
0017 DO_FCALL
0018 T5 = ADD_ARRAY_ELEMENT V10 NEXT
0019 V13 = NEW 0 string("PhpBench\Expression\NodeEvaluator\ListEvaluator")
0020 DO_FCALL
0021 T5 = ADD_ARRAY_ELEMENT V13 NEXT
0022 V15 = NEW 0 string("PhpBench\Expression\NodeEvaluator\ValueWithUnitEvaluator")
0023 DO_FCALL
0024 T5 = ADD_ARRAY_ELEMENT V15 NEXT
0025 V17 = NEW 0 string("PhpBench\Expression\NodeEvaluator\ParenthesisEvaluator")
0026 DO_FCALL
0027 T5 = ADD_ARRAY_ELEMENT V17 NEXT
0028 V19 = NEW 0 string("PhpBench\Expression\NodeEvaluator\ComparisonEvaluator")
0029 DO_FCALL
0030 T5 = ADD_ARRAY_ELEMENT V19 NEXT
0031 V21 = NEW 0 string("PhpBench\Expression\NodeEvaluator\TolerableEvaluator")
0032 DO_FCALL
0033 T5 = ADD_ARRAY_ELEMENT V21 NEXT
0034 V23 = NEW 0 string("PhpBench\Expression\NodeEvaluator\DisplayAsEvaluator")
0035 DO_FCALL
0036 T5 = ADD_ARRAY_ELEMENT V23 NEXT
0037 V25 = NEW 0 string("PhpBench\Expression\NodeEvaluator\VariableEvaluator")
0038 DO_FCALL
0039 T5 = ADD_ARRAY_ELEMENT V25 NEXT
0040 V27 = NEW 0 string("PhpBench\Expression\NodeEvaluator\ConcatEvaluator")
0041 DO_FCALL
0042 T5 = ADD_ARRAY_ELEMENT V27 NEXT
0043 V29 = NEW 0 string("PhpBench\Expression\NodeEvaluator\PhpValueEvaluator")
0044 DO_FCALL
0045 T5 = ADD_ARRAY_ELEMENT V29 NEXT
0046 V31 = NEW 0 string("PhpBench\Expression\NodeEvaluator\AccessEvaluator")
0047 DO_FCALL
0048 T5 = ADD_ARRAY_ELEMENT V31 NEXT
0049 V33 = NEW 0 string("PhpBench\Expression\NodeEvaluator\NullSafeEvaluator")
0050 DO_FCALL
0051 T5 = ADD_ARRAY_ELEMENT V33 NEXT
0052 SEND_VAL_EX T5 1
0053 DO_FCALL
0054 ASSIGN CV1($evaluators) V2
0055 EXT_STMT
0056 RETURN CV1($evaluators)
0057 EXT_STMT
0058 RETURN null
LIVE RANGES:
     2: 0003 - 0054 (new)
     3: 0004 - 0005 (new)
     5: 0006 - 0052 (tmp/var)
     6: 0007 - 0008 (new)
     8: 0010 - 0011 (new)
     10: 0013 - 0018 (new)
     13: 0020 - 0021 (new)
     15: 0023 - 0024 (new)
     17: 0026 - 0027 (new)
     19: 0029 - 0030 (new)
     21: 0032 - 0033 (new)
     23: 0035 - 0036 (new)
     25: 0038 - 0039 (new)
     27: 0041 - 0042 (new)
     29: 0044 - 0045 (new)
     31: 0047 - 0048 (new)
     33: 0050 - 0051 (new)

PhpBench\Extension\{closure}:
     ; (lines=26, args=1, vars=1, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:215-221
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Expression\Evaluator\PrettyErrorEvaluator")
0003 V2 = NEW 1 string("PhpBench\Expression\Evaluator\MainEvaluator")
0004 INIT_METHOD_CALL 1 CV0($container) string("get")
0005 SEND_VAL_EX string("PhpBench\Expression\NodeEvaluator") 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 DO_FCALL
0009 SEND_VAR_NO_REF_EX V2 1
0010 INIT_METHOD_CALL 1 CV0($container) string("get")
0011 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_PLAIN_PRINTER")
0012 SEND_VAL_EX T5 1
0013 V6 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V6 2
0015 V7 = NEW 1 string("PhpBench\Expression\Printer\UnderlinePrinterFactory")
0016 INIT_METHOD_CALL 1 CV0($container) string("get")
0017 SEND_VAL_EX string("PhpBench\Expression\NodePrinters") 1
0018 V8 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V8 1
0020 DO_FCALL
0021 SEND_VAR_NO_REF_EX V7 3
0022 DO_FCALL
0023 RETURN V1
0024 EXT_STMT
0025 RETURN null
LIVE RANGES:
     1: 0003 - 0023 (new)
     2: 0004 - 0009 (new)
     7: 0016 - 0021 (new)

PhpBench\Extension\{closure}:
     ; (lines=19, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:223-229
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0003 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_SYNTAX_HIGHLIGHTING")
0004 SEND_VAL_EX T1 1
0005 V2 = DO_FCALL
0006 JMPZ V2 0012
0007 EXT_STMT
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Expression\NodePrinter\HighlightingNodePrinter") 1
0010 V3 = DO_FCALL
0011 RETURN V3
0012 EXT_STMT
0013 INIT_METHOD_CALL 1 CV0($container) string("get")
0014 SEND_VAL_EX string("PhpBench\Expression\NodePrinters") 1
0015 V4 = DO_FCALL
0016 RETURN V4
0017 EXT_STMT
0018 RETURN null

PhpBench\Extension\{closure}:
     ; (lines=15, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:231-236
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 string("PhpBench\Expression\NodePrinter\HighlightingNodePrinter")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Expression\NodePrinters") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 SEND_VAL_EX string("PhpBench\Expression\ColorMap") 1
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 2
0011 DO_FCALL
0012 RETURN V1
0013 EXT_STMT
0014 RETURN null
LIVE RANGES:
     1: 0003 - 0012 (new)

PhpBench\Extension\{closure}:
     ; (lines=50, args=1, vars=6, tmps=18)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:238-255
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 ASSIGN CV1($themes) array(...)
0003 EXT_STMT
0004 INIT_METHOD_CALL 1 CV0($container) string("getParameter")
0005 T7 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_THEME")
0006 SEND_VAL_EX T7 1
0007 V8 = DO_FCALL
0008 ASSIGN CV2($selected) V8
0009 EXT_STMT
0010 INIT_METHOD_CALL 1 CV0($container) string("getServiceIdsForTag")
0011 T10 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_THEME")
0012 SEND_VAL_EX T10 1
0013 V11 = DO_FCALL
0014 V12 = FE_RESET_R V11 0033
0015 T13 = FE_FETCH_R V12 CV3($attrs) 0033
0016 ASSIGN CV4($serviceId) T13
0017 EXT_STMT
0018 T15 = FETCH_DIM_R CV3($attrs) string("name")
0019 ASSIGN CV5($name) T15
0020 EXT_STMT
0021 T17 = IS_IDENTICAL CV5($name) CV2($selected)
0022 JMPZ T17 0029
0023 EXT_STMT
0024 INIT_METHOD_CALL 1 CV0($container) string("get")
0025 SEND_VAR_EX CV4($serviceId) 1
0026 V18 = DO_FCALL
0027 FE_FREE V12
0028 RETURN V18
0029 EXT_STMT
0030 ASSIGN_DIM CV1($themes) NEXT
0031 OP_DATA CV5($name)
0032 JMP 0015
0033 FE_FREE V12
0034 EXT_STMT
0035 V20 = NEW 1 string("RuntimeException")
0036 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Extension\sprintf")
0037 SEND_VAL_EX string("Unknown theme "%s", known themes: "%s"") 1
0038 SEND_VAR_EX CV2($selected) 2
0039 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Extension\implode")
0040 SEND_VAL_EX string("", "") 1
0041 SEND_VAR_EX CV1($themes) 2
0042 V21 = DO_FCALL
0043 SEND_VAR_NO_REF_EX V21 3
0044 V22 = DO_FCALL
0045 SEND_VAR_NO_REF_EX V22 1
0046 DO_FCALL
0047 THROW V20
0048 EXT_STMT
0049 RETURN null
LIVE RANGES:
     12: 0015 - 0033 (loop)
     18: 0027 - 0028 (tmp/var)
     20: 0036 - 0047 (new)

PhpBench\Extension\{closure}:
     ; (lines=17, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:257-260
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Extension\class_exists")
0003 SEND_VAL_EX string("Symfony\Component\Console\Formatter\NullOutputFormatter") 1
0004 V1 = DO_FCALL
0005 JMPZ V1 0011
0006 V2 = NEW 1 string("PhpBench\Expression\Theme\SolarizedTheme")
0007 SEND_VAL_EX bool(false) 1
0008 DO_FCALL
0009 T4 = QM_ASSIGN V2
0010 JMP 0014
0011 V5 = NEW 0 string("PhpBench\Expression\Theme\EightColorTheme")
0012 DO_FCALL
0013 T4 = QM_ASSIGN V5
0014 RETURN T4
0015 EXT_STMT
0016 RETURN null
LIVE RANGES:
     2: 0007 - 0009 (new)
     5: 0012 - 0013 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:266-268
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Expression\Theme\EightColorTheme")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=87, args=1, vars=1, tmps=54)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:274-302
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Expression\NodePrinters")
0003 V2 = NEW 0 string("PhpBench\Expression\NodePrinter\ConcatenatedNodePrinter")
0004 DO_FCALL
0005 T4 = INIT_ARRAY 25 (packed) V2 NEXT
0006 V5 = NEW 0 string("PhpBench\Expression\NodePrinter\ArgumentListPrinter")
0007 DO_FCALL
0008 T4 = ADD_ARRAY_ELEMENT V5 NEXT
0009 V7 = NEW 0 string("PhpBench\Expression\NodePrinter\RelativeDeviationPrinter")
0010 DO_FCALL
0011 T4 = ADD_ARRAY_ELEMENT V7 NEXT
0012 V9 = NEW 0 string("PhpBench\Expression\NodePrinter\UnitPrinter")
0013 DO_FCALL
0014 T4 = ADD_ARRAY_ELEMENT V9 NEXT
0015 V11 = NEW 0 string("PhpBench\Expression\NodePrinter\NumberPrinter")
0016 DO_FCALL
0017 T4 = ADD_ARRAY_ELEMENT V11 NEXT
0018 V13 = NEW 0 string("PhpBench\Expression\NodePrinter\BinaryOperatorPrinter")
0019 DO_FCALL
0020 T4 = ADD_ARRAY_ELEMENT V13 NEXT
0021 V15 = NEW 0 string("PhpBench\Expression\NodePrinter\ComparisonPrinter")
0022 DO_FCALL
0023 T4 = ADD_ARRAY_ELEMENT V15 NEXT
0024 V17 = NEW 0 string("PhpBench\Expression\NodePrinter\BooleanPrinter")
0025 DO_FCALL
0026 T4 = ADD_ARRAY_ELEMENT V17 NEXT
0027 V19 = NEW 0 string("PhpBench\Expression\NodePrinter\FunctionPrinter")
0028 DO_FCALL
0029 T4 = ADD_ARRAY_ELEMENT V19 NEXT
0030 V21 = NEW 0 string("PhpBench\Expression\NodePrinter\ListPrinter")
0031 DO_FCALL
0032 T4 = ADD_ARRAY_ELEMENT V21 NEXT
0033 V23 = NEW 0 string("PhpBench\Expression\NodePrinter\ParenthesisPrinter")
0034 DO_FCALL
0035 T4 = ADD_ARRAY_ELEMENT V23 NEXT
0036 V25 = NEW 0 string("PhpBench\Expression\NodePrinter\TolerablePrinter")
0037 DO_FCALL
0038 T4 = ADD_ARRAY_ELEMENT V25 NEXT
0039 V27 = NEW 0 string("PhpBench\Expression\NodePrinter\PercentagePrinter")
0040 DO_FCALL
0041 T4 = ADD_ARRAY_ELEMENT V27 NEXT
0042 V29 = NEW 0 string("PhpBench\Expression\NodePrinter\ValueWithUnitPrinter")
0043 DO_FCALL
0044 T4 = ADD_ARRAY_ELEMENT V29 NEXT
0045 V31 = NEW 1 string("PhpBench\Expression\NodePrinter\DisplayAsPrinter")
0046 INIT_METHOD_CALL 1 CV0($container) string("get")
0047 SEND_VAL_EX string("PhpBench\Util\TimeUnit") 1
0048 V32 = DO_FCALL
0049 SEND_VAR_NO_REF_EX V32 1
0050 DO_FCALL
0051 T4 = ADD_ARRAY_ELEMENT V31 NEXT
0052 V34 = NEW 0 string("PhpBench\Expression\NodePrinter\ParameterPrinter")
0053 DO_FCALL
0054 T4 = ADD_ARRAY_ELEMENT V34 NEXT
0055 V36 = NEW 0 string("PhpBench\Expression\NodePrinter\StringPrinter")
0056 DO_FCALL
0057 T4 = ADD_ARRAY_ELEMENT V36 NEXT
0058 V38 = NEW 0 string("PhpBench\Expression\NodePrinter\LabelPrinter")
0059 DO_FCALL
0060 T4 = ADD_ARRAY_ELEMENT V38 NEXT
0061 V40 = NEW 0 string("PhpBench\Expression\NodePrinter\ConcatPrinter")
0062 DO_FCALL
0063 T4 = ADD_ARRAY_ELEMENT V40 NEXT
0064 V42 = NEW 0 string("PhpBench\Expression\NodePrinter\PercentageDifferencePrinter")
0065 DO_FCALL
0066 T4 = ADD_ARRAY_ELEMENT V42 NEXT
0067 V44 = NEW 0 string("PhpBench\Expression\NodePrinter\NullPrinter")
0068 DO_FCALL
0069 T4 = ADD_ARRAY_ELEMENT V44 NEXT
0070 V46 = NEW 0 string("PhpBench\Expression\NodePrinter\UnrepresentableValuePrinter")
0071 DO_FCALL
0072 T4 = ADD_ARRAY_ELEMENT V46 NEXT
0073 V48 = NEW 0 string("PhpBench\Expression\NodePrinter\VariablePrinter")
0074 DO_FCALL
0075 T4 = ADD_ARRAY_ELEMENT V48 NEXT
0076 V50 = NEW 0 string("PhpBench\Expression\NodePrinter\ArrayAccessPrinter")
0077 DO_FCALL
0078 T4 = ADD_ARRAY_ELEMENT V50 NEXT
0079 V52 = NEW 0 string("PhpBench\Expression\NodePrinter\NullSafePrinter")
0080 DO_FCALL
0081 T4 = ADD_ARRAY_ELEMENT V52 NEXT
0082 SEND_VAL_EX T4 1
0083 DO_FCALL
0084 RETURN V1
0085 EXT_STMT
0086 RETURN null
LIVE RANGES:
     1: 0003 - 0084 (new)
     2: 0004 - 0005 (new)
     4: 0006 - 0082 (tmp/var)
     5: 0007 - 0008 (new)
     7: 0010 - 0011 (new)
     9: 0013 - 0014 (new)
     11: 0016 - 0017 (new)
     13: 0019 - 0020 (new)
     15: 0022 - 0023 (new)
     17: 0025 - 0026 (new)
     19: 0028 - 0029 (new)
     21: 0031 - 0032 (new)
     23: 0034 - 0035 (new)
     25: 0037 - 0038 (new)
     27: 0040 - 0041 (new)
     29: 0043 - 0044 (new)
     31: 0046 - 0051 (new)
     34: 0053 - 0054 (new)
     36: 0056 - 0057 (new)
     38: 0059 - 0060 (new)
     40: 0062 - 0063 (new)
     42: 0065 - 0066 (new)
     44: 0068 - 0069 (new)
     46: 0071 - 0072 (new)
     48: 0074 - 0075 (new)
     50: 0077 - 0078 (new)
     52: 0080 - 0081 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:304-306
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Expression\Printer\NormalizingPrinter")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Expression\NodePrinter") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:308-310
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Expression\Printer\NormalizingPrinter")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Expression\NodePrinters") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 DO_FCALL
0008 RETURN V1
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)

PhpBench\Extension\{closure}:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:311-313
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 0 string("PhpBench\Expression\Printer\BareValuePrinter")
0003 DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (new)

PhpBench\Extension\{closure}:
     ; (lines=16, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:315-328
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Expression\Printer\EvaluatingPrinter")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Expression\NodePrinter") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 SEND_VAL_EX string("PhpBench\Expression\Evaluator") 1
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 2
0011 SEND_VAL_EX array(...) 3
0012 DO_FCALL
0013 RETURN V1
0014 EXT_STMT
0015 RETURN null
LIVE RANGES:
     1: 0003 - 0013 (new)

PhpBench\Extension\{closure}:
     ; (lines=58, args=0, vars=0, tmps=37)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:330-350
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 1 string("PhpBench\Expression\ExpressionFunctions")
0002 V1 = NEW 0 string("PhpBench\Expression\Func\ModeFunction")
0003 DO_FCALL
0004 T3 = INIT_ARRAY 17 V1 string("mode")
0005 V4 = NEW 0 string("PhpBench\Expression\Func\MeanFunction")
0006 DO_FCALL
0007 T3 = ADD_ARRAY_ELEMENT V4 string("mean")
0008 V6 = NEW 0 string("PhpBench\Expression\Func\MinFunction")
0009 DO_FCALL
0010 T3 = ADD_ARRAY_ELEMENT V6 string("min")
0011 V8 = NEW 0 string("PhpBench\Expression\Func\MaxFunction")
0012 DO_FCALL
0013 T3 = ADD_ARRAY_ELEMENT V8 string("max")
0014 V10 = NEW 0 string("PhpBench\Expression\Func\StDevFunction")
0015 DO_FCALL
0016 T3 = ADD_ARRAY_ELEMENT V10 string("stdev")
0017 V12 = NEW 0 string("PhpBench\Expression\Func\RStDevFunction")
0018 DO_FCALL
0019 T3 = ADD_ARRAY_ELEMENT V12 string("rstdev")
0020 V14 = NEW 0 string("PhpBench\Expression\Func\VarianceFunction")
0021 DO_FCALL
0022 T3 = ADD_ARRAY_ELEMENT V14 string("variance")
0023 V16 = NEW 0 string("PhpBench\Expression\Func\PercentDifferenceFunction")
0024 DO_FCALL
0025 T3 = ADD_ARRAY_ELEMENT V16 string("percent_diff")
0026 V18 = NEW 0 string("PhpBench\Expression\Func\FormatFunction")
0027 DO_FCALL
0028 T3 = ADD_ARRAY_ELEMENT V18 string("format")
0029 V20 = NEW 0 string("PhpBench\Expression\Func\JoinFunction")
0030 DO_FCALL
0031 T3 = ADD_ARRAY_ELEMENT V20 string("join")
0032 V22 = NEW 0 string("PhpBench\Expression\Func\FirstFunction")
0033 DO_FCALL
0034 T3 = ADD_ARRAY_ELEMENT V22 string("first")
0035 V24 = NEW 0 string("PhpBench\Expression\Func\CoalesceFunction")
0036 DO_FCALL
0037 T3 = ADD_ARRAY_ELEMENT V24 string("coalesce")
0038 V26 = NEW 0 string("PhpBench\Expression\Func\DisplayAsTimeFunction")
0039 DO_FCALL
0040 T3 = ADD_ARRAY_ELEMENT V26 string("display_as_time")
0041 V28 = NEW 0 string("PhpBench\Expression\Func\LabelFunction")
0042 DO_FCALL
0043 T3 = ADD_ARRAY_ELEMENT V28 string("label")
0044 V30 = NEW 0 string("PhpBench\Expression\Func\CountFunction")
0045 DO_FCALL
0046 T3 = ADD_ARRAY_ELEMENT V30 string("count")
0047 V32 = NEW 0 string("PhpBench\Expression\Func\SumFunction")
0048 DO_FCALL
0049 T3 = ADD_ARRAY_ELEMENT V32 string("sum")
0050 V34 = NEW 0 string("PhpBench\Expression\Func\FrameFunction")
0051 DO_FCALL
0052 T3 = ADD_ARRAY_ELEMENT V34 string("frame")
0053 SEND_VAL_EX T3 1
0054 DO_FCALL
0055 RETURN V0
0056 EXT_STMT
0057 RETURN null
LIVE RANGES:
     0: 0002 - 0055 (new)
     1: 0003 - 0004 (new)
     3: 0005 - 0053 (tmp/var)
     4: 0006 - 0007 (new)
     6: 0009 - 0010 (new)
     8: 0012 - 0013 (new)
     10: 0015 - 0016 (new)
     12: 0018 - 0019 (new)
     14: 0021 - 0022 (new)
     16: 0024 - 0025 (new)
     18: 0027 - 0028 (new)
     20: 0030 - 0031 (new)
     22: 0033 - 0034 (new)
     24: 0036 - 0037 (new)
     26: 0039 - 0040 (new)
     28: 0042 - 0043 (new)
     30: 0045 - 0046 (new)
     32: 0048 - 0049 (new)
     34: 0051 - 0052 (new)

PhpBench\Extension\{closure}:
     ; (lines=10, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:352-354
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Expression\Lexer")
0003 INIT_STATIC_METHOD_CALL 0 string("PhpBench\Expression\NodePrinter\DisplayAsPrinter") string("supportedUnitNames")
0004 V2 = DO_FCALL
0005 SEND_VAR_NO_REF_EX V2 1
0006 DO_FCALL
0007 RETURN V1
0008 EXT_STMT
0009 RETURN null
LIVE RANGES:
     1: 0003 - 0007 (new)

PhpBench\Extension\{closure}:
     ; (lines=18, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:356-360
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Expression\ExpressionLanguage\MemoisedExpressionLanguage")
0003 V2 = NEW 2 string("PhpBench\Expression\ExpressionLanguage\RealExpressionLanguage")
0004 INIT_METHOD_CALL 1 CV0($container) string("get")
0005 SEND_VAL_EX string("PhpBench\Expression\Lexer") 1
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 1 CV0($container) string("get")
0009 SEND_VAL_EX string("PhpBench\Expression\Parser") 1
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 2
0012 DO_FCALL
0013 SEND_VAR_NO_REF_EX V2 1
0014 DO_FCALL
0015 RETURN V1
0016 EXT_STMT
0017 RETURN null
LIVE RANGES:
     1: 0003 - 0015 (new)
     2: 0004 - 0013 (new)

PhpBench\Extension\{closure}:
     ; (lines=19, args=1, vars=1, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:363-369
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 string("PhpBench\Expression\ExpressionEvaluator")
0003 INIT_METHOD_CALL 1 CV0($container) string("get")
0004 SEND_VAL_EX string("PhpBench\Expression\ExpressionLanguage") 1
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 INIT_METHOD_CALL 1 CV0($container) string("get")
0008 SEND_VAL_EX string("PhpBench\Expression\Evaluator") 1
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 2
0011 INIT_METHOD_CALL 1 CV0($container) string("get")
0012 SEND_VAL_EX string("PhpBench\Expression\Printer") 1
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 3
0015 DO_FCALL
0016 RETURN V1
0017 EXT_STMT
0018 RETURN null
LIVE RANGES:
     1: 0003 - 0016 (new)

PhpBench\Extension\ExpressionExtension::load:
     ; (lines=126, args=1, vars=1, tmps=48)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:139-370
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 3 CV0($container) string("register")
0003 SEND_VAL_EX string("PhpBench\Console\Command\EvaluateCommand") 1
0004 T1 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T1 2
0006 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Extension\ConsoleExtension") string("TAG_CONSOLE_COMMAND")
0007 T3 = INIT_ARRAY 1 (packed) array(...) T2
0008 SEND_VAL_EX T3 3
0009 DO_FCALL
0010 EXT_STMT
0011 INIT_METHOD_CALL 2 CV0($container) string("register")
0012 SEND_VAL_EX string("PhpBench\Expression\Parser") 1
0013 T5 = DECLARE_LAMBDA_FUNCTION string("")
0014 SEND_VAL_EX T5 2
0015 DO_FCALL
0016 EXT_STMT
0017 INIT_METHOD_CALL 2 CV0($container) string("register")
0018 SEND_VAL_EX string("PhpBench\Expression\NodeEvaluator") 1
0019 T7 = DECLARE_LAMBDA_FUNCTION string("")
0020 SEND_VAL_EX T7 2
0021 DO_FCALL
0022 EXT_STMT
0023 INIT_METHOD_CALL 2 CV0($container) string("register")
0024 SEND_VAL_EX string("PhpBench\Expression\Evaluator") 1
0025 T9 = DECLARE_LAMBDA_FUNCTION string("")
0026 SEND_VAL_EX T9 2
0027 DO_FCALL
0028 EXT_STMT
0029 INIT_METHOD_CALL 2 CV0($container) string("register")
0030 SEND_VAL_EX string("PhpBench\Expression\NodePrinter") 1
0031 T11 = DECLARE_LAMBDA_FUNCTION string("")
0032 SEND_VAL_EX T11 2
0033 DO_FCALL
0034 EXT_STMT
0035 INIT_METHOD_CALL 2 CV0($container) string("register")
0036 SEND_VAL_EX string("PhpBench\Expression\NodePrinter\HighlightingNodePrinter") 1
0037 T13 = DECLARE_LAMBDA_FUNCTION string("")
0038 SEND_VAL_EX T13 2
0039 DO_FCALL
0040 EXT_STMT
0041 INIT_METHOD_CALL 2 CV0($container) string("register")
0042 SEND_VAL_EX string("PhpBench\Expression\ColorMap") 1
0043 T15 = DECLARE_LAMBDA_FUNCTION string("")
0044 SEND_VAL_EX T15 2
0045 DO_FCALL
0046 EXT_STMT
0047 INIT_METHOD_CALL 3 CV0($container) string("register")
0048 SEND_VAL_EX string("PhpBench\Expression\Theme\SolarizedTheme") 1
0049 T17 = DECLARE_LAMBDA_FUNCTION string("")
0050 SEND_VAL_EX T17 2
0051 T18 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_THEME")
0052 T19 = FETCH_CLASS_CONSTANT (self) (exception) string("THEME_SOLARIZED")
0053 T20 = INIT_ARRAY 1 T19 string("name")
0054 T21 = INIT_ARRAY 1 (packed) T20 T18
0055 SEND_VAL_EX T21 3
0056 DO_FCALL
0057 EXT_STMT
0058 INIT_METHOD_CALL 3 CV0($container) string("register")
0059 SEND_VAL_EX string("PhpBench\Expression\Theme\EightColorTheme") 1
0060 T23 = DECLARE_LAMBDA_FUNCTION string("")
0061 SEND_VAL_EX T23 2
0062 T24 = FETCH_CLASS_CONSTANT (self) (exception) string("TAG_THEME")
0063 T25 = FETCH_CLASS_CONSTANT (self) (exception) string("THEME_BASIC")
0064 T26 = INIT_ARRAY 1 T25 string("name")
0065 T27 = INIT_ARRAY 1 (packed) T26 T24
0066 SEND_VAL_EX T27 3
0067 DO_FCALL
0068 EXT_STMT
0069 INIT_METHOD_CALL 2 CV0($container) string("register")
0070 SEND_VAL_EX string("PhpBench\Expression\NodePrinters") 1
0071 T29 = DECLARE_LAMBDA_FUNCTION string("")
0072 SEND_VAL_EX T29 2
0073 DO_FCALL
0074 EXT_STMT
0075 INIT_METHOD_CALL 2 CV0($container) string("register")
0076 SEND_VAL_EX string("PhpBench\Expression\Printer") 1
0077 T31 = DECLARE_LAMBDA_FUNCTION string("")
0078 SEND_VAL_EX T31 2
0079 DO_FCALL
0080 EXT_STMT
0081 INIT_METHOD_CALL 2 CV0($container) string("register")
0082 T33 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_PLAIN_PRINTER")
0083 SEND_VAL_EX T33 1
0084 T34 = DECLARE_LAMBDA_FUNCTION string("")
0085 SEND_VAL_EX T34 2
0086 DO_FCALL
0087 EXT_STMT
0088 INIT_METHOD_CALL 2 CV0($container) string("register")
0089 T36 = FETCH_CLASS_CONSTANT (self) (exception) string("SERVICE_BARE_PRINTER")
0090 SEND_VAL_EX T36 1
0091 T37 = DECLARE_LAMBDA_FUNCTION string("")
0092 SEND_VAL_EX T37 2
0093 DO_FCALL
0094 EXT_STMT
0095 INIT_METHOD_CALL 2 CV0($container) string("register")
0096 SEND_VAL_EX string("PhpBench\Expression\Printer\EvaluatingPrinter") 1
0097 T39 = DECLARE_LAMBDA_FUNCTION string("")
0098 SEND_VAL_EX T39 2
0099 DO_FCALL
0100 EXT_STMT
0101 INIT_METHOD_CALL 2 CV0($container) string("register")
0102 SEND_VAL_EX string("PhpBench\Expression\ExpressionFunctions") 1
0103 T41 = DECLARE_LAMBDA_FUNCTION string("")
0104 SEND_VAL_EX T41 2
0105 DO_FCALL
0106 EXT_STMT
0107 INIT_METHOD_CALL 2 CV0($container) string("register")
0108 SEND_VAL_EX string("PhpBench\Expression\Lexer") 1
0109 T43 = DECLARE_LAMBDA_FUNCTION string("")
0110 SEND_VAL_EX T43 2
0111 DO_FCALL
0112 EXT_STMT
0113 INIT_METHOD_CALL 2 CV0($container) string("register")
0114 SEND_VAL_EX string("PhpBench\Expression\ExpressionLanguage") 1
0115 T45 = DECLARE_LAMBDA_FUNCTION string("")
0116 SEND_VAL_EX T45 2
0117 DO_FCALL
0118 EXT_STMT
0119 INIT_METHOD_CALL 2 CV0($container) string("register")
0120 SEND_VAL_EX string("PhpBench\Expression\ExpressionEvaluator") 1
0121 T47 = DECLARE_LAMBDA_FUNCTION string("")
0122 SEND_VAL_EX T47 2
0123 DO_FCALL
0124 EXT_STMT
0125 RETURN null
LIVE RANGES:
     18: 0052 - 0054 (tmp/var)
     24: 0063 - 0065 (tmp/var)

PhpBench\Extension\ExpressionExtension::configure:
     ; (lines=33, args=1, vars=1, tmps=13)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Extension/ExpressionExtension.php:375-387
     ; return  [] RANGE[0..0]
0000 CV0($resolver) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 CV0($resolver) string("setDefaults")
0003 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_SYNTAX_HIGHLIGHTING")
0004 T2 = INIT_ARRAY 2 (packed) bool(true) T1
0005 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_THEME")
0006 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("THEME_SOLARIZED")
0007 T2 = ADD_ARRAY_ELEMENT T4 T3
0008 SEND_VAL_EX T2 1
0009 DO_FCALL
0010 EXT_STMT
0011 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0012 T6 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_SYNTAX_HIGHLIGHTING")
0013 SEND_VAL_EX T6 1
0014 SEND_VAL_EX string("bool") 2
0015 DO_FCALL
0016 EXT_STMT
0017 INIT_METHOD_CALL 2 CV0($resolver) string("setAllowedTypes")
0018 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_THEME")
0019 SEND_VAL_EX T8 1
0020 SEND_VAL_EX string("string") 2
0021 DO_FCALL
0022 EXT_STMT
0023 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Compat\SymfonyOptionsResolverCompat") string("setInfos")
0024 SEND_VAR CV0($resolver) 1
0025 T10 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_SYNTAX_HIGHLIGHTING")
0026 T11 = INIT_ARRAY 2 (packed) string("Enable syntax highlighting") T10
0027 T12 = FETCH_CLASS_CONSTANT (self) (exception) string("PARAM_THEME")
0028 T11 = ADD_ARRAY_ELEMENT string("Select a theme to use") T12
0029 SEND_VAL T11 2
0030 DO_FCALL
0031 EXT_STMT
0032 RETURN null
LIVE RANGES:
     2: 0005 - 0008 (tmp/var)
     3: 0006 - 0007 (tmp/var)
     11: 0027 - 0029 (tmp/var)

$_main:
     ; (lines=15, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/AssertionProcessor.php:1-97
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 NOP
0012 NOP
0013 EXT_STMT
0014 RETURN int(1)

PhpBench\Assertion\AssertionProcessor::__construct:
     ; (lines=22, args=5, vars=5, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/AssertionProcessor.php:51-63
     ; return  [] RANGE[0..0]
0000 CV0($expressionLanaugage) = RECV 1
0001 CV1($evaluator) = RECV 2
0002 CV2($printer) = RECV 3
0003 CV3($evaluatingPrinter) = RECV 4
0004 CV4($provider) = RECV 5
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("evaluator")
0007 OP_DATA CV1($evaluator)
0008 EXT_STMT
0009 ASSIGN_OBJ THIS string("printer")
0010 OP_DATA CV2($printer)
0011 EXT_STMT
0012 ASSIGN_OBJ THIS string("provider")
0013 OP_DATA CV4($provider)
0014 EXT_STMT
0015 ASSIGN_OBJ THIS string("evaluatingPrinter")
0016 OP_DATA CV3($evaluatingPrinter)
0017 EXT_STMT
0018 ASSIGN_OBJ THIS string("expressionLanaugage")
0019 OP_DATA CV0($expressionLanaugage)
0020 EXT_STMT
0021 RETURN null

PhpBench\Assertion\AssertionProcessor::assert:
     ; (lines=91, args=2, vars=6, tmps=30)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/AssertionProcessor.php:65-95
     ; return  [] RANGE[0..0]
0000 CV0($variant) = RECV 1
0001 CV1($assertion) = RECV 2
0002 EXT_STMT
0003 T6 = FETCH_OBJ_R THIS string("expressionLanaugage")
0004 INIT_METHOD_CALL 1 T6 string("parse")
0005 SEND_VAR_EX CV1($assertion) 1
0006 V7 = DO_FCALL
0007 ASSIGN CV2($node) V7
0008 EXT_STMT
0009 T9 = FETCH_OBJ_R THIS string("provider")
0010 INIT_METHOD_CALL 1 T9 string("provideFor")
0011 SEND_VAR_EX CV0($variant) 1
0012 V10 = DO_FCALL
0013 ASSIGN CV3($params) V10
0014 EXT_STMT
0015 T12 = FETCH_OBJ_R THIS string("evaluator")
0016 INIT_METHOD_CALL 2 T12 string("evaluate")
0017 SEND_VAR_EX CV2($node) 1
0018 SEND_VAR_EX CV3($params) 2
0019 V13 = DO_FCALL
0020 ASSIGN CV4($evaluated) V13
0021 EXT_STMT
0022 INIT_NS_FCALL_BY_NAME 4 string("PhpBench\Assertion\sprintf")
0023 SEND_VAL_EX string("%s
= %s
= %s") 1
0024 T15 = FETCH_OBJ_R THIS string("printer")
0025 INIT_METHOD_CALL 1 T15 string("print")
0026 SEND_VAR_EX CV2($node) 1
0027 V16 = DO_FCALL
0028 SEND_VAR_NO_REF_EX V16 2
0029 T17 = FETCH_OBJ_R THIS string("evaluatingPrinter")
0030 INIT_METHOD_CALL 1 T17 string("withParams")
0031 SEND_VAR_EX CV3($params) 1
0032 V18 = DO_FCALL
0033 INIT_METHOD_CALL 1 V18 string("print")
0034 SEND_VAR_EX CV2($node) 1
0035 V19 = DO_FCALL
0036 SEND_VAR_NO_REF_EX V19 3
0037 T20 = FETCH_OBJ_R THIS string("printer")
0038 INIT_METHOD_CALL 1 T20 string("print")
0039 SEND_VAR_EX CV4($evaluated) 1
0040 V21 = DO_FCALL
0041 SEND_VAR_NO_REF_EX V21 4
0042 V22 = DO_FCALL
0043 ASSIGN CV5($message) V22
0044 EXT_STMT
0045 T24 = INSTANCEOF CV4($evaluated) string("PhpBench\Expression\Ast\BooleanNode")
0046 JMPZ T24 0062
0047 EXT_STMT
0048 INIT_METHOD_CALL 0 CV4($evaluated) string("value")
0049 V25 = DO_FCALL
0050 JMPZ V25 0056
0051 EXT_STMT
0052 INIT_STATIC_METHOD_CALL 0 string("PhpBench\Assertion\AssertionResult") string("ok")
0053 V26 = DO_FCALL
0054 VERIFY_RETURN_TYPE V26
0055 RETURN V26
0056 EXT_STMT
0057 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Assertion\AssertionResult") string("fail")
0058 SEND_VAR_EX CV5($message) 1
0059 V27 = DO_FCALL
0060 VERIFY_RETURN_TYPE V27
0061 RETURN V27
0062 EXT_STMT
0063 T28 = INSTANCEOF CV4($evaluated) string("PhpBench\Expression\Ast\ToleratedTrue")
0064 JMPZ T28 0071
0065 EXT_STMT
0066 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Assertion\AssertionResult") string("tolerated")
0067 SEND_VAR_EX CV5($message) 1
0068 V29 = DO_FCALL
0069 VERIFY_RETURN_TYPE V29
0070 RETURN V29
0071 EXT_STMT
0072 V30 = NEW 1 string("PhpBench\Assertion\Exception\AssertionError")
0073 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Assertion\sprintf")
0074 SEND_VAL_EX string("Assertion expression must evaluate to a boolean-like value, got "%s" as "%s"") 1
0075 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Assertion\get_class")
0076 SEND_VAR_EX CV4($evaluated) 1
0077 V31 = DO_FCALL
0078 SEND_VAR_NO_REF_EX V31 2
0079 T32 = FETCH_OBJ_R THIS string("printer")
0080 INIT_METHOD_CALL 1 T32 string("print")
0081 SEND_VAR_EX CV4($evaluated) 1
0082 V33 = DO_FCALL
0083 SEND_VAR_NO_REF_EX V33 3
0084 V34 = DO_FCALL
0085 SEND_VAR_NO_REF_EX V34 1
0086 DO_FCALL
0087 THROW V30
0088 EXT_STMT
0089 VERIFY_RETURN_TYPE
0090 RETURN null
LIVE RANGES:
     26: 0054 - 0055 (tmp/var)
     27: 0060 - 0061 (tmp/var)
     29: 0069 - 0070 (tmp/var)
     30: 0073 - 0087 (new)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ExpressionLanguage/MemoisedExpressionLanguage.php:1-36
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\expressionlanguage\memoisedexpressionlanguage")
0006 RETURN int(1)

PhpBench\Expression\ExpressionLanguage\MemoisedExpressionLanguage::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ExpressionLanguage/MemoisedExpressionLanguage.php:20-23
     ; return  [] RANGE[0..0]
0000 CV0($inner) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("inner")
0003 OP_DATA CV0($inner)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\ExpressionLanguage\MemoisedExpressionLanguage::parse:
     ; (lines=26, args=1, vars=1, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ExpressionLanguage/MemoisedExpressionLanguage.php:25-34
     ; return  [] RANGE[0..0]
0000 CV0($expression) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("cache")
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($expression)
0004 JMPZ T2 0010
0005 EXT_STMT
0006 T3 = FETCH_OBJ_R THIS string("cache")
0007 T4 = FETCH_DIM_R T3 CV0($expression)
0008 VERIFY_RETURN_TYPE T4
0009 RETURN T4
0010 EXT_STMT
0011 T7 = FETCH_OBJ_R THIS string("inner")
0012 INIT_METHOD_CALL 1 T7 string("parse")
0013 SEND_VAR_EX CV0($expression) 1
0014 V8 = DO_FCALL
0015 V5 = FETCH_OBJ_W (dim write) THIS string("cache")
0016 ASSIGN_DIM V5 CV0($expression)
0017 OP_DATA V8
0018 EXT_STMT
0019 T9 = FETCH_OBJ_R THIS string("cache")
0020 T10 = FETCH_DIM_R T9 CV0($expression)
0021 VERIFY_RETURN_TYPE T10
0022 RETURN T10
0023 EXT_STMT
0024 VERIFY_RETURN_TYPE
0025 RETURN null
LIVE RANGES:
     4: 0008 - 0009 (tmp/var)
     8: 0015 - 0016 (tmp/var)
     10: 0021 - 0022 (tmp/var)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ExpressionLanguage.php:1-11
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 RETURN int(1)

PhpBench\Expression\ExpressionLanguage::parse:
     ; (lines=4, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ExpressionLanguage.php:9-9
     ; return  [] RANGE[0..0]
0000 CV0($expression) = RECV 1
0001 EXT_STMT
0002 VERIFY_RETURN_TYPE
0003 RETURN null

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ExpressionLanguage/RealExpressionLanguage.php:1-32
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\expressionlanguage\realexpressionlanguage")
0008 RETURN int(1)

PhpBench\Expression\ExpressionLanguage\RealExpressionLanguage::__construct:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ExpressionLanguage/RealExpressionLanguage.php:21-25
     ; return  [] RANGE[0..0]
0000 CV0($lexer) = RECV 1
0001 CV1($parser) = RECV 2
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("lexer")
0004 OP_DATA CV0($lexer)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("parser")
0007 OP_DATA CV1($parser)
0008 EXT_STMT
0009 RETURN null

PhpBench\Expression\ExpressionLanguage\RealExpressionLanguage::parse:
     ; (lines=15, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ExpressionLanguage/RealExpressionLanguage.php:27-30
     ; return  [] RANGE[0..0]
0000 CV0($expression) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_R THIS string("parser")
0003 INIT_METHOD_CALL 1 T1 string("parse")
0004 T2 = FETCH_OBJ_R THIS string("lexer")
0005 INIT_METHOD_CALL 1 T2 string("lex")
0006 SEND_VAR_EX CV0($expression) 1
0007 V3 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V3 1
0009 V4 = DO_FCALL
0010 VERIFY_RETURN_TYPE V4
0011 RETURN V4
0012 EXT_STMT
0013 VERIFY_RETURN_TYPE
0014 RETURN null
LIVE RANGES:
     4: 0010 - 0011 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Lexer.php:1-139
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 RETURN int(1)

PhpBench\Expression\{closure}:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Lexer.php:70-72
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\preg_quote")
0003 SEND_VAR_EX CV0($value) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

PhpBench\Expression\Lexer::__construct:
     ; (lines=32, args=1, vars=1, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Lexer.php:65-76
     ; return  [] RANGE[0..0]
0000 CV0($unitNames) = RECV_INIT 1 array(...)
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\sprintf")
0003 SEND_VAL_EX string("{(%s)|(%s)|\n|\r}iu") 1
0004 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\implode")
0005 SEND_VAL_EX string(")|(") 1
0006 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\array_map")
0007 T2 = DECLARE_LAMBDA_FUNCTION string("")
0008 SEND_VAL_EX T2 1
0009 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\array_keys")
0010 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("TOKEN_VALUE_MAP")
0011 SEND_VAL_EX T3 1
0012 V4 = DO_FCALL
0013 SEND_VAR_NO_REF_EX V4 2
0014 V5 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V5 2
0016 V6 = DO_FCALL
0017 SEND_VAR_NO_REF_EX V6 2
0018 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\implode")
0019 SEND_VAL_EX string(")|(") 1
0020 T7 = FETCH_CLASS_CONSTANT (self) (exception) string("PATTERNS")
0021 SEND_VAL_EX T7 2
0022 V8 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V8 3
0024 V9 = DO_FCALL
0025 ASSIGN_OBJ THIS string("pattern")
0026 OP_DATA V9
0027 EXT_STMT
0028 ASSIGN_OBJ THIS string("unitNames")
0029 OP_DATA CV0($unitNames)
0030 EXT_STMT
0031 RETURN null

PhpBench\Expression\Lexer::lex:
     ; (lines=64, args=1, vars=8, tmps=28)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Lexer.php:78-102
     ; return  [] RANGE[0..0]
0000 CV0($expression) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 4 string("PhpBench\Expression\preg_split")
0003 CHECK_FUNC_ARG 1
0004 V8 = FETCH_OBJ_FUNC_ARG (ref) THIS string("pattern")
0005 SEND_FUNC_ARG V8 1
0006 SEND_VAR_EX CV0($expression) 2
0007 SEND_VAL_EX int(-1) 3
0008 T9 = FETCH_CONSTANT (unqualified-in-namespace) string("PhpBench\Expression\PREG_SPLIT_NO_EMPTY")
0009 T10 = FETCH_CONSTANT (unqualified-in-namespace) string("PhpBench\Expression\PREG_SPLIT_DELIM_CAPTURE")
0010 T11 = BW_OR T9 T10
0011 T12 = FETCH_CONSTANT (unqualified-in-namespace) string("PhpBench\Expression\PREG_SPLIT_OFFSET_CAPTURE")
0012 T13 = BW_OR T11 T12
0013 SEND_VAL_EX T13 4
0014 V14 = DO_FCALL
0015 T15 = CAST (array) V14
0016 ASSIGN CV1($chunks) T15
0017 EXT_STMT
0018 ASSIGN CV2($tokens) array(...)
0019 EXT_STMT
0020 V18 = NEW 3 string("PhpBench\Expression\Token")
0021 T19 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_EOF")
0022 SEND_VAL_EX T19 1
0023 SEND_VAL_EX string("") 2
0024 SEND_VAL_EX int(0) 3
0025 DO_FCALL
0026 ASSIGN CV3($prevToken) V18
0027 EXT_STMT
0028 V22 = FE_RESET_R CV1($chunks) 0054
0029 FE_FETCH_R V22 CV4($chunk) 0054
0030 EXT_STMT
0031 T23 = QM_ASSIGN CV4($chunk)
0032 V24 = FETCH_LIST_R T23 int(0)
0033 ASSIGN CV5($value) V24
0034 V26 = FETCH_LIST_R T23 int(1)
0035 ASSIGN CV6($offset) V26
0036 FREE T23
0037 EXT_STMT
0038 V28 = NEW 3 string("PhpBench\Expression\Token")
0039 INIT_METHOD_CALL 2 THIS string("resolveType")
0040 SEND_VAR_EX CV5($value) 1
0041 SEND_VAR_EX CV3($prevToken) 2
0042 V29 = DO_FCALL
0043 SEND_VAR_NO_REF_EX V29 1
0044 SEND_VAR_EX CV5($value) 2
0045 SEND_VAR_EX CV6($offset) 3
0046 DO_FCALL
0047 ASSIGN CV3($prevToken) V28
0048 EXT_STMT
0049 ASSIGN_DIM CV2($tokens) NEXT
0050 OP_DATA CV3($prevToken)
0051 EXT_STMT
0052 ASSIGN CV7($prevChunk) CV4($chunk)
0053 JMP 0029
0054 FE_FREE V22
0055 EXT_STMT
0056 V34 = NEW 1 string("PhpBench\Expression\Tokens")
0057 SEND_VAR_EX CV2($tokens) 1
0058 DO_FCALL
0059 VERIFY_RETURN_TYPE V34
0060 RETURN V34
0061 EXT_STMT
0062 VERIFY_RETURN_TYPE
0063 RETURN null
LIVE RANGES:
     9: 0009 - 0010 (tmp/var)
     11: 0011 - 0012 (tmp/var)
     18: 0021 - 0026 (new)
     22: 0029 - 0054 (loop)
     23: 0032 - 0036 (tmp/var)
     28: 0039 - 0047 (new)
     34: 0057 - 0059 (new)
     34: 0059 - 0060 (tmp/var)

PhpBench\Expression\Lexer::resolveType:
     ; (lines=105, args=2, vars=3, tmps=37)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Lexer.php:107-137
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 CV1($prevToken) = RECV 2
0002 EXT_STMT
0003 T3 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_NONE")
0004 ASSIGN CV2($type) T3
0005 EXT_STMT
0006 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\array_key_exists")
0007 SEND_VAR_EX CV0($value) 1
0008 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("TOKEN_VALUE_MAP")
0009 SEND_VAL_EX T5 2
0010 V6 = DO_FCALL
0011 JMPZ V6 0017
0012 EXT_STMT
0013 T7 = FETCH_CLASS_CONSTANT (self) (exception) string("TOKEN_VALUE_MAP")
0014 T8 = FETCH_DIM_R T7 CV0($value)
0015 VERIFY_RETURN_TYPE T8
0016 RETURN T8
0017 EXT_STMT
0018 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\is_numeric")
0019 SEND_VAR_EX CV0($value) 1
0020 V10 = DO_FCALL
0021 JMPNZ V10 0059
0022 T11 = FETCH_DIM_R CV0($value) int(0)
0023 T12 = IS_IDENTICAL T11 string(""")
0024 T12 = JMPNZ_EX T12 0028
0025 T13 = FETCH_DIM_R CV0($value) int(0)
0026 T14 = IS_IDENTICAL T13 string("'")
0027 T12 = BOOL T14
0028 JMPNZ T12 0083
0029 T15 = FETCH_OBJ_R CV1($prevToken) string("type")
0030 T16 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_DOT")
0031 T17 = IS_NOT_IDENTICAL T15 T16
0032 T17 = JMPZ_EX T17 0041
0033 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\in_array")
0034 SEND_VAR_EX CV0($value) 1
0035 CHECK_FUNC_ARG 2
0036 V18 = FETCH_OBJ_FUNC_ARG (ref) THIS string("unitNames")
0037 SEND_FUNC_ARG V18 2
0038 SEND_VAL_EX bool(true) 3
0039 V19 = DO_FCALL
0040 T17 = BOOL V19
0041 JMPNZ T17 0087
0042 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\preg_match")
0043 T20 = FETCH_CLASS_CONSTANT (self) (exception) string("PATTERN_FUNCTION")
0044 T21 = CONCAT string("{") T20
0045 T22 = CONCAT T21 string("}")
0046 SEND_VAL_EX T22 1
0047 SEND_VAR_EX CV0($value) 2
0048 V23 = DO_FCALL
0049 JMPNZ V23 0091
0050 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\preg_match")
0051 T24 = FETCH_CLASS_CONSTANT (self) (exception) string("PATTERN_NAME")
0052 T25 = CONCAT string("{") T24
0053 T26 = CONCAT T25 string("}")
0054 SEND_VAL_EX T26 1
0055 SEND_VAR_EX CV0($value) 2
0056 V27 = DO_FCALL
0057 JMPNZ V27 0095
0058 JMP 0099
0059 EXT_STMT
0060 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\strpos")
0061 T28 = CAST (string) CV0($value)
0062 SEND_VAL_EX T28 1
0063 SEND_VAL_EX string(".") 2
0064 V29 = DO_FCALL
0065 T30 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] V29
0066 T30 = JMPNZ_EX T30 0074
0067 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\stripos")
0068 T31 = CAST (string) CV0($value)
0069 SEND_VAL_EX T31 1
0070 SEND_VAL_EX string("e") 2
0071 V32 = DO_FCALL
0072 T33 = TYPE_CHECK TYPE [null, true, long, double, string, array, object, resource] V32
0073 T30 = BOOL T33
0074 JMPZ T30 0079
0075 EXT_STMT
0076 T34 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_FLOAT")
0077 VERIFY_RETURN_TYPE T34
0078 RETURN T34
0079 EXT_STMT
0080 T35 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_INTEGER")
0081 VERIFY_RETURN_TYPE T35
0082 RETURN T35
0083 EXT_STMT
0084 T36 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_STRING")
0085 VERIFY_RETURN_TYPE T36
0086 RETURN T36
0087 EXT_STMT
0088 T37 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_UNIT")
0089 VERIFY_RETURN_TYPE T37
0090 RETURN T37
0091 EXT_STMT
0092 T38 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_FUNCTION")
0093 VERIFY_RETURN_TYPE T38
0094 RETURN T38
0095 EXT_STMT
0096 T39 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_NAME")
0097 VERIFY_RETURN_TYPE T39
0098 RETURN T39
0099 EXT_STMT
0100 VERIFY_RETURN_TYPE CV2($type)
0101 RETURN CV2($type)
0102 EXT_STMT
0103 VERIFY_RETURN_TYPE
0104 RETURN null
LIVE RANGES:
     8: 0015 - 0016 (tmp/var)
     15: 0030 - 0031 (tmp/var)
     34: 0077 - 0078 (tmp/var)
     35: 0081 - 0082 (tmp/var)
     36: 0085 - 0086 (tmp/var)
     37: 0089 - 0090 (tmp/var)
     38: 0093 - 0094 (tmp/var)
     39: 0097 - 0098 (tmp/var)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Token.php:1-82
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 EXT_STMT
0004 RETURN int(1)

PhpBench\Expression\Token::__construct:
     ; (lines=14, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Token.php:60-65
     ; return  [] RANGE[0..0]
0000 CV0($type) = RECV 1
0001 CV1($value) = RECV 2
0002 CV2($offset) = RECV 3
0003 EXT_STMT
0004 ASSIGN_OBJ THIS string("type")
0005 OP_DATA CV0($type)
0006 EXT_STMT
0007 ASSIGN_OBJ THIS string("value")
0008 OP_DATA CV1($value)
0009 EXT_STMT
0010 ASSIGN_OBJ THIS string("offset")
0011 OP_DATA CV2($offset)
0012 EXT_STMT
0013 RETURN null

PhpBench\Expression\Token::length:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Token.php:67-70
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\strlen")
0002 CHECK_FUNC_ARG 1
0003 V0 = FETCH_OBJ_FUNC_ARG (ref) THIS string("value")
0004 SEND_FUNC_ARG V0 1
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PhpBench\Expression\Token::start:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Token.php:72-75
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("offset")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Token::end:
     ; (lines=10, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Token.php:77-80
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("offset")
0002 INIT_METHOD_CALL 0 THIS string("length")
0003 V1 = DO_FCALL
0004 T2 = ADD T0 V1
0005 VERIFY_RETURN_TYPE T2
0006 RETURN T2
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     0: 0002 - 0004 (tmp/var)
     2: 0005 - 0006 (tmp/var)

$_main:
     ; (lines=17, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/DisplayAsPrinter.php:1-159
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 NOP
0012 NOP
0013 NOP
0014 EXT_STMT
0015 DECLARE_CLASS string("phpbench\expression\nodeprinter\displayasprinter")
0016 RETURN int(1)

PhpBench\Expression\NodePrinter\DisplayAsPrinter::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/DisplayAsPrinter.php:32-35
     ; return  [] RANGE[0..0]
0000 CV0($timeUnit) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("timeUnit")
0003 OP_DATA CV0($timeUnit)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\NodePrinter\DisplayAsPrinter::print:
     ; (lines=156, args=2, vars=6, tmps=54)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/DisplayAsPrinter.php:37-90
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T6 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\DisplayAsNode")
0004 T7 = BOOL_NOT T6
0005 JMPZ T7 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_METHOD_CALL 0 CV1($node) string("node")
0010 V8 = DO_FCALL
0011 ASSIGN CV2($value) V8
0012 EXT_STMT
0013 INIT_METHOD_CALL 0 CV1($node) string("as")
0014 V10 = DO_FCALL
0015 ASSIGN CV3($unitNode) V10
0016 EXT_STMT
0017 INIT_METHOD_CALL 0 CV3($unitNode) string("unit")
0018 V12 = DO_FCALL
0019 ASSIGN CV4($unit) V12
0020 EXT_STMT
0021 T14 = INSTANCEOF CV4($unit) string("PhpBench\Expression\Ast\StringNode")
0022 T15 = BOOL_NOT T14
0023 JMPZ T15 0036
0024 EXT_STMT
0025 V16 = NEW 1 string("PhpBench\Expression\Exception\PrinterError")
0026 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\sprintf")
0027 SEND_VAL_EX string("Unit must evaluate to string, got "%s"") 1
0028 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodePrinter\get_class")
0029 SEND_VAR_EX CV4($unit) 1
0030 V17 = DO_FCALL
0031 SEND_VAR_NO_REF_EX V17 2
0032 V18 = DO_FCALL
0033 SEND_VAR_NO_REF_EX V18 1
0034 DO_FCALL
0035 THROW V16
0036 EXT_STMT
0037 INIT_METHOD_CALL 0 CV4($unit) string("value")
0038 V20 = DO_FCALL
0039 ASSIGN CV4($unit) V20
0040 EXT_STMT
0041 INIT_METHOD_CALL 1 THIS string("resolveMode")
0042 SEND_VAR_EX CV1($node) 1
0043 V22 = DO_FCALL
0044 ASSIGN CV5($mode) V22
0045 EXT_STMT
0046 T24 = INSTANCEOF CV2($value) string("PhpBench\Expression\Ast\PhpValue")
0047 T25 = BOOL_NOT T24
0048 JMPZ T25 0060
0049 EXT_STMT
0050 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\NodePrinter\sprintf")
0051 SEND_VAL_EX string("%s as %s") 1
0052 INIT_METHOD_CALL 1 CV0($printer) string("print")
0053 SEND_VAR_EX CV2($value) 1
0054 V26 = DO_FCALL
0055 SEND_VAR_NO_REF_EX V26 2
0056 SEND_VAR_EX CV4($unit) 3
0057 V27 = DO_FCALL
0058 VERIFY_RETURN_TYPE V27
0059 RETURN V27
0060 EXT_STMT
0061 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Util\TimeUnit") string("isTimeUnit")
0062 SEND_VAR_EX CV4($unit) 1
0063 V28 = DO_FCALL
0064 JMPZ V28 0103
0065 EXT_STMT
0066 INIT_METHOD_CALL 5 THIS string("timeUnit")
0067 INIT_METHOD_CALL 0 CV2($value) string("value")
0068 V29 = DO_FCALL
0069 SEND_VAR_NO_REF_EX V29 1
0070 SEND_VAR_EX CV4($unit) 2
0071 INIT_METHOD_CALL 1 THIS string("resolvePrecision")
0072 INIT_METHOD_CALL 0 CV1($node) string("precision")
0073 V30 = DO_FCALL
0074 SEND_VAR_NO_REF_EX V30 1
0075 V31 = DO_FCALL
0076 SEND_VAR_NO_REF_EX V31 3
0077 INIT_METHOD_CALL 1 CV0($printer) string("print")
0078 V32 = NEW 1 string("PhpBench\Expression\Ast\UnitNode")
0079 V33 = NEW 1 string("PhpBench\Expression\Ast\StringNode")
0080 T34 = FETCH_OBJ_R THIS string("timeUnit")
0081 INIT_METHOD_CALL 2 T34 string("getDestSuffix")
0082 T35 = FETCH_OBJ_R THIS string("timeUnit")
0083 INIT_METHOD_CALL 2 T35 string("resolveDestUnit")
0084 SEND_VAR_EX CV4($unit) 1
0085 INIT_METHOD_CALL 0 CV2($value) string("value")
0086 V36 = DO_FCALL
0087 SEND_VAR_NO_REF_EX V36 2
0088 V37 = DO_FCALL
0089 SEND_VAR_NO_REF_EX V37 1
0090 SEND_VAR_EX CV5($mode) 2
0091 V38 = DO_FCALL
0092 SEND_VAR_NO_REF_EX V38 1
0093 DO_FCALL
0094 SEND_VAR_NO_REF_EX V33 1
0095 DO_FCALL
0096 SEND_VAR_NO_REF_EX V32 1
0097 V41 = DO_FCALL
0098 SEND_VAR_NO_REF_EX V41 4
0099 SEND_VAR_EX CV5($mode) 5
0100 V42 = DO_FCALL
0101 VERIFY_RETURN_TYPE V42
0102 RETURN V42
0103 EXT_STMT
0104 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Util\MemoryUnit") string("isMemoryUnit")
0105 SEND_VAR_EX CV4($unit) 1
0106 V43 = DO_FCALL
0107 JMPZ V43 0144
0108 EXT_STMT
0109 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Util\MemoryUnit") string("resolveSuitableUnit")
0110 SEND_VAR_EX CV4($unit) 1
0111 INIT_METHOD_CALL 0 CV2($value) string("value")
0112 V44 = DO_FCALL
0113 SEND_VAR_NO_REF_EX V44 2
0114 V45 = DO_FCALL
0115 ASSIGN CV4($unit) V45
0116 EXT_STMT
0117 INIT_METHOD_CALL 4 THIS string("memoryUnit")
0118 INIT_METHOD_CALL 0 CV2($value) string("value")
0119 V47 = DO_FCALL
0120 SEND_VAR_NO_REF_EX V47 1
0121 SEND_VAR_EX CV4($unit) 2
0122 INIT_METHOD_CALL 1 THIS string("resolvePrecision")
0123 INIT_METHOD_CALL 0 CV1($node) string("precision")
0124 V48 = DO_FCALL
0125 SEND_VAR_NO_REF_EX V48 1
0126 V49 = DO_FCALL
0127 SEND_VAR_NO_REF_EX V49 3
0128 INIT_METHOD_CALL 1 CV0($printer) string("print")
0129 V50 = NEW 1 string("PhpBench\Expression\Ast\UnitNode")
0130 V51 = NEW 1 string("PhpBench\Expression\Ast\StringNode")
0131 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Util\MemoryUnit") string("suffixFor")
0132 SEND_VAR_EX CV4($unit) 1
0133 V52 = DO_FCALL
0134 SEND_VAR_NO_REF_EX V52 1
0135 DO_FCALL
0136 SEND_VAR_NO_REF_EX V51 1
0137 DO_FCALL
0138 SEND_VAR_NO_REF_EX V50 1
0139 V55 = DO_FCALL
0140 SEND_VAR_NO_REF_EX V55 4
0141 V56 = DO_FCALL
0142 VERIFY_RETURN_TYPE V56
0143 RETURN V56
0144 EXT_STMT
0145 V57 = NEW 1 string("PhpBench\Expression\Exception\PrinterError")
0146 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\sprintf")
0147 SEND_VAL_EX string("Do not know how to display unit "%s"") 1
0148 SEND_VAR_EX CV4($unit) 2
0149 V58 = DO_FCALL
0150 SEND_VAR_NO_REF_EX V58 1
0151 DO_FCALL
0152 THROW V57
0153 EXT_STMT
0154 VERIFY_RETURN_TYPE
0155 RETURN null
LIVE RANGES:
     16: 0026 - 0035 (new)
     27: 0058 - 0059 (tmp/var)
     32: 0079 - 0096 (new)
     33: 0080 - 0094 (new)
     42: 0101 - 0102 (tmp/var)
     50: 0130 - 0138 (new)
     51: 0131 - 0136 (new)
     56: 0142 - 0143 (tmp/var)
     57: 0146 - 0152 (new)

PhpBench\Expression\NodePrinter\DisplayAsPrinter::supportedUnitNames:
     ; (lines=14, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/DisplayAsPrinter.php:95-101
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\array_merge")
0002 INIT_STATIC_METHOD_CALL 0 string("PhpBench\Util\TimeUnit") string("supportedUnitNames")
0003 V0 = DO_FCALL
0004 SEND_VAR_NO_REF_EX V0 1
0005 INIT_STATIC_METHOD_CALL 0 string("PhpBench\Util\MemoryUnit") string("supportedUnitNames")
0006 V1 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V1 2
0008 V2 = DO_FCALL
0009 VERIFY_RETURN_TYPE V2
0010 RETURN V2
0011 EXT_STMT
0012 VERIFY_RETURN_TYPE
0013 RETURN null
LIVE RANGES:
     2: 0009 - 0010 (tmp/var)

PhpBench\Expression\NodePrinter\DisplayAsPrinter::timeUnit:
     ; (lines=36, args=5, vars=5, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/DisplayAsPrinter.php:103-113
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 CV1($unit) = RECV 2
0002 CV2($precision) = RECV 3
0003 CV3($prettyUnit) = RECV 4
0004 CV4($mode) = RECV 5
0005 EXT_STMT
0006 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\NodePrinter\sprintf")
0007 SEND_VAL_EX string("%s%s") 1
0008 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\number_format")
0009 T5 = FETCH_OBJ_R THIS string("timeUnit")
0010 INIT_METHOD_CALL 3 T5 string("toDestUnit")
0011 SEND_VAR_EX CV0($value) 1
0012 T6 = FETCH_OBJ_R THIS string("timeUnit")
0013 INIT_METHOD_CALL 2 T6 string("resolveDestUnit")
0014 SEND_VAR_EX CV1($unit) 1
0015 SEND_VAR_EX CV0($value) 2
0016 V7 = DO_FCALL
0017 SEND_VAR_NO_REF_EX V7 2
0018 SEND_VAR_EX CV4($mode) 3
0019 V8 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V8 1
0021 T9 = JMP_SET CV2($precision) 0026
0022 T10 = FETCH_OBJ_R THIS string("timeUnit")
0023 INIT_METHOD_CALL 0 T10 string("getPrecision")
0024 V11 = DO_FCALL
0025 T9 = QM_ASSIGN V11
0026 SEND_VAL_EX T9 2
0027 V12 = DO_FCALL
0028 SEND_VAR_NO_REF_EX V12 2
0029 SEND_VAR_EX CV3($prettyUnit) 3
0030 V13 = DO_FCALL
0031 VERIFY_RETURN_TYPE V13
0032 RETURN V13
0033 EXT_STMT
0034 VERIFY_RETURN_TYPE
0035 RETURN null
LIVE RANGES:
     13: 0031 - 0032 (tmp/var)

PhpBench\Expression\NodePrinter\DisplayAsPrinter::memoryUnit:
     ; (lines=33, args=4, vars=4, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/DisplayAsPrinter.php:118-125
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 CV1($unit) = RECV 2
0002 CV2($precision) = RECV 3
0003 CV3($prettyUnit) = RECV 4
0004 EXT_STMT
0005 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\NodePrinter\sprintf")
0006 SEND_VAL_EX string("%s%s") 1
0007 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\number_format")
0008 INIT_STATIC_METHOD_CALL 3 string("PhpBench\Util\MemoryUnit") string("convertTo")
0009 SEND_VAR_EX CV0($value) 1
0010 T4 = FETCH_CLASS_CONSTANT string("PhpBench\Util\MemoryUnit") string("BYTES")
0011 SEND_VAL_EX T4 2
0012 SEND_VAR_EX CV1($unit) 3
0013 V5 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V5 1
0015 T6 = FETCH_CLASS_CONSTANT string("PhpBench\Util\MemoryUnit") string("BYTES")
0016 T7 = IS_IDENTICAL CV1($unit) T6
0017 JMPZ T7 0020
0018 T8 = QM_ASSIGN int(0)
0019 JMP 0023
0020 T9 = JMP_SET CV2($precision) 0022
0021 T9 = QM_ASSIGN int(3)
0022 T8 = QM_ASSIGN T9
0023 SEND_VAL_EX T8 2
0024 V10 = DO_FCALL
0025 SEND_VAR_NO_REF_EX V10 2
0026 SEND_VAR_EX CV3($prettyUnit) 3
0027 V11 = DO_FCALL
0028 VERIFY_RETURN_TYPE V11
0029 RETURN V11
0030 EXT_STMT
0031 VERIFY_RETURN_TYPE
0032 RETURN null
LIVE RANGES:
     11: 0028 - 0029 (tmp/var)

PhpBench\Expression\NodePrinter\DisplayAsPrinter::resolvePrecision:
     ; (lines=14, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/DisplayAsPrinter.php:127-134
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 EXT_STMT
0002 T1 = INSTANCEOF CV0($node) string("PhpBench\Expression\Ast\IntegerNode")
0003 JMPZ T1 0009
0004 EXT_STMT
0005 INIT_METHOD_CALL 0 CV0($node) string("value")
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 RETURN null
0011 EXT_STMT
0012 VERIFY_RETURN_TYPE
0013 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

PhpBench\Expression\NodePrinter\DisplayAsPrinter::resolveMode:
     ; (lines=45, args=1, vars=2, tmps=13)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/DisplayAsPrinter.php:136-157
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 EXT_STMT
0002 T2 = INSTANCEOF CV0($node) string("PhpBench\Expression\Ast\DisplayAsTimeNode")
0003 T3 = BOOL_NOT T2
0004 JMPZ T3 0007
0005 EXT_STMT
0006 RETURN null
0007 EXT_STMT
0008 INIT_METHOD_CALL 0 CV0($node) string("mode")
0009 V4 = DO_FCALL
0010 ASSIGN CV1($mode) V4
0011 EXT_STMT
0012 T6 = BOOL_NOT CV1($mode)
0013 JMPZ T6 0016
0014 EXT_STMT
0015 RETURN null
0016 EXT_STMT
0017 T7 = INSTANCEOF CV1($mode) string("PhpBench\Expression\Ast\NullNode")
0018 JMPZ T7 0021
0019 EXT_STMT
0020 RETURN null
0021 EXT_STMT
0022 T8 = INSTANCEOF CV1($mode) string("PhpBench\Expression\Ast\StringNode")
0023 T9 = BOOL_NOT T8
0024 JMPZ T9 0037
0025 EXT_STMT
0026 V10 = NEW 1 string("PhpBench\Expression\Exception\PrinterError")
0027 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\sprintf")
0028 SEND_VAL_EX string("Time mode must evaluate to string, got "%s"") 1
0029 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodePrinter\get_class")
0030 SEND_VAR_EX CV1($mode) 1
0031 V11 = DO_FCALL
0032 SEND_VAR_NO_REF_EX V11 2
0033 V12 = DO_FCALL
0034 SEND_VAR_NO_REF_EX V12 1
0035 DO_FCALL
0036 THROW V10
0037 EXT_STMT
0038 INIT_METHOD_CALL 0 CV1($mode) string("value")
0039 V14 = DO_FCALL
0040 VERIFY_RETURN_TYPE V14
0041 RETURN V14
0042 EXT_STMT
0043 VERIFY_RETURN_TYPE
0044 RETURN null
LIVE RANGES:
     10: 0027 - 0036 (new)
     14: 0040 - 0041 (tmp/var)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter.php:1-13
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 RETURN int(1)

PhpBench\Expression\NodePrinter::print:
     ; (lines=5, args=2, vars=2, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter.php:11-11
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 VERIFY_RETURN_TYPE
0004 RETURN null

$_main:
     ; (lines=12, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:1-417
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 EXT_STMT
0011 RETURN int(1)

PhpBench\Util\TimeUnit::__construct:
     ; (lines=18, args=4, vars=4, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:110-120
     ; return  [] RANGE[0..0]
0000 CV0($sourceUnit) = RECV_INIT 1 zval(type=11)
0001 CV1($destUnit) = RECV_INIT 2 zval(type=11)
0002 CV2($mode) = RECV_INIT 3 zval(type=11)
0003 CV3($precision) = RECV_INIT 4 int(3)
0004 EXT_STMT
0005 ASSIGN_OBJ THIS string("sourceUnit")
0006 OP_DATA CV0($sourceUnit)
0007 EXT_STMT
0008 ASSIGN_OBJ THIS string("destUnit")
0009 OP_DATA CV1($destUnit)
0010 EXT_STMT
0011 ASSIGN_OBJ THIS string("mode")
0012 OP_DATA CV2($mode)
0013 EXT_STMT
0014 ASSIGN_OBJ THIS string("precision")
0015 OP_DATA CV3($precision)
0016 EXT_STMT
0017 RETURN null

PhpBench\Util\TimeUnit::supportedUnitNames:
     ; (lines=23, args=0, vars=0, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:125-134
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Util\array_merge")
0002 T0 = FETCH_CLASS_CONSTANT (self) (exception) string("AUTO")
0003 T1 = INIT_ARRAY 1 (packed) T0 NEXT
0004 SEND_VAL_EX T1 1
0005 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Util\array_keys")
0006 CHECK_FUNC_ARG 1
0007 V2 = FETCH_STATIC_PROP_FUNC_ARG (ref) string("aliases") (self) (exception)
0008 SEND_FUNC_ARG V2 1
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 2
0011 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Util\array_keys")
0012 CHECK_FUNC_ARG 1
0013 V4 = FETCH_STATIC_PROP_FUNC_ARG (ref) string("map") (self) (exception)
0014 SEND_FUNC_ARG V4 1
0015 V5 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 3
0017 V6 = DO_FCALL
0018 VERIFY_RETURN_TYPE V6
0019 RETURN V6
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     6: 0018 - 0019 (tmp/var)

PhpBench\Util\TimeUnit::toDestUnit:
     ; (lines=21, args=3, vars=3, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:139-142
     ; return  [] RANGE[0..0]
0000 CV0($time) = RECV 1
0001 CV1($destUnit) = RECV_INIT 2 null
0002 CV2($mode) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 4 (self) (exception) string("convert")
0005 SEND_VAR_EX CV0($time) 1
0006 CHECK_FUNC_ARG 2
0007 V3 = FETCH_OBJ_FUNC_ARG (ref) THIS string("sourceUnit")
0008 SEND_FUNC_ARG V3 2
0009 INIT_METHOD_CALL 1 THIS string("getDestUnit")
0010 SEND_VAR_EX CV1($destUnit) 1
0011 V4 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V4 3
0013 INIT_METHOD_CALL 1 THIS string("getMode")
0014 SEND_VAR_EX CV2($mode) 1
0015 V5 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 4
0017 V6 = DO_FCALL
0018 RETURN V6
0019 EXT_STMT
0020 RETURN null

PhpBench\Util\TimeUnit::overrideDestUnit:
     ; (lines=14, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:148-153
     ; return  [] RANGE[0..0]
0000 CV0($destUnit) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("normalizeUnit")
0003 SEND_VAR_EX CV0($destUnit) 1
0004 V1 = DO_FCALL
0005 ASSIGN CV0($destUnit) V1
0006 EXT_STMT
0007 ASSIGN_OBJ THIS string("destUnit")
0008 OP_DATA CV0($destUnit)
0009 EXT_STMT
0010 ASSIGN_OBJ THIS string("overriddenDestUnit")
0011 OP_DATA bool(true)
0012 EXT_STMT
0013 RETURN null

PhpBench\Util\TimeUnit::overrideMode:
     ; (lines=13, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:159-164
     ; return  [] RANGE[0..0]
0000 CV0($mode) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("validateMode")
0003 SEND_VAR_EX CV0($mode) 1
0004 DO_FCALL
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("mode")
0007 OP_DATA CV0($mode)
0008 EXT_STMT
0009 ASSIGN_OBJ THIS string("overriddenMode")
0010 OP_DATA bool(true)
0011 EXT_STMT
0012 RETURN null

PhpBench\Util\TimeUnit::overridePrecision:
     ; (lines=9, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:170-174
     ; return  [] RANGE[0..0]
0000 CV0($precision) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("precision")
0003 OP_DATA CV0($precision)
0004 EXT_STMT
0005 ASSIGN_OBJ THIS string("overriddenPrecision")
0006 OP_DATA bool(true)
0007 EXT_STMT
0008 RETURN null

PhpBench\Util\TimeUnit::getPrecision:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:176-179
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("precision")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Util\TimeUnit::getDestUnit:
     ; (lines=13, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:186-195
     ; return  [] RANGE[0..0]
0000 CV0($unit) = RECV_INIT 1 null
0001 EXT_STMT
0002 JMPZ CV0($unit) 0006
0003 EXT_STMT
0004 VERIFY_RETURN_TYPE CV0($unit)
0005 RETURN CV0($unit)
0006 EXT_STMT
0007 T1 = FETCH_OBJ_R THIS string("destUnit")
0008 VERIFY_RETURN_TYPE T1
0009 RETURN T1
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     1: 0008 - 0009 (tmp/var)

PhpBench\Util\TimeUnit::resolveDestUnit:
     ; (lines=21, args=2, vars=2, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:203-214
     ; return  [] RANGE[0..0]
0000 CV0($unit) = RECV 1
0001 CV1($value) = RECV_INIT 2 null
0002 EXT_STMT
0003 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("AUTO")
0004 T3 = IS_IDENTICAL CV0($unit) T2
0005 JMPZ T3 0011
0006 EXT_STMT
0007 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("resolveSuitableUnit")
0008 SEND_VAR_EX CV1($value) 1
0009 V4 = DO_FCALL
0010 ASSIGN CV0($unit) V4
0011 EXT_STMT
0012 T6 = FETCH_OBJ_R THIS string("overriddenDestUnit")
0013 JMPZ T6 0017
0014 EXT_STMT
0015 T7 = FETCH_OBJ_R THIS string("destUnit")
0016 RETURN T7
0017 EXT_STMT
0018 RETURN CV0($unit)
0019 EXT_STMT
0020 RETURN null

PhpBench\Util\TimeUnit::resolveMode:
     ; (lines=11, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:222-229
     ; return  [] RANGE[0..0]
0000 CV0($mode) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_R THIS string("overriddenMode")
0003 JMPZ T1 0007
0004 EXT_STMT
0005 T2 = FETCH_OBJ_R THIS string("mode")
0006 RETURN T2
0007 EXT_STMT
0008 RETURN CV0($mode)
0009 EXT_STMT
0010 RETURN null

PhpBench\Util\TimeUnit::resolvePrecision:
     ; (lines=14, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:235-242
     ; return  [] RANGE[0..0]
0000 CV0($precision) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_R THIS string("overriddenPrecision")
0003 JMPZ T1 0008
0004 EXT_STMT
0005 T2 = FETCH_OBJ_R THIS string("precision")
0006 VERIFY_RETURN_TYPE T2
0007 RETURN T2
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE CV0($precision)
0010 RETURN CV0($precision)
0011 EXT_STMT
0012 VERIFY_RETURN_TYPE
0013 RETURN null
LIVE RANGES:
     2: 0006 - 0007 (tmp/var)

PhpBench\Util\TimeUnit::getMode:
     ; (lines=13, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:247-256
     ; return  [] RANGE[0..0]
0000 CV0($mode) = RECV_INIT 1 null
0001 EXT_STMT
0002 JMPZ CV0($mode) 0006
0003 EXT_STMT
0004 VERIFY_RETURN_TYPE CV0($mode)
0005 RETURN CV0($mode)
0006 EXT_STMT
0007 T1 = FETCH_OBJ_R THIS string("mode")
0008 VERIFY_RETURN_TYPE T1
0009 RETURN T1
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     1: 0008 - 0009 (tmp/var)

PhpBench\Util\TimeUnit::getDestSuffix:
     ; (lines=18, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:261-264
     ; return  [] RANGE[0..0]
0000 CV0($unit) = RECV_INIT 1 null
0001 CV1($mode) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 (self) (exception) string("getSuffix")
0004 INIT_METHOD_CALL 1 THIS string("getDestUnit")
0005 SEND_VAR_EX CV0($unit) 1
0006 V2 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V2 1
0008 INIT_METHOD_CALL 1 THIS string("getMode")
0009 SEND_VAR_EX CV1($mode) 1
0010 V3 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V3 2
0012 V4 = DO_FCALL
0013 VERIFY_RETURN_TYPE V4
0014 RETURN V4
0015 EXT_STMT
0016 VERIFY_RETURN_TYPE
0017 RETURN null
LIVE RANGES:
     4: 0013 - 0014 (tmp/var)

PhpBench\Util\TimeUnit::format:
     ; (lines=41, args=5, vars=6, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:269-283
     ; return  [] RANGE[0..0]
0000 CV0($time) = RECV 1
0001 CV1($unit) = RECV_INIT 2 null
0002 CV2($mode) = RECV_INIT 3 null
0003 CV3($precision) = RECV_INIT 4 null
0004 CV4($suffix) = RECV_INIT 5 bool(true)
0005 EXT_STMT
0006 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Util\number_format")
0007 INIT_METHOD_CALL 3 THIS string("toDestUnit")
0008 SEND_VAR_EX CV0($time) 1
0009 SEND_VAR_EX CV1($unit) 2
0010 SEND_VAR_EX CV2($mode) 3
0011 V6 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V6 1
0013 T7 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] CV3($precision)
0014 JMPZ T7 0017
0015 T8 = QM_ASSIGN CV3($precision)
0016 JMP 0019
0017 T9 = FETCH_OBJ_R THIS string("precision")
0018 T8 = QM_ASSIGN T9
0019 SEND_VAL_EX T8 2
0020 V10 = DO_FCALL
0021 ASSIGN CV5($value) V10
0022 EXT_STMT
0023 T12 = TYPE_CHECK (false) CV4($suffix)
0024 JMPZ T12 0028
0025 EXT_STMT
0026 VERIFY_RETURN_TYPE CV5($value)
0027 RETURN CV5($value)
0028 EXT_STMT
0029 INIT_METHOD_CALL 2 THIS string("getDestSuffix")
0030 SEND_VAR_EX CV1($unit) 1
0031 SEND_VAR_EX CV2($mode) 2
0032 V13 = DO_FCALL
0033 ASSIGN CV4($suffix) V13
0034 EXT_STMT
0035 T15 = CONCAT CV5($value) CV4($suffix)
0036 VERIFY_RETURN_TYPE T15
0037 RETURN T15
0038 EXT_STMT
0039 VERIFY_RETURN_TYPE
0040 RETURN null
LIVE RANGES:
     15: 0036 - 0037 (tmp/var)

PhpBench\Util\TimeUnit::convert:
     ; (lines=28, args=4, vars=4, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:288-297
     ; return  [] RANGE[0..0]
0000 CV0($time) = RECV 1
0001 CV1($unit) = RECV 2
0002 CV2($destUnit) = RECV 3
0003 CV3($mode) = RECV 4
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("validateMode")
0006 SEND_VAR_EX CV3($mode) 1
0007 DO_FCALL
0008 EXT_STMT
0009 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("MODE_TIME")
0010 T6 = IS_IDENTICAL CV3($mode) T5
0011 JMPZ T6 0019
0012 EXT_STMT
0013 INIT_STATIC_METHOD_CALL 3 (self) (exception) string("convertTo")
0014 SEND_VAR_EX CV0($time) 1
0015 SEND_VAR_EX CV1($unit) 2
0016 SEND_VAR_EX CV2($destUnit) 3
0017 V7 = DO_FCALL
0018 RETURN V7
0019 EXT_STMT
0020 INIT_STATIC_METHOD_CALL 3 (self) (exception) string("convertInto")
0021 SEND_VAR_EX CV0($time) 1
0022 SEND_VAR_EX CV1($unit) 2
0023 SEND_VAR_EX CV2($destUnit) 3
0024 V8 = DO_FCALL
0025 RETURN V8
0026 EXT_STMT
0027 RETURN null

PhpBench\Util\TimeUnit::convertInto:
     ; (lines=34, args=3, vars=5, tmps=14)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:303-318
     ; return  [] RANGE[0..0]
0000 CV0($time) = RECV 1
0001 CV1($unit) = RECV 2
0002 CV2($destUnit) = RECV 3
0003 EXT_STMT
0004 T5 = BOOL_NOT CV0($time)
0005 JMPZ T5 0008
0006 EXT_STMT
0007 RETURN int(0)
0008 EXT_STMT
0009 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("normalizeUnit")
0010 SEND_VAR_EX CV1($unit) 1
0011 V6 = DO_FCALL
0012 ASSIGN CV1($unit) V6
0013 EXT_STMT
0014 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("normalizeUnit")
0015 SEND_VAR_EX CV2($destUnit) 1
0016 V8 = DO_FCALL
0017 ASSIGN CV2($destUnit) V8
0018 EXT_STMT
0019 T10 = FETCH_STATIC_PROP_R string("map") (self) (exception)
0020 T11 = FETCH_DIM_R T10 CV2($destUnit)
0021 ASSIGN CV3($destMultiplier) T11
0022 EXT_STMT
0023 T13 = FETCH_STATIC_PROP_R string("map") (self) (exception)
0024 T14 = FETCH_DIM_R T13 CV1($unit)
0025 ASSIGN CV4($sourceMultiplier) T14
0026 EXT_STMT
0027 T16 = MUL CV0($time) CV4($sourceMultiplier)
0028 T17 = DIV CV3($destMultiplier) T16
0029 ASSIGN CV0($time) T17
0030 EXT_STMT
0031 RETURN CV0($time)
0032 EXT_STMT
0033 RETURN null

PhpBench\Util\TimeUnit::convertTo:
     ; (lines=31, args=3, vars=5, tmps=13)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:324-335
     ; return  [] RANGE[0..0]
0000 CV0($time) = RECV 1
0001 CV1($unit) = RECV 2
0002 CV2($destUnit) = RECV 3
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("normalizeUnit")
0005 SEND_VAR_EX CV1($unit) 1
0006 V5 = DO_FCALL
0007 ASSIGN CV1($unit) V5
0008 EXT_STMT
0009 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("normalizeUnit")
0010 SEND_VAR_EX CV2($destUnit) 1
0011 V7 = DO_FCALL
0012 ASSIGN CV2($destUnit) V7
0013 EXT_STMT
0014 T9 = FETCH_STATIC_PROP_R string("map") (self) (exception)
0015 T10 = FETCH_DIM_R T9 CV2($destUnit)
0016 ASSIGN CV3($destM) T10
0017 EXT_STMT
0018 T12 = FETCH_STATIC_PROP_R string("map") (self) (exception)
0019 T13 = FETCH_DIM_R T12 CV1($unit)
0020 ASSIGN CV4($sourceM) T13
0021 EXT_STMT
0022 T15 = MUL CV0($time) CV4($sourceM)
0023 T16 = DIV T15 CV3($destM)
0024 ASSIGN CV0($time) T16
0025 EXT_STMT
0026 VERIFY_RETURN_TYPE CV0($time)
0027 RETURN CV0($time)
0028 EXT_STMT
0029 VERIFY_RETURN_TYPE
0030 RETURN null

PhpBench\Util\TimeUnit::getSuffix:
     ; (lines=25, args=2, vars=3, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:346-357
     ; return  [] RANGE[0..0]
0000 CV0($unit) = RECV 1
0001 CV1($mode) = RECV_INIT 2 null
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("normalizeUnit")
0004 SEND_VAR_EX CV0($unit) 1
0005 V3 = DO_FCALL
0006 ASSIGN CV0($unit) V3
0007 EXT_STMT
0008 T5 = FETCH_STATIC_PROP_R string("suffixes") (self) (exception)
0009 T6 = FETCH_DIM_R T5 CV0($unit)
0010 ASSIGN CV2($suffix) T6
0011 EXT_STMT
0012 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("MODE_THROUGHPUT")
0013 T9 = IS_IDENTICAL CV1($mode) T8
0014 JMPZ T9 0021
0015 EXT_STMT
0016 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Util\sprintf")
0017 SEND_VAL_EX string("ops/%s") 1
0018 SEND_VAR_EX CV2($suffix) 2
0019 V10 = DO_FCALL
0020 RETURN V10
0021 EXT_STMT
0022 RETURN CV2($suffix)
0023 EXT_STMT
0024 RETURN null

PhpBench\Util\TimeUnit::isTimeUnit:
     ; (lines=13, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:359-362
     ; return  [] RANGE[0..0]
0000 CV0($unit) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Util\in_array")
0003 SEND_VAR_EX CV0($unit) 1
0004 INIT_STATIC_METHOD_CALL 0 (self) (exception) string("supportedUnitNames")
0005 V1 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V1 2
0007 V2 = DO_FCALL
0008 VERIFY_RETURN_TYPE V2
0009 RETURN V2
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     2: 0008 - 0009 (tmp/var)

PhpBench\Util\TimeUnit::validateMode:
     ; (lines=30, args=1, vars=2, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:364-374
     ; return  [] RANGE[0..0]
0000 CV0($mode) = RECV 1
0001 EXT_STMT
0002 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("MODE_THROUGHPUT")
0003 T3 = INIT_ARRAY 2 (packed) T2 NEXT
0004 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("MODE_TIME")
0005 T3 = ADD_ARRAY_ELEMENT T4 NEXT
0006 ASSIGN CV1($validModes) T3
0007 EXT_STMT
0008 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Util\in_array")
0009 SEND_VAR_EX CV0($mode) 1
0010 SEND_VAR_EX CV1($validModes) 2
0011 V6 = DO_FCALL
0012 T7 = BOOL_NOT V6
0013 JMPZ T7 0028
0014 EXT_STMT
0015 V8 = NEW 1 string("InvalidArgumentException")
0016 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Util\sprintf")
0017 SEND_VAL_EX string("Time mode must be one of "%s", got "%s"") 1
0018 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Util\implode")
0019 SEND_VAL_EX string("", "") 1
0020 SEND_VAR_EX CV1($validModes) 2
0021 V9 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V9 2
0023 SEND_VAR_EX CV0($mode) 3
0024 V10 = DO_FCALL
0025 SEND_VAR_NO_REF_EX V10 1
0026 DO_FCALL
0027 THROW V8
0028 EXT_STMT
0029 RETURN null
LIVE RANGES:
     3: 0004 - 0006 (tmp/var)
     8: 0016 - 0027 (new)

PhpBench\Util\TimeUnit::normalizeUnit:
     ; (lines=45, args=1, vars=1, tmps=15)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:376-394
     ; return  [] RANGE[0..0]
0000 CV0($unit) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_STATIC_PROP_IS string("aliases") (self) (exception)
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($unit)
0004 JMPZ T2 0009
0005 EXT_STMT
0006 T3 = FETCH_STATIC_PROP_R string("aliases") (self) (exception)
0007 T4 = FETCH_DIM_R T3 CV0($unit)
0008 ASSIGN CV0($unit) T4
0009 EXT_STMT
0010 T6 = FETCH_STATIC_PROP_IS string("map") (self) (exception)
0011 T7 = ISSET_ISEMPTY_DIM_OBJ (isset) T6 CV0($unit)
0012 JMPZ T7 0016
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE CV0($unit)
0015 RETURN CV0($unit)
0016 EXT_STMT
0017 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("AUTO")
0018 T9 = IS_IDENTICAL CV0($unit) T8
0019 JMPZ T9 0023
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE CV0($unit)
0022 RETURN CV0($unit)
0023 EXT_STMT
0024 V10 = NEW 1 string("InvalidArgumentException")
0025 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Util\sprintf")
0026 SEND_VAL_EX string("Invalid time unit "%s", available units: "%s"") 1
0027 SEND_VAR_EX CV0($unit) 2
0028 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Util\implode")
0029 SEND_VAL_EX string("", "") 1
0030 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Util\array_keys")
0031 CHECK_FUNC_ARG 1
0032 V11 = FETCH_STATIC_PROP_FUNC_ARG (ref) string("map") (self) (exception)
0033 SEND_FUNC_ARG V11 1
0034 V12 = DO_FCALL
0035 SEND_VAR_NO_REF_EX V12 2
0036 V13 = DO_FCALL
0037 SEND_VAR_NO_REF_EX V13 3
0038 V14 = DO_FCALL
0039 SEND_VAR_NO_REF_EX V14 1
0040 DO_FCALL
0041 THROW V10
0042 EXT_STMT
0043 VERIFY_RETURN_TYPE
0044 RETURN null
LIVE RANGES:
     10: 0025 - 0041 (new)

PhpBench\Util\TimeUnit::resolveSuitableUnit:
     ; (lines=39, args=1, vars=1, tmps=12)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/TimeUnit.php:396-415
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 T1 = TYPE_CHECK (null) CV0($value)
0003 JMPZ T1 0008
0004 EXT_STMT
0005 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("MICROSECONDS")
0006 VERIFY_RETURN_TYPE T2
0007 RETURN T2
0008 EXT_STMT
0009 T3 = DIV CV0($value) float(6e+07)
0010 T4 = IS_SMALLER_OR_EQUAL int(1) T3
0011 JMPZ T4 0016
0012 EXT_STMT
0013 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("MINUTES")
0014 VERIFY_RETURN_TYPE T5
0015 RETURN T5
0016 EXT_STMT
0017 T6 = DIV CV0($value) float(1e+06)
0018 T7 = IS_SMALLER_OR_EQUAL int(1) T6
0019 JMPZ T7 0024
0020 EXT_STMT
0021 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("SECONDS")
0022 VERIFY_RETURN_TYPE T8
0023 RETURN T8
0024 EXT_STMT
0025 T9 = DIV CV0($value) float(1000)
0026 T10 = IS_SMALLER_OR_EQUAL int(1) T9
0027 JMPZ T10 0032
0028 EXT_STMT
0029 T11 = FETCH_CLASS_CONSTANT (self) (exception) string("MILLISECONDS")
0030 VERIFY_RETURN_TYPE T11
0031 RETURN T11
0032 EXT_STMT
0033 T12 = FETCH_CLASS_CONSTANT (self) (exception) string("MICROSECONDS")
0034 VERIFY_RETURN_TYPE T12
0035 RETURN T12
0036 EXT_STMT
0037 VERIFY_RETURN_TYPE
0038 RETURN null
LIVE RANGES:
     2: 0006 - 0007 (tmp/var)
     5: 0014 - 0015 (tmp/var)
     8: 0022 - 0023 (tmp/var)
     11: 0030 - 0031 (tmp/var)
     12: 0034 - 0035 (tmp/var)

$_main:
     ; (lines=6, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/MemoryUnit.php:1-116
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 RETURN int(1)

PhpBench\Util\MemoryUnit::supportedUnitNames:
     ; (lines=23, args=0, vars=0, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/MemoryUnit.php:43-52
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Util\array_merge")
0002 T0 = FETCH_CLASS_CONSTANT (self) (exception) string("AUTO")
0003 T1 = INIT_ARRAY 1 (packed) T0 NEXT
0004 SEND_VAL_EX T1 1
0005 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Util\array_keys")
0006 CHECK_FUNC_ARG 1
0007 V2 = FETCH_STATIC_PROP_FUNC_ARG (ref) string("aliases") (self) (exception)
0008 SEND_FUNC_ARG V2 1
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 2
0011 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Util\array_keys")
0012 CHECK_FUNC_ARG 1
0013 V4 = FETCH_STATIC_PROP_FUNC_ARG (ref) string("multipliers") (self) (exception)
0014 SEND_FUNC_ARG V4 1
0015 V5 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 3
0017 V6 = DO_FCALL
0018 VERIFY_RETURN_TYPE V6
0019 RETURN V6
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     6: 0018 - 0019 (tmp/var)

PhpBench\Util\MemoryUnit::suffixFor:
     ; (lines=20, args=1, vars=1, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/MemoryUnit.php:54-59
     ; return  [] RANGE[0..0]
0000 CV0($unit) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("resolveUnit")
0003 SEND_VAR_EX CV0($unit) 1
0004 V1 = DO_FCALL
0005 ASSIGN CV0($unit) V1
0006 EXT_STMT
0007 T3 = FETCH_STATIC_PROP_IS string("suffixes") (self) (exception)
0008 T4 = ISSET_ISEMPTY_DIM_OBJ (isset) T3 CV0($unit)
0009 JMPZ T4 0014
0010 T5 = FETCH_STATIC_PROP_R string("suffixes") (self) (exception)
0011 T6 = FETCH_DIM_R T5 CV0($unit)
0012 T7 = QM_ASSIGN T6
0013 JMP 0015
0014 T7 = QM_ASSIGN CV0($unit)
0015 VERIFY_RETURN_TYPE T7
0016 RETURN T7
0017 EXT_STMT
0018 VERIFY_RETURN_TYPE
0019 RETURN null
LIVE RANGES:
     7: 0015 - 0016 (tmp/var)

PhpBench\Util\MemoryUnit::isMemoryUnit:
     ; (lines=13, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/MemoryUnit.php:61-64
     ; return  [] RANGE[0..0]
0000 CV0($unit) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Util\in_array")
0003 SEND_VAR_EX CV0($unit) 1
0004 INIT_STATIC_METHOD_CALL 0 (self) (exception) string("supportedUnitNames")
0005 V1 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V1 2
0007 V2 = DO_FCALL
0008 VERIFY_RETURN_TYPE V2
0009 RETURN V2
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     2: 0008 - 0009 (tmp/var)

PhpBench\Util\MemoryUnit::convertTo:
     ; (lines=27, args=3, vars=4, tmps=11)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/MemoryUnit.php:66-73
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 CV1($fromUnit) = RECV 2
0002 CV2($toUnit) = RECV 3
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("resolveUnit")
0005 SEND_VAR_EX CV1($fromUnit) 1
0006 V4 = DO_FCALL
0007 ASSIGN CV1($fromUnit) V4
0008 EXT_STMT
0009 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("resolveUnit")
0010 SEND_VAR_EX CV2($toUnit) 1
0011 V6 = DO_FCALL
0012 ASSIGN CV2($toUnit) V6
0013 EXT_STMT
0014 T8 = FETCH_STATIC_PROP_R string("multipliers") (self) (exception)
0015 T9 = FETCH_DIM_R T8 CV1($fromUnit)
0016 T10 = MUL CV0($value) T9
0017 ASSIGN CV3($byteValue) T10
0018 EXT_STMT
0019 T12 = FETCH_STATIC_PROP_R string("multipliers") (self) (exception)
0020 T13 = FETCH_DIM_R T12 CV2($toUnit)
0021 T14 = DIV CV3($byteValue) T13
0022 VERIFY_RETURN_TYPE T14
0023 RETURN T14
0024 EXT_STMT
0025 VERIFY_RETURN_TYPE
0026 RETURN null
LIVE RANGES:
     14: 0022 - 0023 (tmp/var)

PhpBench\Util\MemoryUnit::resolveSuitableUnit:
     ; (lines=47, args=2, vars=2, tmps=14)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/MemoryUnit.php:75-98
     ; return  [] RANGE[0..0]
0000 CV0($unit) = RECV 1
0001 CV1($value) = RECV 2
0002 EXT_STMT
0003 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("AUTO")
0004 T3 = IS_NOT_IDENTICAL CV0($unit) T2
0005 JMPZ T3 0009
0006 EXT_STMT
0007 VERIFY_RETURN_TYPE CV0($unit)
0008 RETURN CV0($unit)
0009 EXT_STMT
0010 T4 = TYPE_CHECK (null) CV1($value)
0011 JMPZ T4 0016
0012 EXT_STMT
0013 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("BYTES")
0014 VERIFY_RETURN_TYPE T5
0015 RETURN T5
0016 EXT_STMT
0017 T6 = DIV CV1($value) float(1e+09)
0018 T7 = IS_SMALLER_OR_EQUAL int(1) T6
0019 JMPZ T7 0024
0020 EXT_STMT
0021 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("GIGABYTES")
0022 VERIFY_RETURN_TYPE T8
0023 RETURN T8
0024 EXT_STMT
0025 T9 = DIV CV1($value) float(1e+06)
0026 T10 = IS_SMALLER_OR_EQUAL int(1) T9
0027 JMPZ T10 0032
0028 EXT_STMT
0029 T11 = FETCH_CLASS_CONSTANT (self) (exception) string("MEGABYTES")
0030 VERIFY_RETURN_TYPE T11
0031 RETURN T11
0032 EXT_STMT
0033 T12 = DIV CV1($value) float(1000)
0034 T13 = IS_SMALLER_OR_EQUAL int(1) T12
0035 JMPZ T13 0040
0036 EXT_STMT
0037 T14 = FETCH_CLASS_CONSTANT (self) (exception) string("KILOBYTES")
0038 VERIFY_RETURN_TYPE T14
0039 RETURN T14
0040 EXT_STMT
0041 T15 = FETCH_CLASS_CONSTANT (self) (exception) string("BYTES")
0042 VERIFY_RETURN_TYPE T15
0043 RETURN T15
0044 EXT_STMT
0045 VERIFY_RETURN_TYPE
0046 RETURN null
LIVE RANGES:
     5: 0014 - 0015 (tmp/var)
     8: 0022 - 0023 (tmp/var)
     11: 0030 - 0031 (tmp/var)
     14: 0038 - 0039 (tmp/var)
     15: 0042 - 0043 (tmp/var)

PhpBench\Util\MemoryUnit::resolveUnit:
     ; (lines=39, args=1, vars=1, tmps=14)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Util/MemoryUnit.php:100-114
     ; return  [] RANGE[0..0]
0000 CV0($unit) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_STATIC_PROP_IS string("aliases") (self) (exception)
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($unit)
0004 JMPZ T2 0009
0005 EXT_STMT
0006 T3 = FETCH_STATIC_PROP_R string("aliases") (self) (exception)
0007 T4 = FETCH_DIM_R T3 CV0($unit)
0008 ASSIGN CV0($unit) T4
0009 EXT_STMT
0010 T6 = FETCH_STATIC_PROP_IS string("multipliers") (self) (exception)
0011 T7 = ISSET_ISEMPTY_DIM_OBJ (isset) T6 CV0($unit)
0012 T8 = BOOL_NOT T7
0013 JMPZ T8 0033
0014 EXT_STMT
0015 V9 = NEW 1 string("RuntimeException")
0016 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Util\sprintf")
0017 SEND_VAL_EX string("Unknown memory unit "%s", known memory units: "%s"") 1
0018 SEND_VAR_EX CV0($unit) 2
0019 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Util\implode")
0020 SEND_VAL_EX string("", "") 1
0021 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Util\array_keys")
0022 CHECK_FUNC_ARG 1
0023 V10 = FETCH_STATIC_PROP_FUNC_ARG (ref) string("multipliers") (self) (exception)
0024 SEND_FUNC_ARG V10 1
0025 V11 = DO_FCALL
0026 SEND_VAR_NO_REF_EX V11 2
0027 V12 = DO_FCALL
0028 SEND_VAR_NO_REF_EX V12 3
0029 V13 = DO_FCALL
0030 SEND_VAR_NO_REF_EX V13 1
0031 DO_FCALL
0032 THROW V9
0033 EXT_STMT
0034 VERIFY_RETURN_TYPE CV0($unit)
0035 RETURN CV0($unit)
0036 EXT_STMT
0037 VERIFY_RETURN_TYPE
0038 RETURN null
LIVE RANGES:
     9: 0016 - 0032 (new)

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parser.php:1-122
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 EXT_STMT
0009 RETURN int(1)

PhpBench\Expression\Parser::__construct:
     ; (lines=14, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parser.php:36-44
     ; return  [] RANGE[0..0]
0000 CV0($prefixParselets) = RECV 1
0001 CV1($infixParselets) = RECV 2
0002 CV2($suffixParselets) = RECV 3
0003 EXT_STMT
0004 ASSIGN_OBJ THIS string("prefixParselets")
0005 OP_DATA CV0($prefixParselets)
0006 EXT_STMT
0007 ASSIGN_OBJ THIS string("infixParselets")
0008 OP_DATA CV1($infixParselets)
0009 EXT_STMT
0010 ASSIGN_OBJ THIS string("suffixParselets")
0011 OP_DATA CV2($suffixParselets)
0012 EXT_STMT
0013 RETURN null

PhpBench\Expression\Parser::parse:
     ; (lines=38, args=1, vars=2, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parser.php:46-60
     ; return  [] RANGE[0..0]
0000 CV0($tokens) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 CV0($tokens) string("withoutWhitespace")
0003 V2 = DO_FCALL
0004 ASSIGN CV0($tokens) V2
0005 EXT_STMT
0006 INIT_METHOD_CALL 1 THIS string("parseList")
0007 SEND_VAR_EX CV0($tokens) 1
0008 V4 = DO_FCALL
0009 ASSIGN CV1($node) V4
0010 EXT_STMT
0011 INIT_METHOD_CALL 0 CV0($tokens) string("hasMore")
0012 V6 = DO_FCALL
0013 JMPZ V6 0032
0014 EXT_STMT
0015 INIT_STATIC_METHOD_CALL 3 string("PhpBench\Expression\Exception\SyntaxError") string("forToken")
0016 SEND_VAR_EX CV0($tokens) 1
0017 INIT_METHOD_CALL 0 CV0($tokens) string("current")
0018 V7 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V7 2
0020 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\sprintf")
0021 SEND_VAL_EX string("Unexpected "%s" at end of expression") 1
0022 CHECK_FUNC_ARG 2
0023 INIT_METHOD_CALL 0 CV0($tokens) string("current")
0024 V8 = DO_FCALL
0025 V8 = SEPARATE V8
0026 V9 = FETCH_OBJ_FUNC_ARG (ref) V8 string("type")
0027 SEND_FUNC_ARG V9 2
0028 V10 = DO_FCALL
0029 SEND_VAR_NO_REF_EX V10 3
0030 V11 = DO_FCALL
0031 THROW V11
0032 EXT_STMT
0033 VERIFY_RETURN_TYPE CV1($node)
0034 RETURN CV1($node)
0035 EXT_STMT
0036 VERIFY_RETURN_TYPE
0037 RETURN null

PhpBench\Expression\Parser::parseList:
     ; (lines=44, args=1, vars=3, tmps=15)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parser.php:62-78
     ; return  [] RANGE[0..0]
0000 CV0($tokens) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 THIS string("parseExpression")
0003 SEND_VAR_EX CV0($tokens) 1
0004 V3 = DO_FCALL
0005 ASSIGN CV1($expression) V3
0006 EXT_STMT
0007 T5 = INIT_ARRAY 1 (packed) CV1($expression) NEXT
0008 ASSIGN CV2($list) T5
0009 EXT_STMT
0010 JMP 0020
0011 EXT_STMT
0012 INIT_METHOD_CALL 0 CV0($tokens) string("chomp")
0013 DO_FCALL
0014 EXT_STMT
0015 INIT_METHOD_CALL 1 THIS string("parseExpression")
0016 SEND_VAR_EX CV0($tokens) 1
0017 V9 = DO_FCALL
0018 ASSIGN_DIM CV2($list) NEXT
0019 OP_DATA V9
0020 INIT_METHOD_CALL 0 CV0($tokens) string("current")
0021 V10 = DO_FCALL
0022 T11 = FETCH_OBJ_R V10 string("type")
0023 T12 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_COMMA")
0024 T13 = IS_IDENTICAL T11 T12
0025 JMPNZ T13 0011
0026 EXT_STMT
0027 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\count")
0028 SEND_VAR_EX CV2($list) 1
0029 V14 = DO_FCALL
0030 T15 = IS_SMALLER int(1) V14
0031 JMPZ T15 0038
0032 EXT_STMT
0033 V16 = NEW 1 string("PhpBench\Expression\Ast\ArgumentListNode")
0034 SEND_VAR_EX CV2($list) 1
0035 DO_FCALL
0036 VERIFY_RETURN_TYPE V16
0037 RETURN V16
0038 EXT_STMT
0039 VERIFY_RETURN_TYPE CV1($expression)
0040 RETURN CV1($expression)
0041 EXT_STMT
0042 VERIFY_RETURN_TYPE
0043 RETURN null
LIVE RANGES:
     11: 0023 - 0024 (tmp/var)
     16: 0034 - 0036 (new)
     16: 0036 - 0037 (tmp/var)

PhpBench\Expression\Parser::parseExpression:
     ; (lines=91, args=2, vars=7, tmps=31)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parser.php:80-109
     ; return  [] RANGE[0..0]
0000 CV0($tokens) = RECV 1
0001 CV1($precedence) = RECV_INIT 2 int(0)
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 CV0($tokens) string("current")
0004 V7 = DO_FCALL
0005 ASSIGN CV2($token) V7
0006 NOP
0007 EXT_STMT
0008 T9 = FETCH_OBJ_R THIS string("prefixParselets")
0009 INIT_METHOD_CALL 1 T9 string("forToken")
0010 SEND_VAR_EX CV2($token) 1
0011 V10 = DO_FCALL
0012 INIT_METHOD_CALL 2 V10 string("parse")
0013 V11 = FETCH_THIS
0014 SEND_VAR_EX V11 1
0015 SEND_VAR_EX CV0($tokens) 2
0016 V12 = DO_FCALL
0017 ASSIGN CV3($left) V12
0018 JMP 0033
0019 CV4($notFound) = CATCH string("PhpBench\Expression\Exception\ParseletNotFound")
0020 EXT_STMT
0021 INIT_STATIC_METHOD_CALL 3 string("PhpBench\Expression\Exception\SyntaxError") string("forToken")
0022 SEND_VAR_EX CV0($tokens) 1
0023 SEND_VAR_EX CV2($token) 2
0024 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\sprintf")
0025 SEND_VAL_EX string("Could not find parselet for "%s" token") 1
0026 CHECK_FUNC_ARG 2
0027 V14 = FETCH_OBJ_FUNC_ARG (ref) CV2($token) string("type")
0028 SEND_FUNC_ARG V14 2
0029 V15 = DO_FCALL
0030 SEND_VAR_NO_REF_EX V15 3
0031 V16 = DO_FCALL
0032 THROW V16
0033 EXT_STMT
0034 T17 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_EOF")
0035 INIT_METHOD_CALL 0 CV0($tokens) string("current")
0036 V18 = DO_FCALL
0037 T19 = FETCH_OBJ_R V18 string("type")
0038 T20 = IS_IDENTICAL T17 T19
0039 JMPZ T20 0043
0040 EXT_STMT
0041 VERIFY_RETURN_TYPE CV3($left)
0042 RETURN CV3($left)
0043 EXT_STMT
0044 T21 = FETCH_OBJ_R THIS string("suffixParselets")
0045 INIT_METHOD_CALL 1 T21 string("forTokenOrNull")
0046 INIT_METHOD_CALL 0 CV0($tokens) string("current")
0047 V22 = DO_FCALL
0048 SEND_VAR_NO_REF_EX V22 1
0049 V23 = DO_FCALL
0050 ASSIGN CV5($suffixParser) V23
0051 EXT_STMT
0052 T25 = INSTANCEOF CV5($suffixParser) string("PhpBench\Expression\SuffixParselet")
0053 JMPZ T25 0060
0054 EXT_STMT
0055 INIT_METHOD_CALL 2 CV5($suffixParser) string("parse")
0056 SEND_VAR_EX CV3($left) 1
0057 SEND_VAR_EX CV0($tokens) 2
0058 V26 = DO_FCALL
0059 ASSIGN CV3($left) V26
0060 EXT_STMT
0061 JMP 0078
0062 EXT_STMT
0063 T28 = FETCH_OBJ_R THIS string("infixParselets")
0064 INIT_METHOD_CALL 1 T28 string("forToken")
0065 INIT_METHOD_CALL 0 CV0($tokens) string("current")
0066 V29 = DO_FCALL
0067 SEND_VAR_NO_REF_EX V29 1
0068 V30 = DO_FCALL
0069 ASSIGN CV6($infixParselet) V30
0070 EXT_STMT
0071 INIT_METHOD_CALL 3 CV6($infixParselet) string("parse")
0072 V32 = FETCH_THIS
0073 SEND_VAR_EX V32 1
0074 SEND_VAR_EX CV3($left) 2
0075 SEND_VAR_EX CV0($tokens) 3
0076 V33 = DO_FCALL
0077 ASSIGN CV3($left) V33
0078 INIT_METHOD_CALL 1 THIS string("infixPrecedence")
0079 INIT_METHOD_CALL 0 CV0($tokens) string("current")
0080 V35 = DO_FCALL
0081 SEND_VAR_NO_REF_EX V35 1
0082 V36 = DO_FCALL
0083 T37 = IS_SMALLER CV1($precedence) V36
0084 JMPNZ T37 0062
0085 EXT_STMT
0086 VERIFY_RETURN_TYPE CV3($left)
0087 RETURN CV3($left)
0088 EXT_STMT
0089 VERIFY_RETURN_TYPE
0090 RETURN null
LIVE RANGES:
     17: 0035 - 0038 (tmp/var)
EXCEPTION TABLE:
     0007, 0019, -, -

PhpBench\Expression\Parser::infixPrecedence:
     ; (lines=20, args=1, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parser.php:111-120
     ; return  [] RANGE[0..0]
0000 CV0($token) = RECV 1
0001 EXT_STMT
0002 T2 = FETCH_OBJ_R THIS string("infixParselets")
0003 INIT_METHOD_CALL 1 T2 string("forTokenOrNull")
0004 SEND_VAR_EX CV0($token) 1
0005 V3 = DO_FCALL
0006 ASSIGN CV1($infixParser) V3
0007 EXT_STMT
0008 T5 = BOOL_NOT CV1($infixParser)
0009 JMPZ T5 0012
0010 EXT_STMT
0011 RETURN int(0)
0012 EXT_STMT
0013 INIT_METHOD_CALL 0 CV1($infixParser) string("precedence")
0014 V6 = DO_FCALL
0015 VERIFY_RETURN_TYPE V6
0016 RETURN V6
0017 EXT_STMT
0018 VERIFY_RETURN_TYPE
0019 RETURN null
LIVE RANGES:
     6: 0015 - 0016 (tmp/var)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselets.php:1-94
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 EXT_STMT
0004 RETURN int(1)

PhpBench\Expression\Parselets::__construct:
     ; (lines=18, args=2, vars=3, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselets.php:25-32
     ; return  [] RANGE[0..0]
0000 CV0($parselets) = RECV 1
0001 CV1($type) = RECV 2
0002 EXT_STMT
0003 V3 = FE_RESET_R CV0($parselets) 0012
0004 FE_FETCH_R V3 CV2($parselet) 0012
0005 EXT_STMT
0006 INIT_METHOD_CALL 0 CV2($parselet) string("tokenType")
0007 V5 = DO_FCALL
0008 V4 = FETCH_OBJ_W (dim write) THIS string("parselets")
0009 ASSIGN_DIM V4 V5
0010 OP_DATA CV2($parselet)
0011 JMP 0004
0012 FE_FREE V3
0013 EXT_STMT
0014 ASSIGN_OBJ THIS string("type")
0015 OP_DATA CV1($type)
0016 EXT_STMT
0017 RETURN null
LIVE RANGES:
     3: 0004 - 0012 (loop)
     5: 0008 - 0009 (tmp/var)

PhpBench\Expression\Parselets::fromPrefixParselets:
     ; (lines=11, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselets.php:39-42
     ; return  [] RANGE[0..0]
0000 CV0($parselets) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 (self) (exception)
0003 SEND_VAR_EX CV0($parselets) 1
0004 SEND_VAL_EX string("prefix") 2
0005 DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0006 (new)
     1: 0006 - 0007 (tmp/var)

PhpBench\Expression\Parselets::fromInfixParselets:
     ; (lines=11, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselets.php:49-52
     ; return  [] RANGE[0..0]
0000 CV0($parselets) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 (self) (exception)
0003 SEND_VAR_EX CV0($parselets) 1
0004 SEND_VAL_EX string("infix") 2
0005 DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0006 (new)
     1: 0006 - 0007 (tmp/var)

PhpBench\Expression\Parselets::fromSuffixParselets:
     ; (lines=11, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselets.php:59-62
     ; return  [] RANGE[0..0]
0000 CV0($parselets) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 (self) (exception)
0003 SEND_VAR_EX CV0($parselets) 1
0004 SEND_VAL_EX string("suffix") 2
0005 DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0003 - 0006 (new)
     1: 0006 - 0007 (tmp/var)

PhpBench\Expression\Parselets::forToken:
     ; (lines=29, args=1, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselets.php:67-80
     ; return  [] RANGE[0..0]
0000 CV0($token) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 THIS string("forTokenOrNull")
0003 SEND_VAR_EX CV0($token) 1
0004 V2 = DO_FCALL
0005 ASSIGN CV1($parselet) V2
0006 EXT_STMT
0007 T4 = TYPE_CHECK (null) CV1($parselet)
0008 JMPZ T4 0023
0009 EXT_STMT
0010 V5 = NEW 1 string("PhpBench\Expression\Exception\ParseletNotFound")
0011 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\sprintf")
0012 SEND_VAL_EX string("No %s parslet for token type "%s" registered") 1
0013 CHECK_FUNC_ARG 2
0014 V6 = FETCH_OBJ_FUNC_ARG (ref) THIS string("type")
0015 SEND_FUNC_ARG V6 2
0016 CHECK_FUNC_ARG 3
0017 V7 = FETCH_OBJ_FUNC_ARG (ref) CV0($token) string("type")
0018 SEND_FUNC_ARG V7 3
0019 V8 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V8 1
0021 DO_FCALL
0022 THROW V5
0023 EXT_STMT
0024 VERIFY_RETURN_TYPE CV1($parselet)
0025 RETURN CV1($parselet)
0026 EXT_STMT
0027 VERIFY_RETURN_TYPE
0028 RETURN null
LIVE RANGES:
     5: 0011 - 0022 (new)

PhpBench\Expression\Parselets::forTokenOrNull:
     ; (lines=18, args=1, vars=1, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselets.php:85-92
     ; return  [] RANGE[0..0]
0000 CV0($token) = RECV 1
0001 EXT_STMT
0002 T2 = FETCH_OBJ_R CV0($token) string("type")
0003 T1 = FETCH_OBJ_IS THIS string("parselets")
0004 T3 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 T2
0005 T4 = BOOL_NOT T3
0006 JMPZ T4 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 T6 = FETCH_OBJ_R CV0($token) string("type")
0011 T5 = FETCH_OBJ_R THIS string("parselets")
0012 T7 = FETCH_DIM_R T5 T6
0013 VERIFY_RETURN_TYPE T7
0014 RETURN T7
0015 EXT_STMT
0016 VERIFY_RETURN_TYPE
0017 RETURN null
LIVE RANGES:
     2: 0003 - 0004 (tmp/var)
     6: 0011 - 0012 (tmp/var)
     7: 0013 - 0014 (tmp/var)

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ListParselet.php:1-42
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 EXT_STMT
0008 DECLARE_CLASS string("phpbench\expression\parselet\listparselet")
0009 RETURN int(1)

PhpBench\Expression\Parselet\ListParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ListParselet.php:15-18
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_OPEN_LIST")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\ListParselet::parse:
     ; (lines=53, args=2, vars=4, tmps=20)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ListParselet.php:20-40
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($tokens) = RECV 2
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 CV1($tokens) string("chomp")
0004 DO_FCALL
0005 EXT_STMT
0006 INIT_METHOD_CALL 0 CV1($tokens) string("current")
0007 V5 = DO_FCALL
0008 T6 = FETCH_OBJ_R V5 string("type")
0009 T7 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_CLOSE_LIST")
0010 T8 = IS_IDENTICAL T6 T7
0011 JMPZ T8 0023
0012 EXT_STMT
0013 INIT_METHOD_CALL 1 CV1($tokens) string("chomp")
0014 T9 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_CLOSE_LIST")
0015 SEND_VAL_EX T9 1
0016 DO_FCALL
0017 EXT_STMT
0018 V11 = NEW 1 string("PhpBench\Expression\Ast\ListNode")
0019 SEND_VAL_EX array(...) 1
0020 DO_FCALL
0021 VERIFY_RETURN_TYPE V11
0022 RETURN V11
0023 EXT_STMT
0024 INIT_METHOD_CALL 1 CV0($parser) string("parseList")
0025 SEND_VAR_EX CV1($tokens) 1
0026 V13 = DO_FCALL
0027 ASSIGN CV2($list) V13
0028 EXT_STMT
0029 INIT_METHOD_CALL 1 CV1($tokens) string("chomp")
0030 T15 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_CLOSE_LIST")
0031 SEND_VAL_EX T15 1
0032 DO_FCALL
0033 EXT_STMT
0034 T17 = INSTANCEOF CV2($list) string("PhpBench\Expression\Ast\ArgumentListNode")
0035 JMPZ T17 0041
0036 EXT_STMT
0037 INIT_METHOD_CALL 0 CV2($list) string("nodes")
0038 V18 = DO_FCALL
0039 ASSIGN CV3($values) V18
0040 JMP 0044
0041 EXT_STMT
0042 T20 = INIT_ARRAY 1 (packed) CV2($list) NEXT
0043 ASSIGN CV3($values) T20
0044 EXT_STMT
0045 V22 = NEW 1 string("PhpBench\Expression\Ast\ListNode")
0046 SEND_VAR_EX CV3($values) 1
0047 DO_FCALL
0048 VERIFY_RETURN_TYPE V22
0049 RETURN V22
0050 EXT_STMT
0051 VERIFY_RETURN_TYPE
0052 RETURN null
LIVE RANGES:
     6: 0009 - 0010 (tmp/var)
     11: 0019 - 0021 (new)
     11: 0021 - 0022 (tmp/var)
     22: 0046 - 0048 (new)
     22: 0048 - 0049 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/PrefixParselet.php:1-11
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 DECLARE_CLASS string("phpbench\expression\prefixparselet")
0003 RETURN int(1)

PhpBench\Expression\PrefixParselet::parse:
     ; (lines=5, args=2, vars=2, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/PrefixParselet.php:9-9
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($tokens) = RECV 2
0002 EXT_STMT
0003 VERIFY_RETURN_TYPE
0004 RETURN null

$_main:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet.php:1-9
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN int(1)

PhpBench\Expression\Parselet::tokenType:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet.php:7-7
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 VERIFY_RETURN_TYPE
0002 RETURN null

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/FunctionParselet.php:1-45
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 EXT_STMT
0008 DECLARE_CLASS string("phpbench\expression\parselet\functionparselet")
0009 RETURN int(1)

PhpBench\Expression\Parselet\FunctionParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/FunctionParselet.php:15-18
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_FUNCTION")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\FunctionParselet::parse:
     ; (lines=47, args=2, vars=4, tmps=17)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/FunctionParselet.php:20-34
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($tokens) = RECV 2
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 CV1($tokens) string("chomp")
0004 V4 = DO_FCALL
0005 ASSIGN CV2($functionToken) V4
0006 EXT_STMT
0007 INIT_METHOD_CALL 0 CV1($tokens) string("current")
0008 V6 = DO_FCALL
0009 T7 = FETCH_OBJ_R V6 string("type")
0010 T8 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_CLOSE_PAREN")
0011 T9 = IS_IDENTICAL T7 T8
0012 JMPZ T9 0016
0013 EXT_STMT
0014 ASSIGN CV3($arguments) null
0015 JMP 0026
0016 EXT_STMT
0017 INIT_METHOD_CALL 1 CV0($parser) string("parseList")
0018 SEND_VAR_EX CV1($tokens) 1
0019 V11 = DO_FCALL
0020 ASSIGN CV3($arguments) V11
0021 EXT_STMT
0022 INIT_METHOD_CALL 1 THIS string("resolveArguments")
0023 SEND_VAR_EX CV3($arguments) 1
0024 V13 = DO_FCALL
0025 ASSIGN CV3($arguments) V13
0026 EXT_STMT
0027 INIT_METHOD_CALL 1 CV1($tokens) string("chomp")
0028 T15 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_CLOSE_PAREN")
0029 SEND_VAL_EX T15 1
0030 DO_FCALL
0031 EXT_STMT
0032 V17 = NEW 2 string("PhpBench\Expression\Ast\FunctionNode")
0033 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\Parselet\rtrim")
0034 CHECK_FUNC_ARG 1
0035 V18 = FETCH_OBJ_FUNC_ARG (ref) CV2($functionToken) string("value")
0036 SEND_FUNC_ARG V18 1
0037 SEND_VAL_EX string("(") 2
0038 V19 = DO_FCALL
0039 SEND_VAR_NO_REF_EX V19 1
0040 SEND_VAR_EX CV3($arguments) 2
0041 DO_FCALL
0042 VERIFY_RETURN_TYPE V17
0043 RETURN V17
0044 EXT_STMT
0045 VERIFY_RETURN_TYPE
0046 RETURN null
LIVE RANGES:
     7: 0010 - 0011 (tmp/var)
     17: 0033 - 0042 (new)
     17: 0042 - 0043 (tmp/var)

PhpBench\Expression\Parselet\FunctionParselet::resolveArguments:
     ; (lines=17, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/FunctionParselet.php:36-43
     ; return  [] RANGE[0..0]
0000 CV0($arguments) = RECV 1
0001 EXT_STMT
0002 T1 = INSTANCEOF CV0($arguments) string("PhpBench\Expression\Ast\ArgumentListNode")
0003 JMPZ T1 0007
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE CV0($arguments)
0006 RETURN CV0($arguments)
0007 EXT_STMT
0008 V2 = NEW 1 string("PhpBench\Expression\Ast\ArgumentListNode")
0009 T3 = INIT_ARRAY 1 (packed) CV0($arguments) NEXT
0010 SEND_VAL_EX T3 1
0011 DO_FCALL
0012 VERIFY_RETURN_TYPE V2
0013 RETURN V2
0014 EXT_STMT
0015 VERIFY_RETURN_TYPE
0016 RETURN null
LIVE RANGES:
     2: 0009 - 0012 (new)
     2: 0012 - 0013 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/IntegerParselet.php:1-24
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\parselet\integerparselet")
0008 RETURN int(1)

PhpBench\Expression\Parselet\IntegerParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/IntegerParselet.php:14-17
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_INTEGER")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\IntegerParselet::parse:
     ; (lines=15, args=2, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/IntegerParselet.php:19-22
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($tokens) = RECV 2
0002 EXT_STMT
0003 V2 = NEW 1 string("PhpBench\Expression\Ast\IntegerNode")
0004 INIT_METHOD_CALL 0 CV1($tokens) string("chomp")
0005 V3 = DO_FCALL
0006 T4 = FETCH_OBJ_R V3 string("value")
0007 T5 = CAST (long) T4
0008 SEND_VAL_EX T5 1
0009 DO_FCALL
0010 VERIFY_RETURN_TYPE V2
0011 RETURN V2
0012 EXT_STMT
0013 VERIFY_RETURN_TYPE
0014 RETURN null
LIVE RANGES:
     2: 0004 - 0010 (new)
     2: 0010 - 0011 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/FloatParselet.php:1-24
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\parselet\floatparselet")
0008 RETURN int(1)

PhpBench\Expression\Parselet\FloatParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/FloatParselet.php:14-17
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_FLOAT")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\FloatParselet::parse:
     ; (lines=15, args=2, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/FloatParselet.php:19-22
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($tokens) = RECV 2
0002 EXT_STMT
0003 V2 = NEW 1 string("PhpBench\Expression\Ast\FloatNode")
0004 INIT_METHOD_CALL 0 CV1($tokens) string("chomp")
0005 V3 = DO_FCALL
0006 T4 = FETCH_OBJ_R V3 string("value")
0007 T5 = CAST (double) T4
0008 SEND_VAL_EX T5 1
0009 DO_FCALL
0010 VERIFY_RETURN_TYPE V2
0011 RETURN V2
0012 EXT_STMT
0013 VERIFY_RETURN_TYPE
0014 RETURN null
LIVE RANGES:
     2: 0004 - 0010 (new)
     2: 0010 - 0011 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ParenthesisParselet.php:1-28
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\parselet\parenthesisparselet")
0008 RETURN int(1)

PhpBench\Expression\Parselet\ParenthesisParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ParenthesisParselet.php:14-17
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_OPEN_PAREN")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\ParenthesisParselet::parse:
     ; (lines=24, args=2, vars=3, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ParenthesisParselet.php:19-26
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($tokens) = RECV 2
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 CV1($tokens) string("chomp")
0004 DO_FCALL
0005 EXT_STMT
0006 INIT_METHOD_CALL 1 CV0($parser) string("parseList")
0007 SEND_VAR_EX CV1($tokens) 1
0008 V4 = DO_FCALL
0009 ASSIGN CV2($expression) V4
0010 EXT_STMT
0011 INIT_METHOD_CALL 1 CV1($tokens) string("chomp")
0012 T6 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_CLOSE_PAREN")
0013 SEND_VAL_EX T6 1
0014 DO_FCALL
0015 EXT_STMT
0016 V8 = NEW 1 string("PhpBench\Expression\Ast\ParenthesisNode")
0017 SEND_VAR_EX CV2($expression) 1
0018 DO_FCALL
0019 VERIFY_RETURN_TYPE V8
0020 RETURN V8
0021 EXT_STMT
0022 VERIFY_RETURN_TYPE
0023 RETURN null
LIVE RANGES:
     8: 0017 - 0019 (new)
     8: 0019 - 0020 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/BooleanParselet.php:1-30
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\parselet\booleanparselet")
0008 RETURN int(1)

PhpBench\Expression\Parselet\BooleanParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/BooleanParselet.php:14-17
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_BOOLEAN")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\BooleanParselet::parse:
     ; (lines=25, args=2, vars=3, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/BooleanParselet.php:19-28
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($tokens) = RECV 2
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 CV1($tokens) string("chomp")
0004 V3 = DO_FCALL
0005 ASSIGN CV2($token) V3
0006 EXT_STMT
0007 T5 = FETCH_OBJ_R CV2($token) string("value")
0008 T6 = IS_IDENTICAL T5 string("true")
0009 JMPZ T6 0016
0010 EXT_STMT
0011 V7 = NEW 1 string("PhpBench\Expression\Ast\BooleanNode")
0012 SEND_VAL_EX bool(true) 1
0013 DO_FCALL
0014 VERIFY_RETURN_TYPE V7
0015 RETURN V7
0016 EXT_STMT
0017 V9 = NEW 1 string("PhpBench\Expression\Ast\BooleanNode")
0018 SEND_VAL_EX bool(false) 1
0019 DO_FCALL
0020 VERIFY_RETURN_TYPE V9
0021 RETURN V9
0022 EXT_STMT
0023 VERIFY_RETURN_TYPE
0024 RETURN null
LIVE RANGES:
     7: 0012 - 0014 (new)
     7: 0014 - 0015 (tmp/var)
     9: 0018 - 0020 (new)
     9: 0020 - 0021 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/StringParselet.php:1-26
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\parselet\stringparselet")
0008 RETURN int(1)

PhpBench\Expression\Parselet\StringParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/StringParselet.php:14-17
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_STRING")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\StringParselet::parse:
     ; (lines=23, args=2, vars=3, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/StringParselet.php:19-24
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($tokens) = RECV 2
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 CV1($tokens) string("chomp")
0004 V3 = DO_FCALL
0005 T4 = FETCH_OBJ_R V3 string("value")
0006 T5 = CAST (string) T4
0007 ASSIGN CV2($string) T5
0008 EXT_STMT
0009 V7 = NEW 1 string("PhpBench\Expression\Ast\StringNode")
0010 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\Parselet\trim")
0011 SEND_VAR_EX CV2($string) 1
0012 CHECK_FUNC_ARG 2
0013 V8 = FETCH_DIM_FUNC_ARG CV2($string) int(0)
0014 SEND_FUNC_ARG V8 2
0015 V9 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V9 1
0017 DO_FCALL
0018 VERIFY_RETURN_TYPE V7
0019 RETURN V7
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     7: 0010 - 0018 (new)
     7: 0018 - 0019 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/VariableParselet.php:1-24
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\parselet\variableparselet")
0008 RETURN int(1)

PhpBench\Expression\Parselet\VariableParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/VariableParselet.php:14-17
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_NAME")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\VariableParselet::parse:
     ; (lines=16, args=2, vars=2, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/VariableParselet.php:19-22
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($tokens) = RECV 2
0002 EXT_STMT
0003 V2 = NEW 1 string("PhpBench\Expression\Ast\VariableNode")
0004 CHECK_FUNC_ARG 1
0005 INIT_METHOD_CALL 0 CV1($tokens) string("chomp")
0006 V3 = DO_FCALL
0007 V3 = SEPARATE V3
0008 V4 = FETCH_OBJ_FUNC_ARG (ref) V3 string("value")
0009 SEND_FUNC_ARG V4 1
0010 DO_FCALL
0011 VERIFY_RETURN_TYPE V2
0012 RETURN V2
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE
0015 RETURN null
LIVE RANGES:
     2: 0004 - 0011 (new)
     2: 0011 - 0012 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/NullParselet.php:1-26
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\parselet\nullparselet")
0008 RETURN int(1)

PhpBench\Expression\Parselet\NullParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/NullParselet.php:14-17
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_NULL")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\NullParselet::parse:
     ; (lines=13, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/NullParselet.php:19-24
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($tokens) = RECV 2
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 CV1($tokens) string("chomp")
0004 DO_FCALL
0005 EXT_STMT
0006 V3 = NEW 0 string("PhpBench\Expression\Ast\NullNode")
0007 DO_FCALL
0008 VERIFY_RETURN_TYPE V3
0009 RETURN V3
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     3: 0007 - 0008 (new)
     3: 0008 - 0009 (tmp/var)

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/LogicalOperatorParselet.php:1-46
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 EXT_STMT
0008 DECLARE_CLASS string("phpbench\expression\parselet\logicaloperatorparselet")
0009 RETURN int(1)

PhpBench\Expression\Parselet\LogicalOperatorParselet::__construct:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/LogicalOperatorParselet.php:22-26
     ; return  [] RANGE[0..0]
0000 CV0($tokenType) = RECV 1
0001 CV1($precedence) = RECV 2
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("tokenType")
0004 OP_DATA CV0($tokenType)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("precedence")
0007 OP_DATA CV1($precedence)
0008 EXT_STMT
0009 RETURN null

PhpBench\Expression\Parselet\LogicalOperatorParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/LogicalOperatorParselet.php:28-31
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("tokenType")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\LogicalOperatorParselet::parse:
     ; (lines=28, args=3, vars=5, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/LogicalOperatorParselet.php:33-39
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($left) = RECV 2
0002 CV2($tokens) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 0 CV2($tokens) string("chomp")
0005 V5 = DO_FCALL
0006 ASSIGN CV3($binaryOperator) V5
0007 EXT_STMT
0008 INIT_METHOD_CALL 2 CV0($parser) string("parseExpression")
0009 SEND_VAR_EX CV2($tokens) 1
0010 CHECK_FUNC_ARG 2
0011 V7 = FETCH_OBJ_FUNC_ARG (ref) THIS string("precedence")
0012 SEND_FUNC_ARG V7 2
0013 V8 = DO_FCALL
0014 ASSIGN CV4($right) V8
0015 EXT_STMT
0016 V10 = NEW 3 string("PhpBench\Expression\Ast\LogicalOperatorNode")
0017 SEND_VAR_EX CV1($left) 1
0018 CHECK_FUNC_ARG 2
0019 V11 = FETCH_OBJ_FUNC_ARG (ref) CV3($binaryOperator) string("value")
0020 SEND_FUNC_ARG V11 2
0021 SEND_VAR_EX CV4($right) 3
0022 DO_FCALL
0023 VERIFY_RETURN_TYPE V10
0024 RETURN V10
0025 EXT_STMT
0026 VERIFY_RETURN_TYPE
0027 RETURN null
LIVE RANGES:
     10: 0017 - 0023 (new)
     10: 0023 - 0024 (tmp/var)

PhpBench\Expression\Parselet\LogicalOperatorParselet::precedence:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/LogicalOperatorParselet.php:41-44
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("precedence")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/InfixParselet.php:1-13
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 DECLARE_CLASS string("phpbench\expression\infixparselet")
0003 RETURN int(1)

PhpBench\Expression\InfixParselet::parse:
     ; (lines=6, args=3, vars=3, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/InfixParselet.php:9-9
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($left) = RECV 2
0002 CV2($tokens) = RECV 3
0003 EXT_STMT
0004 VERIFY_RETURN_TYPE
0005 RETURN null

PhpBench\Expression\InfixParselet::precedence:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/InfixParselet.php:11-11
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 VERIFY_RETURN_TYPE
0002 RETURN null

$_main:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Precedence.php:1-17
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN int(1)

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ArithmeticOperatorParselet.php:1-46
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 EXT_STMT
0008 DECLARE_CLASS string("phpbench\expression\parselet\arithmeticoperatorparselet")
0009 RETURN int(1)

PhpBench\Expression\Parselet\ArithmeticOperatorParselet::__construct:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ArithmeticOperatorParselet.php:22-26
     ; return  [] RANGE[0..0]
0000 CV0($tokenType) = RECV 1
0001 CV1($precedence) = RECV 2
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("tokenType")
0004 OP_DATA CV0($tokenType)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("precedence")
0007 OP_DATA CV1($precedence)
0008 EXT_STMT
0009 RETURN null

PhpBench\Expression\Parselet\ArithmeticOperatorParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ArithmeticOperatorParselet.php:28-31
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("tokenType")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\ArithmeticOperatorParselet::parse:
     ; (lines=28, args=3, vars=5, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ArithmeticOperatorParselet.php:33-39
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($left) = RECV 2
0002 CV2($tokens) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 0 CV2($tokens) string("chomp")
0005 V5 = DO_FCALL
0006 ASSIGN CV3($binaryOperator) V5
0007 EXT_STMT
0008 INIT_METHOD_CALL 2 CV0($parser) string("parseExpression")
0009 SEND_VAR_EX CV2($tokens) 1
0010 CHECK_FUNC_ARG 2
0011 V7 = FETCH_OBJ_FUNC_ARG (ref) THIS string("precedence")
0012 SEND_FUNC_ARG V7 2
0013 V8 = DO_FCALL
0014 ASSIGN CV4($right) V8
0015 EXT_STMT
0016 V10 = NEW 3 string("PhpBench\Expression\Ast\ArithmeticOperatorNode")
0017 SEND_VAR_EX CV1($left) 1
0018 CHECK_FUNC_ARG 2
0019 V11 = FETCH_OBJ_FUNC_ARG (ref) CV3($binaryOperator) string("value")
0020 SEND_FUNC_ARG V11 2
0021 SEND_VAR_EX CV4($right) 3
0022 DO_FCALL
0023 VERIFY_RETURN_TYPE V10
0024 RETURN V10
0025 EXT_STMT
0026 VERIFY_RETURN_TYPE
0027 RETURN null
LIVE RANGES:
     10: 0017 - 0023 (new)
     10: 0023 - 0024 (tmp/var)

PhpBench\Expression\Parselet\ArithmeticOperatorParselet::precedence:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ArithmeticOperatorParselet.php:41-44
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("precedence")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ComparisonParselet.php:1-46
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 EXT_STMT
0008 DECLARE_CLASS string("phpbench\expression\parselet\comparisonparselet")
0009 RETURN int(1)

PhpBench\Expression\Parselet\ComparisonParselet::__construct:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ComparisonParselet.php:22-26
     ; return  [] RANGE[0..0]
0000 CV0($tokenType) = RECV 1
0001 CV1($precedence) = RECV 2
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("tokenType")
0004 OP_DATA CV0($tokenType)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("precedence")
0007 OP_DATA CV1($precedence)
0008 EXT_STMT
0009 RETURN null

PhpBench\Expression\Parselet\ComparisonParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ComparisonParselet.php:28-31
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("tokenType")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\ComparisonParselet::parse:
     ; (lines=28, args=3, vars=5, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ComparisonParselet.php:33-39
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($left) = RECV 2
0002 CV2($tokens) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 0 CV2($tokens) string("chomp")
0005 V5 = DO_FCALL
0006 ASSIGN CV3($binaryOperator) V5
0007 EXT_STMT
0008 INIT_METHOD_CALL 2 CV0($parser) string("parseExpression")
0009 SEND_VAR_EX CV2($tokens) 1
0010 CHECK_FUNC_ARG 2
0011 V7 = FETCH_OBJ_FUNC_ARG (ref) THIS string("precedence")
0012 SEND_FUNC_ARG V7 2
0013 V8 = DO_FCALL
0014 ASSIGN CV4($right) V8
0015 EXT_STMT
0016 V10 = NEW 3 string("PhpBench\Expression\Ast\ComparisonNode")
0017 SEND_VAR_EX CV1($left) 1
0018 CHECK_FUNC_ARG 2
0019 V11 = FETCH_OBJ_FUNC_ARG (ref) CV3($binaryOperator) string("value")
0020 SEND_FUNC_ARG V11 2
0021 SEND_VAR_EX CV4($right) 3
0022 DO_FCALL
0023 VERIFY_RETURN_TYPE V10
0024 RETURN V10
0025 EXT_STMT
0026 VERIFY_RETURN_TYPE
0027 RETURN null
LIVE RANGES:
     10: 0017 - 0023 (new)
     10: 0023 - 0024 (tmp/var)

PhpBench\Expression\Parselet\ComparisonParselet::precedence:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ComparisonParselet.php:41-44
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("precedence")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/TolerableParselet.php:1-32
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 EXT_STMT
0008 DECLARE_CLASS string("phpbench\expression\parselet\tolerableparselet")
0009 RETURN int(1)

PhpBench\Expression\Parselet\TolerableParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/TolerableParselet.php:15-18
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_TOLERANCE")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\TolerableParselet::parse:
     ; (lines=20, args=3, vars=3, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/TolerableParselet.php:20-25
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($left) = RECV 2
0002 CV2($tokens) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 0 CV2($tokens) string("chomp")
0005 DO_FCALL
0006 EXT_STMT
0007 V4 = NEW 2 string("PhpBench\Expression\Ast\TolerableNode")
0008 SEND_VAR_EX CV1($left) 1
0009 INIT_METHOD_CALL 2 CV0($parser) string("parseExpression")
0010 SEND_VAR_EX CV2($tokens) 1
0011 SEND_VAL_EX int(100) 2
0012 V5 = DO_FCALL
0013 SEND_VAR_NO_REF_EX V5 2
0014 DO_FCALL
0015 VERIFY_RETURN_TYPE V4
0016 RETURN V4
0017 EXT_STMT
0018 VERIFY_RETURN_TYPE
0019 RETURN null
LIVE RANGES:
     4: 0008 - 0015 (new)
     4: 0015 - 0016 (tmp/var)

PhpBench\Expression\Parselet\TolerableParselet::precedence:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/TolerableParselet.php:27-30
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("TOLERANCE")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=12, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/DisplayAsParselet.php:1-64
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 EXT_STMT
0010 DECLARE_CLASS string("phpbench\expression\parselet\displayasparselet")
0011 RETURN int(1)

PhpBench\Expression\Parselet\DisplayAsParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/DisplayAsParselet.php:19-22
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_AS")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\DisplayAsParselet::parse:
     ; (lines=28, args=3, vars=3, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/DisplayAsParselet.php:24-33
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($left) = RECV 2
0002 CV2($tokens) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 0 CV2($tokens) string("chomp")
0005 DO_FCALL
0006 EXT_STMT
0007 V4 = NEW 3 string("PhpBench\Expression\Ast\DisplayAsNode")
0008 SEND_VAR_EX CV1($left) 1
0009 V5 = NEW 1 string("PhpBench\Expression\Ast\UnitNode")
0010 INIT_METHOD_CALL 2 THIS string("resolveUnit")
0011 SEND_VAR_EX CV2($tokens) 1
0012 SEND_VAR_EX CV0($parser) 2
0013 V6 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V6 1
0015 DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 2
0017 INIT_METHOD_CALL 2 THIS string("resolvePrecision")
0018 SEND_VAR_EX CV2($tokens) 1
0019 SEND_VAR_EX CV0($parser) 2
0020 V8 = DO_FCALL
0021 SEND_VAR_NO_REF_EX V8 3
0022 DO_FCALL
0023 VERIFY_RETURN_TYPE V4
0024 RETURN V4
0025 EXT_STMT
0026 VERIFY_RETURN_TYPE
0027 RETURN null
LIVE RANGES:
     4: 0008 - 0023 (new)
     5: 0010 - 0016 (new)
     4: 0023 - 0024 (tmp/var)

PhpBench\Expression\Parselet\DisplayAsParselet::precedence:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/DisplayAsParselet.php:35-38
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("AS")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\DisplayAsParselet::resolveUnit:
     ; (lines=31, args=2, vars=2, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/DisplayAsParselet.php:40-47
     ; return  [] RANGE[0..0]
0000 CV0($tokens) = RECV 1
0001 CV1($parser) = RECV 2
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 CV0($tokens) string("current")
0004 V2 = DO_FCALL
0005 T3 = FETCH_OBJ_R V2 string("type")
0006 T4 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_UNIT")
0007 T5 = IS_IDENTICAL T3 T4
0008 JMPZ T5 0020
0009 EXT_STMT
0010 V6 = NEW 1 string("PhpBench\Expression\Ast\StringNode")
0011 CHECK_FUNC_ARG 1
0012 INIT_METHOD_CALL 0 CV0($tokens) string("chomp")
0013 V7 = DO_FCALL
0014 V7 = SEPARATE V7
0015 V8 = FETCH_OBJ_FUNC_ARG (ref) V7 string("value")
0016 SEND_FUNC_ARG V8 1
0017 DO_FCALL
0018 VERIFY_RETURN_TYPE V6
0019 RETURN V6
0020 EXT_STMT
0021 INIT_METHOD_CALL 2 CV1($parser) string("parseExpression")
0022 SEND_VAR_EX CV0($tokens) 1
0023 T10 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("AS")
0024 SEND_VAL_EX T10 2
0025 V11 = DO_FCALL
0026 VERIFY_RETURN_TYPE V11
0027 RETURN V11
0028 EXT_STMT
0029 VERIFY_RETURN_TYPE
0030 RETURN null
LIVE RANGES:
     3: 0006 - 0007 (tmp/var)
     6: 0011 - 0018 (new)
     6: 0018 - 0019 (tmp/var)
     11: 0026 - 0027 (tmp/var)

PhpBench\Expression\Parselet\DisplayAsParselet::resolvePrecision:
     ; (lines=34, args=2, vars=2, tmps=11)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/DisplayAsParselet.php:49-62
     ; return  [] RANGE[0..0]
0000 CV0($tokens) = RECV 1
0001 CV1($parser) = RECV 2
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 CV0($tokens) string("current")
0004 V2 = DO_FCALL
0005 T3 = FETCH_OBJ_R V2 string("type")
0006 T4 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_NAME")
0007 T5 = IS_NOT_IDENTICAL T3 T4
0008 JMPZ T5 0011
0009 EXT_STMT
0010 RETURN null
0011 EXT_STMT
0012 INIT_METHOD_CALL 0 CV0($tokens) string("current")
0013 V6 = DO_FCALL
0014 T7 = FETCH_OBJ_R V6 string("value")
0015 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("T_VAL_PRECISION")
0016 T9 = IS_NOT_IDENTICAL T7 T8
0017 JMPZ T9 0020
0018 EXT_STMT
0019 RETURN null
0020 EXT_STMT
0021 INIT_METHOD_CALL 0 CV0($tokens) string("chomp")
0022 DO_FCALL
0023 EXT_STMT
0024 INIT_METHOD_CALL 2 CV1($parser) string("parseExpression")
0025 SEND_VAR_EX CV0($tokens) 1
0026 T11 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("AS")
0027 SEND_VAL_EX T11 2
0028 V12 = DO_FCALL
0029 VERIFY_RETURN_TYPE V12
0030 RETURN V12
0031 EXT_STMT
0032 VERIFY_RETURN_TYPE
0033 RETURN null
LIVE RANGES:
     3: 0006 - 0007 (tmp/var)
     7: 0015 - 0016 (tmp/var)
     12: 0029 - 0030 (tmp/var)

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ConcatParselet.php:1-33
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 EXT_STMT
0008 DECLARE_CLASS string("phpbench\expression\parselet\concatparselet")
0009 RETURN int(1)

PhpBench\Expression\Parselet\ConcatParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ConcatParselet.php:15-18
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_TILDE")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\ConcatParselet::parse:
     ; (lines=22, args=3, vars=5, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ConcatParselet.php:20-26
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($left) = RECV 2
0002 CV2($tokens) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 0 CV2($tokens) string("chomp")
0005 V5 = DO_FCALL
0006 ASSIGN CV3($binaryOperator) V5
0007 EXT_STMT
0008 INIT_METHOD_CALL 1 CV0($parser) string("parseExpression")
0009 SEND_VAR_EX CV2($tokens) 1
0010 V7 = DO_FCALL
0011 ASSIGN CV4($right) V7
0012 EXT_STMT
0013 V9 = NEW 2 string("PhpBench\Expression\Ast\ConcatNode")
0014 SEND_VAR_EX CV1($left) 1
0015 SEND_VAR_EX CV4($right) 2
0016 DO_FCALL
0017 VERIFY_RETURN_TYPE V9
0018 RETURN V9
0019 EXT_STMT
0020 VERIFY_RETURN_TYPE
0021 RETURN null
LIVE RANGES:
     9: 0014 - 0017 (new)
     9: 0017 - 0018 (tmp/var)

PhpBench\Expression\Parselet\ConcatParselet::precedence:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ConcatParselet.php:28-31
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("CONCAT")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ArrayAccessParselet.php:1-34
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 EXT_STMT
0008 DECLARE_CLASS string("phpbench\expression\parselet\arrayaccessparselet")
0009 RETURN int(1)

PhpBench\Expression\Parselet\ArrayAccessParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ArrayAccessParselet.php:15-18
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_OPEN_LIST")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\ArrayAccessParselet::parse:
     ; (lines=28, args=3, vars=4, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ArrayAccessParselet.php:20-27
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($left) = RECV 2
0002 CV2($tokens) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 1 CV2($tokens) string("chomp")
0005 T4 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_OPEN_LIST")
0006 SEND_VAL_EX T4 1
0007 DO_FCALL
0008 EXT_STMT
0009 INIT_METHOD_CALL 1 CV0($parser) string("parseExpression")
0010 SEND_VAR_EX CV2($tokens) 1
0011 V6 = DO_FCALL
0012 ASSIGN CV3($access) V6
0013 EXT_STMT
0014 INIT_METHOD_CALL 1 CV2($tokens) string("chomp")
0015 T8 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_CLOSE_LIST")
0016 SEND_VAL_EX T8 1
0017 DO_FCALL
0018 EXT_STMT
0019 V10 = NEW 2 string("PhpBench\Expression\Ast\AccessNode")
0020 SEND_VAR_EX CV1($left) 1
0021 SEND_VAR_EX CV3($access) 2
0022 DO_FCALL
0023 VERIFY_RETURN_TYPE V10
0024 RETURN V10
0025 EXT_STMT
0026 VERIFY_RETURN_TYPE
0027 RETURN null
LIVE RANGES:
     10: 0020 - 0023 (new)
     10: 0023 - 0024 (tmp/var)

PhpBench\Expression\Parselet\ArrayAccessParselet::precedence:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ArrayAccessParselet.php:29-32
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("COMPARISON_EQUALITY")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=11, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/PropertyAccessParselet.php:1-34
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 EXT_STMT
0009 DECLARE_CLASS string("phpbench\expression\parselet\propertyaccessparselet")
0010 RETURN int(1)

PhpBench\Expression\Parselet\PropertyAccessParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/PropertyAccessParselet.php:16-19
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_DOT")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\PropertyAccessParselet::parse:
     ; (lines=29, args=3, vars=4, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/PropertyAccessParselet.php:21-27
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($left) = RECV 2
0002 CV2($tokens) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 1 CV2($tokens) string("chomp")
0005 T4 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_DOT")
0006 SEND_VAL_EX T4 1
0007 DO_FCALL
0008 EXT_STMT
0009 INIT_METHOD_CALL 1 CV2($tokens) string("chomp")
0010 T6 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_NAME")
0011 SEND_VAL_EX T6 1
0012 V7 = DO_FCALL
0013 ASSIGN CV3($name) V7
0014 EXT_STMT
0015 V9 = NEW 2 string("PhpBench\Expression\Ast\AccessNode")
0016 SEND_VAR_EX CV1($left) 1
0017 V10 = NEW 1 string("PhpBench\Expression\Ast\StringNode")
0018 CHECK_FUNC_ARG 1
0019 V11 = FETCH_OBJ_FUNC_ARG (ref) CV3($name) string("value")
0020 SEND_FUNC_ARG V11 1
0021 DO_FCALL
0022 SEND_VAR_NO_REF_EX V10 2
0023 DO_FCALL
0024 VERIFY_RETURN_TYPE V9
0025 RETURN V9
0026 EXT_STMT
0027 VERIFY_RETURN_TYPE
0028 RETURN null
LIVE RANGES:
     9: 0016 - 0024 (new)
     10: 0018 - 0022 (new)
     9: 0024 - 0025 (tmp/var)

PhpBench\Expression\Parselet\PropertyAccessParselet::precedence:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/PropertyAccessParselet.php:29-32
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("COMPARISON_EQUALITY")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/NullSafeParselet.php:1-32
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 EXT_STMT
0008 DECLARE_CLASS string("phpbench\expression\parselet\nullsafeparselet")
0009 RETURN int(1)

PhpBench\Expression\Parselet\NullSafeParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/NullSafeParselet.php:15-18
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_QUESTION")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\NullSafeParselet::parse:
     ; (lines=15, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/NullSafeParselet.php:20-25
     ; return  [] RANGE[0..0]
0000 CV0($parser) = RECV 1
0001 CV1($left) = RECV 2
0002 CV2($tokens) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 0 CV2($tokens) string("chomp")
0005 DO_FCALL
0006 EXT_STMT
0007 V4 = NEW 1 string("PhpBench\Expression\Ast\NullSafeNode")
0008 SEND_VAR_EX CV1($left) 1
0009 DO_FCALL
0010 VERIFY_RETURN_TYPE V4
0011 RETURN V4
0012 EXT_STMT
0013 VERIFY_RETURN_TYPE
0014 RETURN null
LIVE RANGES:
     4: 0008 - 0010 (new)
     4: 0010 - 0011 (tmp/var)

PhpBench\Expression\Parselet\NullSafeParselet::precedence:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/NullSafeParselet.php:27-30
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Precedence") string("COMPARISON_EQUALITY")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ValueWithUnitParselet.php:1-25
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 EXT_STMT
0008 DECLARE_CLASS string("phpbench\expression\parselet\valuewithunitparselet")
0009 RETURN int(1)

PhpBench\Expression\Parselet\ValueWithUnitParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ValueWithUnitParselet.php:15-18
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_UNIT")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\ValueWithUnitParselet::parse:
     ; (lines=23, args=2, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/ValueWithUnitParselet.php:20-23
     ; return  [] RANGE[0..0]
0000 CV0($left) = RECV 1
0001 CV1($tokens) = RECV 2
0002 EXT_STMT
0003 V2 = NEW 2 string("PhpBench\Expression\Ast\ValueWithUnitNode")
0004 SEND_VAR_EX CV0($left) 1
0005 V3 = NEW 1 string("PhpBench\Expression\Ast\UnitNode")
0006 V4 = NEW 1 string("PhpBench\Expression\Ast\StringNode")
0007 CHECK_FUNC_ARG 1
0008 INIT_METHOD_CALL 0 CV1($tokens) string("chomp")
0009 V5 = DO_FCALL
0010 V5 = SEPARATE V5
0011 V6 = FETCH_OBJ_FUNC_ARG (ref) V5 string("value")
0012 SEND_FUNC_ARG V6 1
0013 DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 1
0015 DO_FCALL
0016 SEND_VAR_NO_REF_EX V3 2
0017 DO_FCALL
0018 VERIFY_RETURN_TYPE V2
0019 RETURN V2
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     2: 0004 - 0018 (new)
     3: 0006 - 0016 (new)
     4: 0007 - 0014 (new)
     2: 0018 - 0019 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/SuffixParselet.php:1-11
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 DECLARE_CLASS string("phpbench\expression\suffixparselet")
0003 RETURN int(1)

PhpBench\Expression\SuffixParselet::parse:
     ; (lines=5, args=2, vars=2, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/SuffixParselet.php:9-9
     ; return  [] RANGE[0..0]
0000 CV0($left) = RECV 1
0001 CV1($tokens) = RECV 2
0002 EXT_STMT
0003 VERIFY_RETURN_TYPE
0004 RETURN null

$_main:
     ; (lines=8, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/PercentageParselet.php:1-25
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 EXT_STMT
0006 DECLARE_CLASS string("phpbench\expression\parselet\percentageparselet")
0007 RETURN int(1)

PhpBench\Expression\Parselet\PercentageParselet::tokenType:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/PercentageParselet.php:13-16
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_PERCENTAGE")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Parselet\PercentageParselet::parse:
     ; (lines=14, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Parselet/PercentageParselet.php:18-23
     ; return  [] RANGE[0..0]
0000 CV0($left) = RECV 1
0001 CV1($tokens) = RECV 2
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 CV1($tokens) string("chomp")
0004 DO_FCALL
0005 EXT_STMT
0006 V3 = NEW 1 string("PhpBench\Expression\Ast\PercentageNode")
0007 SEND_VAR_EX CV0($left) 1
0008 DO_FCALL
0009 VERIFY_RETURN_TYPE V3
0010 RETURN V3
0011 EXT_STMT
0012 VERIFY_RETURN_TYPE
0013 RETURN null
LIVE RANGES:
     3: 0007 - 0009 (new)
     3: 0009 - 0010 (tmp/var)

$_main:
     ; (lines=12, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Evaluator/PrettyErrorEvaluator.php:1-80
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 EXT_STMT
0010 DECLARE_CLASS string("phpbench\expression\evaluator\prettyerrorevaluator")
0011 RETURN int(1)

PhpBench\Expression\Evaluator\PrettyErrorEvaluator::__construct:
     ; (lines=14, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Evaluator/PrettyErrorEvaluator.php:29-37
     ; return  [] RANGE[0..0]
0000 CV0($innerEvaluator) = RECV 1
0001 CV1($printer) = RECV 2
0002 CV2($underlineFactory) = RECV 3
0003 EXT_STMT
0004 ASSIGN_OBJ THIS string("innerEvaluator")
0005 OP_DATA CV0($innerEvaluator)
0006 EXT_STMT
0007 ASSIGN_OBJ THIS string("printer")
0008 OP_DATA CV1($printer)
0009 EXT_STMT
0010 ASSIGN_OBJ THIS string("underlineFactory")
0011 OP_DATA CV2($underlineFactory)
0012 EXT_STMT
0013 RETURN null

PhpBench\Expression\Evaluator\PrettyErrorEvaluator::evaluateType:
     ; (lines=25, args=3, vars=4, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Evaluator/PrettyErrorEvaluator.php:42-49
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 CV1($expectedType) = RECV 2
0002 CV2($params) = RECV 3
0003 NOP
0004 EXT_STMT
0005 T4 = FETCH_OBJ_R THIS string("innerEvaluator")
0006 INIT_METHOD_CALL 3 T4 string("evaluateType")
0007 SEND_VAR_EX CV0($node) 1
0008 SEND_VAR_EX CV1($expectedType) 2
0009 SEND_VAR_EX CV2($params) 3
0010 V5 = DO_FCALL
0011 VERIFY_RETURN_TYPE V5
0012 RETURN V5
0013 JMP 0022
0014 CV3($error) = CATCH string("PhpBench\Expression\Exception\EvaluationError")
0015 EXT_STMT
0016 INIT_METHOD_CALL 3 THIS string("prettyError")
0017 SEND_VAR_EX CV0($node) 1
0018 SEND_VAR_EX CV3($error) 2
0019 SEND_VAR_EX CV2($params) 3
0020 V6 = DO_FCALL
0021 THROW V6
0022 EXT_STMT
0023 VERIFY_RETURN_TYPE
0024 RETURN null
LIVE RANGES:
     5: 0011 - 0012 (tmp/var)
EXCEPTION TABLE:
     0004, 0014, -, -

PhpBench\Expression\Evaluator\PrettyErrorEvaluator::evaluate:
     ; (lines=23, args=2, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Evaluator/PrettyErrorEvaluator.php:54-61
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 CV1($params) = RECV 2
0002 NOP
0003 EXT_STMT
0004 T3 = FETCH_OBJ_R THIS string("innerEvaluator")
0005 INIT_METHOD_CALL 2 T3 string("evaluate")
0006 SEND_VAR_EX CV0($node) 1
0007 SEND_VAR_EX CV1($params) 2
0008 V4 = DO_FCALL
0009 VERIFY_RETURN_TYPE V4
0010 RETURN V4
0011 JMP 0020
0012 CV2($error) = CATCH string("PhpBench\Expression\Exception\EvaluationError")
0013 EXT_STMT
0014 INIT_METHOD_CALL 3 THIS string("prettyError")
0015 SEND_VAR_EX CV0($node) 1
0016 SEND_VAR_EX CV2($error) 2
0017 SEND_VAR_EX CV1($params) 3
0018 V5 = DO_FCALL
0019 THROW V5
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     4: 0009 - 0010 (tmp/var)
EXCEPTION TABLE:
     0003, 0012, -, -

PhpBench\Expression\Evaluator\PrettyErrorEvaluator::prettyError:
     ; (lines=51, args=3, vars=4, tmps=16)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Evaluator/PrettyErrorEvaluator.php:66-78
     ; return  [] RANGE[0..0]
0000 CV0($rootNode) = RECV 1
0001 CV1($error) = RECV 2
0002 CV2($params) = RECV 3
0003 NOP
0004 EXT_STMT
0005 V4 = NEW 3 string("PhpBench\Expression\Exception\EvaluationError")
0006 INIT_METHOD_CALL 0 CV1($error) string("node")
0007 V5 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V5 1
0009 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\Evaluator\implode")
0010 T6 = FETCH_CONSTANT (unqualified-in-namespace) string("PhpBench\Expression\Evaluator\PHP_EOL")
0011 SEND_VAL_EX T6 1
0012 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\Evaluator\sprintf")
0013 SEND_VAL_EX string("%s:") 1
0014 INIT_METHOD_CALL 0 CV1($error) string("getMessage")
0015 V7 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V7 2
0017 V8 = DO_FCALL
0018 T9 = INIT_ARRAY 4 (packed) V8 NEXT
0019 T9 = ADD_ARRAY_ELEMENT string("") NEXT
0020 T10 = FETCH_OBJ_R THIS string("printer")
0021 INIT_METHOD_CALL 1 T10 string("print")
0022 SEND_VAR_EX CV0($rootNode) 1
0023 V11 = DO_FCALL
0024 T12 = CONCAT string("    ") V11
0025 T9 = ADD_ARRAY_ELEMENT T12 NEXT
0026 T13 = FETCH_OBJ_R THIS string("underlineFactory")
0027 INIT_METHOD_CALL 1 T13 string("underline")
0028 INIT_METHOD_CALL 0 CV1($error) string("node")
0029 V14 = DO_FCALL
0030 SEND_VAR_NO_REF_EX V14 1
0031 V15 = DO_FCALL
0032 INIT_METHOD_CALL 1 V15 string("print")
0033 SEND_VAR_EX CV0($rootNode) 1
0034 V16 = DO_FCALL
0035 T17 = CONCAT string("    ") V16
0036 T9 = ADD_ARRAY_ELEMENT T17 NEXT
0037 SEND_VAL_EX T9 2
0038 V18 = DO_FCALL
0039 SEND_VAR_NO_REF_EX V18 2
0040 SEND_VAR_EX CV1($error) 3
0041 DO_FCALL
0042 VERIFY_RETURN_TYPE V4
0043 RETURN V4
0044 JMP 0048
0045 CV3($printError) = CATCH string("PhpBench\Expression\Exception\PrinterError")
0046 EXT_STMT
0047 THROW CV1($error)
0048 EXT_STMT
0049 VERIFY_RETURN_TYPE
0050 RETURN null
LIVE RANGES:
     4: 0006 - 0042 (new)
     9: 0019 - 0037 (tmp/var)
     4: 0042 - 0043 (tmp/var)
EXCEPTION TABLE:
     0004, 0045, -, -

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Evaluator.php:1-24
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 RETURN int(1)

PhpBench\Expression\Evaluator::evaluateType:
     ; (lines=6, args=3, vars=3, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Evaluator.php:17-17
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 CV1($expectedType) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 VERIFY_RETURN_TYPE
0005 RETURN null

PhpBench\Expression\Evaluator::evaluate:
     ; (lines=5, args=2, vars=2, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Evaluator.php:22-22
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 CV1($params) = RECV 2
0002 EXT_STMT
0003 VERIFY_RETURN_TYPE
0004 RETURN null

$_main:
     ; (lines=8, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Evaluator/MainEvaluator.php:1-53
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 EXT_STMT
0006 DECLARE_CLASS string("phpbench\expression\evaluator\mainevaluator")
0007 RETURN int(1)

PhpBench\Expression\Evaluator\MainEvaluator::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Evaluator/MainEvaluator.php:19-22
     ; return  [] RANGE[0..0]
0000 CV0($evaluators) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("evaluators")
0003 OP_DATA CV0($evaluators)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\Evaluator\MainEvaluator::evaluateType:
     ; (lines=33, args=3, vars=4, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Evaluator/MainEvaluator.php:32-43
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 CV1($expectedType) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 2 THIS string("evaluate")
0005 SEND_VAR_EX CV0($node) 1
0006 SEND_VAR_EX CV2($params) 2
0007 V4 = DO_FCALL
0008 ASSIGN CV3($evaluated) V4
0009 EXT_STMT
0010 V6 = FETCH_CLASS (no-autolod) (exception) CV1($expectedType)
0011 T7 = INSTANCEOF CV3($evaluated) V6
0012 JMPZ T7 0016
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE CV3($evaluated)
0015 RETURN CV3($evaluated)
0016 EXT_STMT
0017 V8 = NEW 2 string("PhpBench\Expression\Exception\EvaluationError")
0018 SEND_VAR_EX CV0($node) 1
0019 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\Evaluator\sprintf")
0020 SEND_VAL_EX string("Expected "%s" but got "%s"") 1
0021 SEND_VAR_EX CV1($expectedType) 2
0022 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Evaluator\get_class")
0023 SEND_VAR_EX CV3($evaluated) 1
0024 V9 = DO_FCALL
0025 SEND_VAR_NO_REF_EX V9 3
0026 V10 = DO_FCALL
0027 SEND_VAR_NO_REF_EX V10 2
0028 DO_FCALL
0029 THROW V8
0030 EXT_STMT
0031 VERIFY_RETURN_TYPE
0032 RETURN null
LIVE RANGES:
     8: 0018 - 0029 (new)

PhpBench\Expression\Evaluator\MainEvaluator::evaluate:
     ; (lines=15, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Evaluator/MainEvaluator.php:48-51
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 CV1($params) = RECV 2
0002 EXT_STMT
0003 T2 = FETCH_OBJ_R THIS string("evaluators")
0004 INIT_METHOD_CALL 3 T2 string("evaluate")
0005 V3 = FETCH_THIS
0006 SEND_VAR_EX V3 1
0007 SEND_VAR_EX CV0($node) 2
0008 SEND_VAR_EX CV1($params) 3
0009 V4 = DO_FCALL
0010 VERIFY_RETURN_TYPE V4
0011 RETURN V4
0012 EXT_STMT
0013 VERIFY_RETURN_TYPE
0014 RETURN null
LIVE RANGES:
     4: 0010 - 0011 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluators.php:1-44
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeevaluators")
0006 RETURN int(1)

PhpBench\Expression\NodeEvaluators::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluators.php:19-22
     ; return  [] RANGE[0..0]
0000 CV0($evaluators) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("evaluators")
0003 OP_DATA CV0($evaluators)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\NodeEvaluators::evaluate:
     ; (lines=41, args=3, vars=5, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluators.php:27-42
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T5 = FETCH_OBJ_R THIS string("evaluators")
0005 V6 = FE_RESET_R T5 0024
0006 FE_FETCH_R V6 CV3($nodeEvaluator) 0024
0007 EXT_STMT
0008 INIT_METHOD_CALL 3 CV3($nodeEvaluator) string("evaluate")
0009 SEND_VAR_EX CV0($evaluator) 1
0010 SEND_VAR_EX CV1($node) 2
0011 SEND_VAR_EX CV2($params) 3
0012 V7 = DO_FCALL
0013 ASSIGN CV4($evaluated) V7
0014 EXT_STMT
0015 T9 = TYPE_CHECK (null) CV4($evaluated)
0016 JMPZ T9 0019
0017 EXT_STMT
0018 JMP 0006
0019 EXT_STMT
0020 VERIFY_RETURN_TYPE CV4($evaluated)
0021 FE_FREE V6
0022 RETURN CV4($evaluated)
0023 JMP 0006
0024 FE_FREE V6
0025 EXT_STMT
0026 V10 = NEW 2 string("PhpBench\Expression\Exception\EvaluationError")
0027 SEND_VAR_EX CV1($node) 1
0028 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\sprintf")
0029 SEND_VAL_EX string("Could not find evaluator for node of type "%s"") 1
0030 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\get_class")
0031 SEND_VAR_EX CV1($node) 1
0032 V11 = DO_FCALL
0033 SEND_VAR_NO_REF_EX V11 2
0034 V12 = DO_FCALL
0035 SEND_VAR_NO_REF_EX V12 2
0036 DO_FCALL
0037 THROW V10
0038 EXT_STMT
0039 VERIFY_RETURN_TYPE
0040 RETURN null
LIVE RANGES:
     6: 0006 - 0024 (loop)
     10: 0027 - 0037 (new)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator.php:1-14
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 RETURN int(1)

PhpBench\Expression\NodeEvaluator::evaluate:
     ; (lines=6, args=3, vars=3, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator.php:12-12
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 VERIFY_RETURN_TYPE
0005 RETURN null

$_main:
     ; (lines=8, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ArgumentListEvaluator.php:1-29
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 EXT_STMT
0006 DECLARE_CLASS string("phpbench\expression\nodeevaluator\argumentlistevaluator")
0007 RETURN int(1)

PhpBench\Expression\NodeEvaluator\{closure}:
     ; (lines=12, args=1, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ArgumentListEvaluator.php:23-25
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 BIND_STATIC CV1($evaluator)
0002 BIND_STATIC CV2($params)
0003 EXT_STMT
0004 INIT_METHOD_CALL 3 CV1($evaluator) string("evaluateType")
0005 SEND_VAR_EX CV0($node) 1
0006 SEND_VAL_EX string("PhpBench\Expression\Ast\PhpValue") 2
0007 SEND_VAR_EX CV2($params) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

PhpBench\Expression\NodeEvaluator\ArgumentListEvaluator::evaluate:
     ; (lines=27, args=3, vars=3, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ArgumentListEvaluator.php:16-27
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T3 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ArgumentListNode")
0005 T4 = BOOL_NOT T3
0006 JMPZ T4 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 V5 = NEW 1 string("PhpBench\Expression\Ast\ArgumentListNode")
0011 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\array_map")
0012 T6 = DECLARE_LAMBDA_FUNCTION string("")
0013 BIND_LEXICAL T6 CV0($evaluator)
0014 BIND_LEXICAL T6 CV2($params)
0015 SEND_VAL_EX T6 1
0016 INIT_METHOD_CALL 0 CV1($node) string("nodes")
0017 V7 = DO_FCALL
0018 SEND_VAR_NO_REF_EX V7 2
0019 V8 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V8 1
0021 DO_FCALL
0022 VERIFY_RETURN_TYPE V5
0023 RETURN V5
0024 EXT_STMT
0025 VERIFY_RETURN_TYPE
0026 RETURN null
LIVE RANGES:
     5: 0011 - 0022 (new)
     6: 0013 - 0015 (tmp/var)
     5: 0022 - 0023 (tmp/var)

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ArithmeticOperatorEvaluator.php:1-57
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 EXT_STMT
0008 DECLARE_CLASS string("phpbench\expression\nodeevaluator\arithmeticoperatorevaluator")
0009 RETURN int(1)

PhpBench\Expression\NodeEvaluator\ArithmeticOperatorEvaluator::evaluate:
     ; (lines=47, args=3, vars=6, tmps=13)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ArithmeticOperatorEvaluator.php:18-30
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T6 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ArithmeticOperatorNode")
0005 T7 = BOOL_NOT T6
0006 JMPZ T7 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0011 INIT_METHOD_CALL 0 CV1($node) string("left")
0012 V8 = DO_FCALL
0013 SEND_VAR_NO_REF_EX V8 1
0014 SEND_VAL_EX string("PhpBench\Expression\Ast\NumberNode") 2
0015 SEND_VAR_EX CV2($params) 3
0016 V9 = DO_FCALL
0017 ASSIGN CV3($leftValue) V9
0018 EXT_STMT
0019 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0020 INIT_METHOD_CALL 0 CV1($node) string("right")
0021 V11 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V11 1
0023 SEND_VAL_EX string("PhpBench\Expression\Ast\NumberNode") 2
0024 SEND_VAR_EX CV2($params) 3
0025 V12 = DO_FCALL
0026 ASSIGN CV4($rightValue) V12
0027 EXT_STMT
0028 INIT_METHOD_CALL 3 THIS string("evaluateNode")
0029 SEND_VAR_EX CV1($node) 1
0030 INIT_METHOD_CALL 0 CV3($leftValue) string("value")
0031 V14 = DO_FCALL
0032 SEND_VAR_NO_REF_EX V14 2
0033 INIT_METHOD_CALL 0 CV4($rightValue) string("value")
0034 V15 = DO_FCALL
0035 SEND_VAR_NO_REF_EX V15 3
0036 V16 = DO_FCALL
0037 ASSIGN CV5($value) V16
0038 EXT_STMT
0039 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Ast\PhpValueFactory") string("fromValue")
0040 SEND_VAR_EX CV5($value) 1
0041 V18 = DO_FCALL
0042 VERIFY_RETURN_TYPE V18
0043 RETURN V18
0044 EXT_STMT
0045 VERIFY_RETURN_TYPE
0046 RETURN null
LIVE RANGES:
     18: 0042 - 0043 (tmp/var)

PhpBench\Expression\NodeEvaluator\ArithmeticOperatorEvaluator::evaluateNode:
     ; (lines=47, args=3, vars=3, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ArithmeticOperatorEvaluator.php:38-55
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 CV1($leftValue) = RECV 2
0002 CV2($rightValue) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 0 CV0($node) string("operator")
0005 V3 = DO_FCALL
0006 SWITCH_STRING V3 "+": 0016, "*": 0020, "/": 0024, "-": 0028, default: 0032
0007 T4 = CASE V3 string("+")
0008 JMPNZ T4 0016
0009 T4 = CASE V3 string("*")
0010 JMPNZ T4 0020
0011 T4 = CASE V3 string("/")
0012 JMPNZ T4 0024
0013 T4 = CASE V3 string("-")
0014 JMPNZ T4 0028
0015 JMP 0032
0016 EXT_STMT
0017 T5 = ADD CV1($leftValue) CV2($rightValue)
0018 FREE V3
0019 RETURN T5
0020 EXT_STMT
0021 T6 = MUL CV1($leftValue) CV2($rightValue)
0022 FREE V3
0023 RETURN T6
0024 EXT_STMT
0025 T7 = DIV CV1($leftValue) CV2($rightValue)
0026 FREE V3
0027 RETURN T7
0028 EXT_STMT
0029 T8 = SUB CV1($leftValue) CV2($rightValue)
0030 FREE V3
0031 RETURN T8
0032 FREE V3
0033 EXT_STMT
0034 V9 = NEW 2 string("PhpBench\Expression\Exception\EvaluationError")
0035 SEND_VAR_EX CV0($node) 1
0036 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\sprintf")
0037 SEND_VAL_EX string("Unknown operator "%s"") 1
0038 INIT_METHOD_CALL 0 CV0($node) string("operator")
0039 V10 = DO_FCALL
0040 SEND_VAR_NO_REF_EX V10 2
0041 V11 = DO_FCALL
0042 SEND_VAR_NO_REF_EX V11 2
0043 DO_FCALL
0044 THROW V9
0045 EXT_STMT
0046 RETURN null
LIVE RANGES:
     3: 0006 - 0032 (tmp/var)
     5: 0018 - 0019 (tmp/var)
     6: 0022 - 0023 (tmp/var)
     7: 0026 - 0027 (tmp/var)
     8: 0030 - 0031 (tmp/var)
     9: 0035 - 0044 (new)

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/LogicalOperatorEvaluator.php:1-55
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 EXT_STMT
0008 DECLARE_CLASS string("phpbench\expression\nodeevaluator\logicaloperatorevaluator")
0009 RETURN int(1)

PhpBench\Expression\NodeEvaluator\LogicalOperatorEvaluator::evaluate:
     ; (lines=47, args=3, vars=6, tmps=14)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/LogicalOperatorEvaluator.php:18-38
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T6 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\LogicalOperatorNode")
0005 T7 = BOOL_NOT T6
0006 JMPZ T7 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0011 INIT_METHOD_CALL 0 CV1($node) string("left")
0012 V8 = DO_FCALL
0013 SEND_VAR_NO_REF_EX V8 1
0014 SEND_VAL_EX string("PhpBench\Expression\Ast\PhpValue") 2
0015 SEND_VAR_EX CV2($params) 3
0016 V9 = DO_FCALL
0017 ASSIGN CV3($leftValue) V9
0018 EXT_STMT
0019 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0020 INIT_METHOD_CALL 0 CV1($node) string("right")
0021 V11 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V11 1
0023 SEND_VAL_EX string("PhpBench\Expression\Ast\PhpValue") 2
0024 SEND_VAR_EX CV2($params) 3
0025 V12 = DO_FCALL
0026 ASSIGN CV4($rightValue) V12
0027 EXT_STMT
0028 INIT_METHOD_CALL 3 THIS string("evaluateNode")
0029 SEND_VAR_EX CV1($node) 1
0030 INIT_METHOD_CALL 0 CV3($leftValue) string("value")
0031 V14 = DO_FCALL
0032 SEND_VAR_NO_REF_EX V14 2
0033 INIT_METHOD_CALL 0 CV4($rightValue) string("value")
0034 V15 = DO_FCALL
0035 SEND_VAR_NO_REF_EX V15 3
0036 V16 = DO_FCALL
0037 ASSIGN CV5($value) V16
0038 EXT_STMT
0039 V18 = NEW 1 string("PhpBench\Expression\Ast\BooleanNode")
0040 SEND_VAR_EX CV5($value) 1
0041 DO_FCALL
0042 VERIFY_RETURN_TYPE V18
0043 RETURN V18
0044 EXT_STMT
0045 VERIFY_RETURN_TYPE
0046 RETURN null
LIVE RANGES:
     18: 0040 - 0042 (new)
     18: 0042 - 0043 (tmp/var)

PhpBench\Expression\NodeEvaluator\LogicalOperatorEvaluator::evaluateNode:
     ; (lines=40, args=3, vars=3, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/LogicalOperatorEvaluator.php:40-53
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 CV1($leftValue) = RECV 2
0002 CV2($rightValue) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 0 CV0($node) string("operator")
0005 V3 = DO_FCALL
0006 SWITCH_STRING V3 "or": 0012, "and": 0018, default: 0024
0007 T4 = CASE V3 string("or")
0008 JMPNZ T4 0012
0009 T4 = CASE V3 string("and")
0010 JMPNZ T4 0018
0011 JMP 0024
0012 EXT_STMT
0013 T5 = JMPNZ_EX CV1($leftValue) 0015
0014 T5 = BOOL CV2($rightValue)
0015 VERIFY_RETURN_TYPE T5
0016 FREE V3
0017 RETURN T5
0018 EXT_STMT
0019 T6 = JMPZ_EX CV1($leftValue) 0021
0020 T6 = BOOL CV2($rightValue)
0021 VERIFY_RETURN_TYPE T6
0022 FREE V3
0023 RETURN T6
0024 FREE V3
0025 EXT_STMT
0026 V7 = NEW 2 string("PhpBench\Expression\Exception\EvaluationError")
0027 SEND_VAR_EX CV0($node) 1
0028 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\sprintf")
0029 SEND_VAL_EX string("Unknown operator "%s"") 1
0030 INIT_METHOD_CALL 0 CV0($node) string("operator")
0031 V8 = DO_FCALL
0032 SEND_VAR_NO_REF_EX V8 2
0033 V9 = DO_FCALL
0034 SEND_VAR_NO_REF_EX V9 2
0035 DO_FCALL
0036 THROW V7
0037 EXT_STMT
0038 VERIFY_RETURN_TYPE
0039 RETURN null
LIVE RANGES:
     3: 0006 - 0024 (tmp/var)
     7: 0027 - 0036 (new)

$_main:
     ; (lines=13, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/FunctionEvaluator.php:1-76
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 EXT_STMT
0011 DECLARE_CLASS string("phpbench\expression\nodeevaluator\functionevaluator")
0012 RETURN int(1)

PhpBench\Expression\NodeEvaluator\{closure}:
     ; (lines=12, args=1, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/FunctionEvaluator.php:39-41
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 BIND_STATIC CV1($evaluator)
0002 BIND_STATIC CV2($params)
0003 EXT_STMT
0004 INIT_METHOD_CALL 3 CV1($evaluator) string("evaluateType")
0005 SEND_VAR_EX CV0($node) 1
0006 SEND_VAL_EX string("PhpBench\Expression\Ast\PhpValue") 2
0007 SEND_VAR_EX CV2($params) 3
0008 V3 = DO_FCALL
0009 RETURN V3
0010 EXT_STMT
0011 RETURN null

PhpBench\Expression\NodeEvaluator\{closure}:
     ; (lines=9, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/FunctionEvaluator.php:68-70
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 V1 = FETCH_THIS
0003 INIT_METHOD_CALL 1 V1 string("resolveScalarValues")
0004 SEND_VAR_EX CV0($value) 1
0005 V2 = DO_FCALL
0006 RETURN V2
0007 EXT_STMT
0008 RETURN null

PhpBench\Expression\NodeEvaluator\FunctionEvaluator::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/FunctionEvaluator.php:22-25
     ; return  [] RANGE[0..0]
0000 CV0($functions) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("functions")
0003 OP_DATA CV0($functions)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\NodeEvaluator\FunctionEvaluator::evaluate:
     ; (lines=46, args=3, vars=4, tmps=12)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/FunctionEvaluator.php:30-46
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T4 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\FunctionNode")
0005 T5 = BOOL_NOT T4
0006 JMPZ T5 0009
0007 EXT_STMT
0008 RETURN null
0009 NOP
0010 EXT_STMT
0011 T6 = FETCH_OBJ_R THIS string("functions")
0012 INIT_METHOD_CALL 2 T6 string("execute")
0013 INIT_METHOD_CALL 0 CV1($node) string("name")
0014 V7 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V7 1
0016 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\array_map")
0017 T8 = DECLARE_LAMBDA_FUNCTION string("")
0018 BIND_LEXICAL T8 CV0($evaluator)
0019 BIND_LEXICAL T8 CV2($params)
0020 SEND_VAL_EX T8 1
0021 INIT_METHOD_CALL 1 THIS string("args")
0022 INIT_METHOD_CALL 0 CV1($node) string("args")
0023 V9 = DO_FCALL
0024 SEND_VAR_NO_REF_EX V9 1
0025 V10 = DO_FCALL
0026 SEND_VAR_NO_REF_EX V10 2
0027 V11 = DO_FCALL
0028 SEND_VAR_NO_REF_EX V11 2
0029 V12 = DO_FCALL
0030 VERIFY_RETURN_TYPE V12
0031 RETURN V12
0032 JMP 0043
0033 CV3($throwable) = CATCH string("Throwable")
0034 EXT_STMT
0035 V13 = NEW 3 string("PhpBench\Expression\Exception\EvaluationError")
0036 SEND_VAR_EX CV1($node) 1
0037 INIT_METHOD_CALL 0 CV3($throwable) string("getMessage")
0038 V14 = DO_FCALL
0039 SEND_VAR_NO_REF_EX V14 2
0040 SEND_VAR_EX CV3($throwable) 3
0041 DO_FCALL
0042 THROW V13
0043 EXT_STMT
0044 VERIFY_RETURN_TYPE
0045 RETURN null
LIVE RANGES:
     8: 0018 - 0020 (tmp/var)
     12: 0030 - 0031 (tmp/var)
     13: 0036 - 0042 (new)
EXCEPTION TABLE:
     0010, 0033, -, -

PhpBench\Expression\NodeEvaluator\FunctionEvaluator::args:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/FunctionEvaluator.php:51-58
     ; return  [] RANGE[0..0]
0000 CV0($args) = RECV 1
0001 EXT_STMT
0002 T1 = TYPE_CHECK (null) CV0($args)
0003 JMPZ T1 0006
0004 EXT_STMT
0005 RETURN array(...)
0006 EXT_STMT
0007 INIT_METHOD_CALL 0 CV0($args) string("nodes")
0008 V2 = DO_FCALL
0009 RETURN V2
0010 EXT_STMT
0011 RETURN null

PhpBench\Expression\NodeEvaluator\FunctionEvaluator::resolveScalarValues:
     ; (lines=21, args=1, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/FunctionEvaluator.php:63-74
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 CV0($node) string("value")
0003 V2 = DO_FCALL
0004 ASSIGN CV1($value) V2
0005 EXT_STMT
0006 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodeEvaluator\is_array")
0007 SEND_VAR_EX CV1($value) 1
0008 V4 = DO_FCALL
0009 JMPZ V4 0017
0010 EXT_STMT
0011 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\array_map")
0012 T5 = DECLARE_LAMBDA_FUNCTION string("")
0013 SEND_VAL_EX T5 1
0014 SEND_VAR_EX CV1($value) 2
0015 V6 = DO_FCALL
0016 RETURN V6
0017 EXT_STMT
0018 RETURN CV1($value)
0019 EXT_STMT
0020 RETURN null

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ExpressionFunctions.php:1-61
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 EXT_STMT
0004 RETURN int(1)

PhpBench\Expression\ExpressionFunctions::__construct:
     ; (lines=14, args=1, vars=3, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ExpressionFunctions.php:18-23
     ; return  [] RANGE[0..0]
0000 CV0($functionMap) = RECV 1
0001 EXT_STMT
0002 V3 = FE_RESET_R CV0($functionMap) 0011
0003 T4 = FE_FETCH_R V3 CV1($callable) 0011
0004 ASSIGN CV2($name) T4
0005 EXT_STMT
0006 INIT_METHOD_CALL 2 THIS string("add")
0007 SEND_VAR_EX CV2($name) 1
0008 SEND_VAR_EX CV1($callable) 2
0009 DO_FCALL
0010 JMP 0003
0011 FE_FREE V3
0012 EXT_STMT
0013 RETURN null
LIVE RANGES:
     3: 0003 - 0011 (loop)

PhpBench\Expression\ExpressionFunctions::names:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ExpressionFunctions.php:28-31
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\array_keys")
0002 CHECK_FUNC_ARG 1
0003 V0 = FETCH_OBJ_FUNC_ARG (ref) THIS string("functionMap")
0004 SEND_FUNC_ARG V0 1
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PhpBench\Expression\ExpressionFunctions::add:
     ; (lines=8, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ExpressionFunctions.php:33-36
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 CV1($callable) = RECV 2
0002 EXT_STMT
0003 V2 = FETCH_OBJ_W (dim write) THIS string("functionMap")
0004 ASSIGN_DIM V2 CV0($name)
0005 OP_DATA CV1($callable)
0006 EXT_STMT
0007 RETURN null

PhpBench\Expression\ExpressionFunctions::execute:
     ; (lines=59, args=2, vars=4, tmps=20)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ExpressionFunctions.php:38-59
     ; return  [] RANGE[0..0]
0000 CV0($functionName) = RECV 1
0001 CV1($args) = RECV 2
0002 EXT_STMT
0003 T4 = FETCH_OBJ_IS THIS string("functionMap")
0004 T5 = ISSET_ISEMPTY_DIM_OBJ (isset) T4 CV0($functionName)
0005 T6 = BOOL_NOT T5
0006 JMPZ T6 0026
0007 EXT_STMT
0008 V7 = NEW 1 string("RuntimeException")
0009 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\sprintf")
0010 SEND_VAL_EX string("Unknown function "%s", known functions "%s"") 1
0011 SEND_VAR_EX CV0($functionName) 2
0012 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\implode")
0013 SEND_VAL_EX string("", "") 1
0014 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\array_keys")
0015 CHECK_FUNC_ARG 1
0016 V8 = FETCH_OBJ_FUNC_ARG (ref) THIS string("functionMap")
0017 SEND_FUNC_ARG V8 1
0018 V9 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V9 2
0020 V10 = DO_FCALL
0021 SEND_VAR_NO_REF_EX V10 3
0022 V11 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V11 1
0024 DO_FCALL
0025 THROW V7
0026 EXT_STMT
0027 T13 = FETCH_OBJ_R THIS string("functionMap")
0028 T14 = FETCH_DIM_R T13 CV0($functionName)
0029 ASSIGN CV2($function) T14
0030 EXT_STMT
0031 INIT_DYNAMIC_CALL 0 CV2($function)
0032 SEND_UNPACK CV1($args)
0033 CHECK_UNDEF_ARGS
0034 V16 = DO_FCALL
0035 ASSIGN CV3($evaluated) V16
0036 EXT_STMT
0037 T18 = INSTANCEOF CV3($evaluated) string("PhpBench\Expression\Ast\Node")
0038 T19 = BOOL_NOT T18
0039 JMPZ T19 0053
0040 EXT_STMT
0041 V20 = NEW 1 string("RuntimeException")
0042 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\sprintf")
0043 SEND_VAL_EX string("Function "%s" must return a Node, got "%s"") 1
0044 SEND_VAR_EX CV0($functionName) 2
0045 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\gettype")
0046 SEND_VAR_EX CV3($evaluated) 1
0047 V21 = DO_FCALL
0048 SEND_VAR_NO_REF_EX V21 3
0049 V22 = DO_FCALL
0050 SEND_VAR_NO_REF_EX V22 1
0051 DO_FCALL
0052 THROW V20
0053 EXT_STMT
0054 VERIFY_RETURN_TYPE CV3($evaluated)
0055 RETURN CV3($evaluated)
0056 EXT_STMT
0057 VERIFY_RETURN_TYPE
0058 RETURN null
LIVE RANGES:
     7: 0009 - 0025 (new)
     20: 0042 - 0052 (new)

$_main:
     ; (lines=6, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/ModeFunction.php:1-17
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 RETURN int(1)

PhpBench\Expression\Func\ModeFunction::__invoke:
     ; (lines=23, args=2, vars=2, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/ModeFunction.php:12-15
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 CV1($space) = RECV_INIT 2 null
0002 EXT_STMT
0003 V2 = NEW 1 string("PhpBench\Expression\Ast\FloatNode")
0004 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Math\Statistics") string("kdeMode")
0005 INIT_METHOD_CALL 0 CV0($values) string("nonNullPhpValues")
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 JMPZ CV1($space) 0013
0009 INIT_METHOD_CALL 0 CV1($space) string("value")
0010 V4 = DO_FCALL
0011 T5 = QM_ASSIGN V4
0012 JMP 0014
0013 T5 = QM_ASSIGN int(512)
0014 SEND_VAL_EX T5 2
0015 V6 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V6 1
0017 DO_FCALL
0018 VERIFY_RETURN_TYPE V2
0019 RETURN V2
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     2: 0004 - 0018 (new)
     2: 0018 - 0019 (tmp/var)

$_main:
     ; (lines=6, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/MeanFunction.php:1-19
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 RETURN int(1)

PhpBench\Expression\Func\MeanFunction::__invoke:
     ; (lines=15, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/MeanFunction.php:12-17
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Ast\PhpValueFactory") string("fromValue")
0003 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Math\Statistics") string("mean")
0004 INIT_METHOD_CALL 0 CV0($values) string("nonNullPhpValues")
0005 V1 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V1 1
0007 V2 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V2 1
0009 V3 = DO_FCALL
0010 VERIFY_RETURN_TYPE V3
0011 RETURN V3
0012 EXT_STMT
0013 VERIFY_RETURN_TYPE
0014 RETURN null
LIVE RANGES:
     3: 0010 - 0011 (tmp/var)

$_main:
     ; (lines=6, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/MinFunction.php:1-29
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 RETURN int(1)

PhpBench\Expression\Func\MinFunction::__invoke:
     ; (lines=44, args=1, vars=2, tmps=14)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/MinFunction.php:12-27
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 CV0($values) string("nonNullPhpValues")
0003 V2 = DO_FCALL
0004 ASSIGN CV0($values) V2
0005 EXT_STMT
0006 T4 = ISSET_ISEMPTY_CV (empty) CV0($values)
0007 JMPZ T4 0013
0008 EXT_STMT
0009 V5 = NEW 0 string("PhpBench\Expression\Ast\NullNode")
0010 DO_FCALL
0011 VERIFY_RETURN_TYPE V5
0012 RETURN V5
0013 EXT_STMT
0014 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Func\min")
0015 SEND_VAR_EX CV0($values) 1
0016 V7 = DO_FCALL
0017 ASSIGN CV1($result) V7
0018 EXT_STMT
0019 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Func\is_float")
0020 SEND_VAR_EX CV1($result) 1
0021 V9 = DO_FCALL
0022 T10 = BOOL_NOT V9
0023 T10 = JMPZ_EX T10 0029
0024 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Func\is_int")
0025 SEND_VAR_EX CV1($result) 1
0026 V11 = DO_FCALL
0027 T12 = BOOL_NOT V11
0028 T10 = BOOL T12
0029 JMPZ T10 0035
0030 EXT_STMT
0031 V13 = NEW 0 string("PhpBench\Expression\Ast\NullNode")
0032 DO_FCALL
0033 VERIFY_RETURN_TYPE V13
0034 RETURN V13
0035 EXT_STMT
0036 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Ast\PhpValueFactory") string("fromValue")
0037 SEND_VAR_EX CV1($result) 1
0038 V15 = DO_FCALL
0039 VERIFY_RETURN_TYPE V15
0040 RETURN V15
0041 EXT_STMT
0042 VERIFY_RETURN_TYPE
0043 RETURN null
LIVE RANGES:
     5: 0010 - 0011 (new)
     5: 0011 - 0012 (tmp/var)
     13: 0032 - 0033 (new)
     13: 0033 - 0034 (tmp/var)
     15: 0039 - 0040 (tmp/var)

$_main:
     ; (lines=6, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/MaxFunction.php:1-29
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 RETURN int(1)

PhpBench\Expression\Func\MaxFunction::__invoke:
     ; (lines=44, args=1, vars=2, tmps=14)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/MaxFunction.php:12-27
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 CV0($values) string("nonNullPhpValues")
0003 V2 = DO_FCALL
0004 ASSIGN CV0($values) V2
0005 EXT_STMT
0006 T4 = ISSET_ISEMPTY_CV (empty) CV0($values)
0007 JMPZ T4 0013
0008 EXT_STMT
0009 V5 = NEW 0 string("PhpBench\Expression\Ast\NullNode")
0010 DO_FCALL
0011 VERIFY_RETURN_TYPE V5
0012 RETURN V5
0013 EXT_STMT
0014 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Func\max")
0015 SEND_VAR_EX CV0($values) 1
0016 V7 = DO_FCALL
0017 ASSIGN CV1($result) V7
0018 EXT_STMT
0019 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Func\is_float")
0020 SEND_VAR_EX CV1($result) 1
0021 V9 = DO_FCALL
0022 T10 = BOOL_NOT V9
0023 T10 = JMPZ_EX T10 0029
0024 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Func\is_int")
0025 SEND_VAR_EX CV1($result) 1
0026 V11 = DO_FCALL
0027 T12 = BOOL_NOT V11
0028 T10 = BOOL T12
0029 JMPZ T10 0035
0030 EXT_STMT
0031 V13 = NEW 0 string("PhpBench\Expression\Ast\NullNode")
0032 DO_FCALL
0033 VERIFY_RETURN_TYPE V13
0034 RETURN V13
0035 EXT_STMT
0036 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Ast\PhpValueFactory") string("fromValue")
0037 SEND_VAR_EX CV1($result) 1
0038 V15 = DO_FCALL
0039 VERIFY_RETURN_TYPE V15
0040 RETURN V15
0041 EXT_STMT
0042 VERIFY_RETURN_TYPE
0043 RETURN null
LIVE RANGES:
     5: 0010 - 0011 (new)
     5: 0011 - 0012 (tmp/var)
     13: 0032 - 0033 (new)
     13: 0033 - 0034 (tmp/var)
     15: 0039 - 0040 (tmp/var)

$_main:
     ; (lines=6, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/StDevFunction.php:1-17
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 RETURN int(1)

PhpBench\Expression\Func\StDevFunction::__invoke:
     ; (lines=23, args=2, vars=2, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/StDevFunction.php:12-15
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 CV1($sample) = RECV_INIT 2 null
0002 EXT_STMT
0003 V2 = NEW 1 string("PhpBench\Expression\Ast\FloatNode")
0004 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Math\Statistics") string("stdev")
0005 INIT_METHOD_CALL 0 CV0($values) string("nonNullPhpValues")
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 JMPZ CV1($sample) 0013
0009 INIT_METHOD_CALL 0 CV1($sample) string("value")
0010 V4 = DO_FCALL
0011 T5 = QM_ASSIGN V4
0012 JMP 0014
0013 T5 = QM_ASSIGN bool(false)
0014 SEND_VAL_EX T5 2
0015 V6 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V6 1
0017 DO_FCALL
0018 VERIFY_RETURN_TYPE V2
0019 RETURN V2
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     2: 0004 - 0018 (new)
     2: 0018 - 0019 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/RStDevFunction.php:1-23
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 EXT_STMT
0006 RETURN int(1)

PhpBench\Expression\Func\RStDevFunction::__invoke:
     ; (lines=26, args=2, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/RStDevFunction.php:13-21
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 CV1($sample) = RECV_INIT 2 null
0002 EXT_STMT
0003 V2 = NEW 1 string("PhpBench\Expression\Ast\RelativeDeviationNode")
0004 V3 = NEW 1 string("PhpBench\Expression\Ast\FloatNode")
0005 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Math\Statistics") string("rstdev")
0006 INIT_METHOD_CALL 0 CV0($values) string("nonNullPhpValues")
0007 V4 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V4 1
0009 JMPZ CV1($sample) 0014
0010 INIT_METHOD_CALL 0 CV1($sample) string("value")
0011 V5 = DO_FCALL
0012 T6 = QM_ASSIGN V5
0013 JMP 0015
0014 T6 = QM_ASSIGN bool(false)
0015 SEND_VAL_EX T6 2
0016 V7 = DO_FCALL
0017 SEND_VAR_NO_REF_EX V7 1
0018 DO_FCALL
0019 SEND_VAR_NO_REF_EX V3 1
0020 DO_FCALL
0021 VERIFY_RETURN_TYPE V2
0022 RETURN V2
0023 EXT_STMT
0024 VERIFY_RETURN_TYPE
0025 RETURN null
LIVE RANGES:
     2: 0004 - 0021 (new)
     3: 0005 - 0019 (new)
     2: 0021 - 0022 (tmp/var)

$_main:
     ; (lines=6, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/VarianceFunction.php:1-17
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 RETURN int(1)

PhpBench\Expression\Func\VarianceFunction::__invoke:
     ; (lines=23, args=2, vars=2, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/VarianceFunction.php:12-15
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 CV1($sample) = RECV_INIT 2 null
0002 EXT_STMT
0003 V2 = NEW 1 string("PhpBench\Expression\Ast\FloatNode")
0004 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Math\Statistics") string("variance")
0005 INIT_METHOD_CALL 0 CV0($values) string("nonNullPhpValues")
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 JMPZ CV1($sample) 0013
0009 INIT_METHOD_CALL 0 CV1($sample) string("value")
0010 V4 = DO_FCALL
0011 T5 = QM_ASSIGN V4
0012 JMP 0014
0013 T5 = QM_ASSIGN bool(false)
0014 SEND_VAL_EX T5 2
0015 V6 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V6 1
0017 DO_FCALL
0018 VERIFY_RETURN_TYPE V2
0019 RETURN V2
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     2: 0004 - 0018 (new)
     2: 0018 - 0019 (tmp/var)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/PercentDifferenceFunction.php:1-19
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 EXT_STMT
0004 RETURN int(1)

PhpBench\Expression\Func\PercentDifferenceFunction::__invoke:
     ; (lines=19, args=2, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/PercentDifferenceFunction.php:11-17
     ; return  [] RANGE[0..0]
0000 CV0($value1) = RECV 1
0001 CV1($value2) = RECV 2
0002 EXT_STMT
0003 V2 = NEW 1 string("PhpBench\Expression\Ast\PercentDifferenceNode")
0004 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Math\Statistics") string("percentageDifference")
0005 INIT_METHOD_CALL 0 CV0($value1) string("value")
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 0 CV1($value2) string("value")
0009 V4 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V4 2
0011 V5 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V5 1
0013 DO_FCALL
0014 VERIFY_RETURN_TYPE V2
0015 RETURN V2
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     2: 0004 - 0014 (new)
     2: 0014 - 0015 (tmp/var)

$_main:
     ; (lines=6, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/FormatFunction.php:1-31
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 RETURN int(1)

PhpBench\Expression\Func\{closure}:
     ; (lines=7, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/FormatFunction.php:16-18
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 CV0($value) string("value")
0003 V1 = DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null

PhpBench\Expression\Func\FormatFunction::__invoke:
     ; (lines=60, args=1, vars=5, tmps=21)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/FormatFunction.php:12-29
     ; return  [] RANGE[0..0]
0000 CV0($format) = RECV 1
0001 CV1($values) = RECV_VARIADIC 2
0002 EXT_STMT
0003 INIT_FCALL 0 80 string("error_clear_last")
0004 DO_FCALL
0005 EXT_STMT
0006 T6 = BEGIN_SILENCE
0007 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Func\sprintf")
0008 INIT_METHOD_CALL 0 CV0($format) string("value")
0009 V7 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V7 1
0011 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\Func\array_map")
0012 T8 = DECLARE_LAMBDA_FUNCTION string("")
0013 SEND_VAL_EX T8 1
0014 SEND_VAR_EX CV1($values) 2
0015 V9 = DO_FCALL
0016 SEND_UNPACK V9
0017 CHECK_UNDEF_ARGS
0018 V10 = DO_FCALL
0019 END_SILENCE T6
0020 ASSIGN CV2($formatted) V10
0021 EXT_STMT
0022 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Func\is_string")
0023 SEND_VAR_EX CV2($formatted) 1
0024 V12 = DO_FCALL
0025 T13 = BOOL_NOT V12
0026 JMPZ T13 0051
0027 EXT_STMT
0028 INIT_NS_FCALL_BY_NAME 0 string("PhpBench\Expression\Func\error_get_last")
0029 V14 = DO_FCALL
0030 ASSIGN CV3($error) V14
0031 EXT_STMT
0032 T16 = ISSET_ISEMPTY_DIM_OBJ (isset) CV3($error) string("message")
0033 JMPZ T16 0037
0034 T17 = FETCH_DIM_R CV3($error) string("message")
0035 T18 = QM_ASSIGN T17
0036 JMP 0038
0037 T18 = QM_ASSIGN string("could not format string")
0038 ASSIGN CV4($message) T18
0039 EXT_STMT
0040 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\Func\str_replace")
0041 SEND_VAL_EX string("sprintf") 1
0042 SEND_VAL_EX string("format") 2
0043 SEND_VAR_EX CV4($message) 3
0044 V20 = DO_FCALL
0045 ASSIGN CV4($message) V20
0046 EXT_STMT
0047 V22 = NEW 1 string("RuntimeException")
0048 SEND_VAR_EX CV4($message) 1
0049 DO_FCALL
0050 THROW V22
0051 EXT_STMT
0052 V24 = NEW 1 string("PhpBench\Expression\Ast\StringNode")
0053 SEND_VAR_EX CV2($formatted) 1
0054 DO_FCALL
0055 VERIFY_RETURN_TYPE V24
0056 RETURN V24
0057 EXT_STMT
0058 VERIFY_RETURN_TYPE
0059 RETURN null
LIVE RANGES:
     6: 0007 - 0019 (silence)
     10: 0019 - 0020 (tmp/var)
     22: 0048 - 0050 (new)
     24: 0053 - 0055 (new)
     24: 0055 - 0056 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/JoinFunction.php:1-20
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 RETURN int(1)

PhpBench\Expression\Func\JoinFunction::__invoke:
     ; (lines=19, args=2, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/JoinFunction.php:10-18
     ; return  [] RANGE[0..0]
0000 CV0($delimiter) = RECV 1
0001 CV1($values) = RECV 2
0002 EXT_STMT
0003 V2 = NEW 1 string("PhpBench\Expression\Ast\StringNode")
0004 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\Func\implode")
0005 INIT_METHOD_CALL 0 CV0($delimiter) string("value")
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 0 CV1($values) string("value")
0009 V4 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V4 2
0011 V5 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V5 1
0013 DO_FCALL
0014 VERIFY_RETURN_TYPE V2
0015 RETURN V2
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     2: 0004 - 0014 (new)
     2: 0014 - 0015 (tmp/var)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/FirstFunction.php:1-27
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 EXT_STMT
0004 RETURN int(1)

PhpBench\Expression\Func\FirstFunction::__invoke:
     ; (lines=33, args=1, vars=3, tmps=11)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/FirstFunction.php:11-25
     ; return  [] RANGE[0..0]
0000 CV0($list) = RECV 1
0001 EXT_STMT
0002 T3 = INSTANCEOF CV0($list) string("PhpBench\Expression\Ast\ListNode")
0003 T4 = BOOL_NOT T3
0004 JMPZ T4 0010
0005 EXT_STMT
0006 V5 = NEW 0 string("PhpBench\Expression\Ast\NullNode")
0007 DO_FCALL
0008 VERIFY_RETURN_TYPE V5
0009 RETURN V5
0010 EXT_STMT
0011 INIT_METHOD_CALL 0 CV0($list) string("nodes")
0012 V7 = DO_FCALL
0013 ASSIGN CV1($values) V7
0014 EXT_STMT
0015 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Func\reset")
0016 SEND_VAR_EX CV1($values) 1
0017 V9 = DO_FCALL
0018 ASSIGN CV2($first) V9
0019 EXT_STMT
0020 T11 = BOOL_NOT CV2($first)
0021 JMPZ T11 0027
0022 EXT_STMT
0023 V12 = NEW 0 string("PhpBench\Expression\Ast\NullNode")
0024 DO_FCALL
0025 VERIFY_RETURN_TYPE V12
0026 RETURN V12
0027 EXT_STMT
0028 VERIFY_RETURN_TYPE CV2($first)
0029 RETURN CV2($first)
0030 EXT_STMT
0031 VERIFY_RETURN_TYPE
0032 RETURN null
LIVE RANGES:
     5: 0007 - 0008 (new)
     5: 0008 - 0009 (tmp/var)
     12: 0024 - 0025 (new)
     12: 0025 - 0026 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/CoalesceFunction.php:1-23
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 RETURN int(1)

PhpBench\Expression\Func\CoalesceFunction::__invoke:
     ; (lines=23, args=0, vars=2, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/CoalesceFunction.php:10-21
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV_VARIADIC 1
0001 EXT_STMT
0002 V2 = FE_RESET_R CV0($values) 0014
0003 FE_FETCH_R V2 CV1($value) 0014
0004 EXT_STMT
0005 T3 = INSTANCEOF CV1($value) string("PhpBench\Expression\Ast\NullNode")
0006 JMPZ T3 0009
0007 EXT_STMT
0008 JMP 0003
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE CV1($value)
0011 FE_FREE V2
0012 RETURN CV1($value)
0013 JMP 0003
0014 FE_FREE V2
0015 EXT_STMT
0016 V4 = NEW 0 string("PhpBench\Expression\Ast\NullNode")
0017 DO_FCALL
0018 VERIFY_RETURN_TYPE V4
0019 RETURN V4
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     2: 0003 - 0014 (loop)
     4: 0017 - 0018 (new)
     4: 0018 - 0019 (tmp/var)

$_main:
     ; (lines=8, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/DisplayAsTimeFunction.php:1-27
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 RETURN int(1)

PhpBench\Expression\Func\DisplayAsTimeFunction::__invoke:
     ; (lines=54, args=4, vars=4, tmps=17)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/DisplayAsTimeFunction.php:14-25
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 CV1($as) = RECV 2
0002 CV2($precision) = RECV_INIT 3 null
0003 CV3($throughput) = RECV_INIT 4 null
0004 EXT_STMT
0005 T4 = INSTANCEOF CV1($as) string("PhpBench\Expression\Ast\NullNode")
0006 JMPZ T4 0022
0007 EXT_STMT
0008 V5 = NEW 4 string("PhpBench\Expression\Ast\DisplayAsTimeNode")
0009 SEND_VAR_EX CV0($value) 1
0010 V6 = NEW 1 string("PhpBench\Expression\Ast\UnitNode")
0011 V7 = NEW 1 string("PhpBench\Expression\Ast\StringNode")
0012 SEND_VAL_EX string("microseconds") 1
0013 DO_FCALL
0014 SEND_VAR_NO_REF_EX V7 1
0015 DO_FCALL
0016 SEND_VAR_NO_REF_EX V6 2
0017 SEND_VAR_EX CV2($precision) 3
0018 SEND_VAR_EX CV3($throughput) 4
0019 DO_FCALL
0020 VERIFY_RETURN_TYPE V5
0021 RETURN V5
0022 EXT_STMT
0023 T11 = INSTANCEOF CV1($as) string("PhpBench\Expression\Ast\StringNode")
0024 T12 = BOOL_NOT T11
0025 JMPZ T12 0039
0026 EXT_STMT
0027 V13 = NEW 2 string("PhpBench\Expression\Exception\EvaluationError")
0028 SEND_VAR_EX CV0($value) 1
0029 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\Func\sprintf")
0030 SEND_VAL_EX string("Unit must be a string, got "%s"") 1
0031 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Func\get_class")
0032 SEND_VAR_EX CV1($as) 1
0033 V14 = DO_FCALL
0034 SEND_VAR_NO_REF_EX V14 2
0035 V15 = DO_FCALL
0036 SEND_VAR_NO_REF_EX V15 2
0037 DO_FCALL
0038 THROW V13
0039 EXT_STMT
0040 V17 = NEW 4 string("PhpBench\Expression\Ast\DisplayAsTimeNode")
0041 SEND_VAR_EX CV0($value) 1
0042 V18 = NEW 1 string("PhpBench\Expression\Ast\UnitNode")
0043 SEND_VAR_EX CV1($as) 1
0044 DO_FCALL
0045 SEND_VAR_NO_REF_EX V18 2
0046 SEND_VAR_EX CV2($precision) 3
0047 SEND_VAR_EX CV3($throughput) 4
0048 DO_FCALL
0049 VERIFY_RETURN_TYPE V17
0050 RETURN V17
0051 EXT_STMT
0052 VERIFY_RETURN_TYPE
0053 RETURN null
LIVE RANGES:
     5: 0009 - 0020 (new)
     6: 0011 - 0016 (new)
     7: 0012 - 0014 (new)
     5: 0020 - 0021 (tmp/var)
     13: 0028 - 0038 (new)
     17: 0041 - 0049 (new)
     18: 0043 - 0045 (new)
     17: 0049 - 0050 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/LabelFunction.php:1-15
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 RETURN int(1)

PhpBench\Expression\Func\LabelFunction::__invoke:
     ; (lines=10, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/LabelFunction.php:10-13
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Expression\Ast\LabelNode")
0003 SEND_VAR_EX CV0($value) 1
0004 DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0003 - 0005 (new)
     1: 0005 - 0006 (tmp/var)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/CountFunction.php:1-16
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 EXT_STMT
0004 RETURN int(1)

PhpBench\Expression\Func\CountFunction::__invoke:
     ; (lines=15, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/CountFunction.php:11-14
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("PhpBench\Expression\Ast\IntegerNode")
0003 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Func\count")
0004 INIT_METHOD_CALL 0 CV0($values) string("nonNullPhpValues")
0005 V2 = DO_FCALL
0006 SEND_VAR_NO_REF_EX V2 1
0007 V3 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V3 1
0009 DO_FCALL
0010 VERIFY_RETURN_TYPE V1
0011 RETURN V1
0012 EXT_STMT
0013 VERIFY_RETURN_TYPE
0014 RETURN null
LIVE RANGES:
     1: 0003 - 0010 (new)
     1: 0010 - 0011 (tmp/var)

$_main:
     ; (lines=6, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/SumFunction.php:1-17
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 RETURN int(1)

PhpBench\Expression\Func\SumFunction::__invoke:
     ; (lines=15, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/SumFunction.php:12-15
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Ast\PhpValueFactory") string("fromValue")
0003 INIT_FCALL 1 96 string("array_sum")
0004 INIT_METHOD_CALL 0 CV0($values) string("nonNullPhpValues")
0005 V1 = DO_FCALL
0006 SEND_VAR V1 1
0007 V2 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V2 1
0009 V3 = DO_FCALL
0010 VERIFY_RETURN_TYPE V3
0011 RETURN V3
0012 EXT_STMT
0013 VERIFY_RETURN_TYPE
0014 RETURN null
LIVE RANGES:
     3: 0010 - 0011 (tmp/var)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/FrameFunction.php:1-16
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 EXT_STMT
0004 RETURN int(1)

PhpBench\Expression\Func\FrameFunction::__invoke:
     ; (lines=19, args=2, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Func/FrameFunction.php:11-14
     ; return  [] RANGE[0..0]
0000 CV0($columns) = RECV 1
0001 CV1($rows) = RECV 2
0002 EXT_STMT
0003 V2 = NEW 1 string("PhpBench\Expression\Ast\DataFrameNode")
0004 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Data\DataFrame") string("fromRowSeries")
0005 INIT_METHOD_CALL 0 CV1($rows) string("value")
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 INIT_METHOD_CALL 0 CV0($columns) string("value")
0009 V4 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V4 2
0011 V5 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V5 1
0013 DO_FCALL
0014 VERIFY_RETURN_TYPE V2
0015 RETURN V2
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     2: 0004 - 0014 (new)
     2: 0014 - 0015 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ListEvaluator.php:1-26
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeevaluator\listevaluator")
0006 RETURN int(1)

PhpBench\Expression\NodeEvaluator\{closure}:
     ; (lines=11, args=1, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ListEvaluator.php:21-23
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 BIND_STATIC CV1($evaluator)
0002 BIND_STATIC CV2($params)
0003 EXT_STMT
0004 INIT_METHOD_CALL 2 CV1($evaluator) string("evaluate")
0005 SEND_VAR_EX CV0($node) 1
0006 SEND_VAR_EX CV2($params) 2
0007 V3 = DO_FCALL
0008 RETURN V3
0009 EXT_STMT
0010 RETURN null

PhpBench\Expression\NodeEvaluator\ListEvaluator::evaluate:
     ; (lines=27, args=3, vars=3, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ListEvaluator.php:15-24
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T3 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ListNode")
0005 T4 = BOOL_NOT T3
0006 JMPZ T4 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 V5 = NEW 1 string("PhpBench\Expression\Ast\ListNode")
0011 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\array_map")
0012 T6 = DECLARE_LAMBDA_FUNCTION string("")
0013 BIND_LEXICAL T6 CV0($evaluator)
0014 BIND_LEXICAL T6 CV2($params)
0015 SEND_VAL_EX T6 1
0016 INIT_METHOD_CALL 0 CV1($node) string("nodes")
0017 V7 = DO_FCALL
0018 SEND_VAR_NO_REF_EX V7 2
0019 V8 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V8 1
0021 DO_FCALL
0022 VERIFY_RETURN_TYPE V5
0023 RETURN V5
0024 EXT_STMT
0025 VERIFY_RETURN_TYPE
0026 RETURN null
LIVE RANGES:
     5: 0011 - 0022 (new)
     6: 0013 - 0015 (tmp/var)
     5: 0022 - 0023 (tmp/var)

$_main:
     ; (lines=13, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ValueWithUnitEvaluator.php:1-59
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 EXT_STMT
0011 DECLARE_CLASS string("phpbench\expression\nodeevaluator\valuewithunitevaluator")
0012 RETURN int(1)

PhpBench\Expression\NodeEvaluator\ValueWithUnitEvaluator::evaluate:
     ; (lines=78, args=3, vars=5, tmps=21)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ValueWithUnitEvaluator.php:21-41
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T5 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ValueWithUnitNode")
0005 T6 = BOOL_NOT T5
0006 JMPZ T6 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0011 INIT_METHOD_CALL 0 CV1($node) string("left")
0012 V7 = DO_FCALL
0013 SEND_VAR_NO_REF_EX V7 1
0014 SEND_VAL_EX string("PhpBench\Expression\Ast\NumberNode") 2
0015 SEND_VAR_EX CV2($params) 3
0016 V8 = DO_FCALL
0017 ASSIGN CV3($value) V8
0018 EXT_STMT
0019 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0020 INIT_METHOD_CALL 0 CV1($node) string("unit")
0021 V10 = DO_FCALL
0022 INIT_METHOD_CALL 0 V10 string("unit")
0023 V11 = DO_FCALL
0024 SEND_VAR_NO_REF_EX V11 1
0025 SEND_VAL_EX string("PhpBench\Expression\Ast\StringNode") 2
0026 SEND_VAR_EX CV2($params) 3
0027 V12 = DO_FCALL
0028 INIT_METHOD_CALL 0 V12 string("value")
0029 V13 = DO_FCALL
0030 ASSIGN CV4($unit) V13
0031 EXT_STMT
0032 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Util\TimeUnit") string("isTimeUnit")
0033 SEND_VAR CV4($unit) 1
0034 V15 = DO_FCALL
0035 JMPZ V15 0048
0036 EXT_STMT
0037 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Ast\PhpValueFactory") string("fromValue")
0038 INIT_METHOD_CALL 2 THIS string("timeUnit")
0039 INIT_METHOD_CALL 0 CV3($value) string("value")
0040 V16 = DO_FCALL
0041 SEND_VAR_NO_REF_EX V16 1
0042 SEND_VAR_EX CV4($unit) 2
0043 V17 = DO_FCALL
0044 SEND_VAR_NO_REF_EX V17 1
0045 V18 = DO_FCALL
0046 VERIFY_RETURN_TYPE V18
0047 RETURN V18
0048 EXT_STMT
0049 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Util\MemoryUnit") string("isMemoryUnit")
0050 SEND_VAR CV4($unit) 1
0051 V19 = DO_FCALL
0052 JMPZ V19 0065
0053 EXT_STMT
0054 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Ast\PhpValueFactory") string("fromValue")
0055 INIT_METHOD_CALL 2 THIS string("memoryUnit")
0056 INIT_METHOD_CALL 0 CV3($value) string("value")
0057 V20 = DO_FCALL
0058 SEND_VAR_NO_REF_EX V20 1
0059 SEND_VAR_EX CV4($unit) 2
0060 V21 = DO_FCALL
0061 SEND_VAR_NO_REF_EX V21 1
0062 V22 = DO_FCALL
0063 VERIFY_RETURN_TYPE V22
0064 RETURN V22
0065 EXT_STMT
0066 V23 = NEW 2 string("PhpBench\Expression\Exception\EvaluationError")
0067 SEND_VAR_EX CV1($node) 1
0068 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\sprintf")
0069 SEND_VAL_EX string("Do not know how to evaluate unit "%s"") 1
0070 SEND_VAR_EX CV4($unit) 2
0071 V24 = DO_FCALL
0072 SEND_VAR_NO_REF_EX V24 2
0073 DO_FCALL
0074 THROW V23
0075 EXT_STMT
0076 VERIFY_RETURN_TYPE
0077 RETURN null
LIVE RANGES:
     18: 0046 - 0047 (tmp/var)
     22: 0063 - 0064 (tmp/var)
     23: 0067 - 0074 (new)

PhpBench\Expression\NodeEvaluator\ValueWithUnitEvaluator::timeUnit:
     ; (lines=16, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ValueWithUnitEvaluator.php:46-49
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 CV1($unit) = RECV 2
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 4 string("PhpBench\Util\TimeUnit") string("convert")
0004 SEND_VAR CV0($value) 1
0005 SEND_VAR CV1($unit) 2
0006 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Util\TimeUnit") string("MICROSECONDS")
0007 SEND_VAL T2 3
0008 T3 = FETCH_CLASS_CONSTANT string("PhpBench\Util\TimeUnit") string("MODE_TIME")
0009 SEND_VAL T3 4
0010 V4 = DO_FCALL
0011 VERIFY_RETURN_TYPE V4
0012 RETURN V4
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE
0015 RETURN null
LIVE RANGES:
     4: 0011 - 0012 (tmp/var)

PhpBench\Expression\NodeEvaluator\ValueWithUnitEvaluator::memoryUnit:
     ; (lines=14, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ValueWithUnitEvaluator.php:54-57
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 CV1($unit) = RECV 2
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 3 string("PhpBench\Util\MemoryUnit") string("convertTo")
0004 SEND_VAR CV0($value) 1
0005 SEND_VAR CV1($unit) 2
0006 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Util\MemoryUnit") string("BYTES")
0007 SEND_VAL T2 3
0008 V3 = DO_FCALL
0009 VERIFY_RETURN_TYPE V3
0010 RETURN V3
0011 EXT_STMT
0012 VERIFY_RETURN_TYPE
0013 RETURN null
LIVE RANGES:
     3: 0009 - 0010 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ParenthesisEvaluator.php:1-24
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeevaluator\parenthesisevaluator")
0006 RETURN int(1)

PhpBench\Expression\NodeEvaluator\ParenthesisEvaluator::evaluate:
     ; (lines=21, args=3, vars=3, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ParenthesisEvaluator.php:15-22
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T3 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ParenthesisNode")
0005 T4 = BOOL_NOT T3
0006 JMPZ T4 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 INIT_METHOD_CALL 2 CV0($evaluator) string("evaluate")
0011 INIT_METHOD_CALL 0 CV1($node) string("expression")
0012 V5 = DO_FCALL
0013 SEND_VAR_NO_REF_EX V5 1
0014 SEND_VAR_EX CV2($params) 2
0015 V6 = DO_FCALL
0016 VERIFY_RETURN_TYPE V6
0017 RETURN V6
0018 EXT_STMT
0019 VERIFY_RETURN_TYPE
0020 RETURN null
LIVE RANGES:
     6: 0016 - 0017 (tmp/var)

$_main:
     ; (lines=14, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ComparisonEvaluator.php:1-88
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 EXT_STMT
0012 DECLARE_CLASS string("phpbench\expression\nodeevaluator\comparisonevaluator")
0013 RETURN int(1)

PhpBench\Expression\NodeEvaluator\ComparisonEvaluator::evaluate:
     ; (lines=104, args=3, vars=8, tmps=36)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ComparisonEvaluator.php:22-50
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T8 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ComparisonNode")
0005 T9 = BOOL_NOT T8
0006 JMPZ T9 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 INIT_METHOD_CALL 0 CV1($node) string("left")
0011 V10 = DO_FCALL
0012 ASSIGN CV3($leftNode) V10
0013 EXT_STMT
0014 INIT_METHOD_CALL 0 CV1($node) string("right")
0015 V12 = DO_FCALL
0016 ASSIGN CV4($rightNode) V12
0017 EXT_STMT
0018 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0019 INIT_METHOD_CALL 0 CV1($node) string("left")
0020 V14 = DO_FCALL
0021 SEND_VAR_NO_REF_EX V14 1
0022 SEND_VAL_EX string("PhpBench\Expression\Ast\PhpValue") 2
0023 SEND_VAR_EX CV2($params) 3
0024 V15 = DO_FCALL
0025 ASSIGN CV5($leftValue) V15
0026 EXT_STMT
0027 INIT_METHOD_CALL 2 CV0($evaluator) string("evaluate")
0028 INIT_METHOD_CALL 0 CV1($node) string("right")
0029 V17 = DO_FCALL
0030 SEND_VAR_NO_REF_EX V17 1
0031 SEND_VAR_EX CV2($params) 2
0032 V18 = DO_FCALL
0033 ASSIGN CV6($rightValue) V18
0034 EXT_STMT
0035 T20 = INSTANCEOF CV6($rightValue) string("PhpBench\Expression\Ast\TolerableNode")
0036 JMPZ T20 0079
0037 EXT_STMT
0038 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0039 INIT_METHOD_CALL 0 CV6($rightValue) string("tolerance")
0040 V21 = DO_FCALL
0041 SEND_VAR_NO_REF_EX V21 1
0042 SEND_VAL_EX string("PhpBench\Expression\Ast\NumberValue") 2
0043 SEND_VAR_EX CV2($params) 3
0044 V22 = DO_FCALL
0045 ASSIGN CV7($toleranceValue) V22
0046 EXT_STMT
0047 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0048 INIT_METHOD_CALL 0 CV6($rightValue) string("value")
0049 V24 = DO_FCALL
0050 SEND_VAR_NO_REF_EX V24 1
0051 SEND_VAL_EX string("PhpBench\Expression\Ast\NumberValue") 2
0052 SEND_VAR_EX CV2($params) 3
0053 V25 = DO_FCALL
0054 ASSIGN CV6($rightValue) V25
0055 EXT_STMT
0056 INIT_STATIC_METHOD_CALL 3 string("PhpBench\Math\FloatNumber") string("isWithin")
0057 INIT_METHOD_CALL 0 CV5($leftValue) string("value")
0058 V27 = DO_FCALL
0059 SEND_VAR_NO_REF_EX V27 1
0060 INIT_METHOD_CALL 0 CV6($rightValue) string("value")
0061 V28 = DO_FCALL
0062 INIT_METHOD_CALL 0 CV7($toleranceValue) string("value")
0063 V29 = DO_FCALL
0064 T30 = SUB V28 V29
0065 SEND_VAL_EX T30 2
0066 INIT_METHOD_CALL 0 CV6($rightValue) string("value")
0067 V31 = DO_FCALL
0068 INIT_METHOD_CALL 0 CV7($toleranceValue) string("value")
0069 V32 = DO_FCALL
0070 T33 = ADD V31 V32
0071 SEND_VAL_EX T33 3
0072 V34 = DO_FCALL
0073 JMPZ V34 0079
0074 EXT_STMT
0075 V35 = NEW 0 string("PhpBench\Expression\Ast\ToleratedTrue")
0076 DO_FCALL
0077 VERIFY_RETURN_TYPE V35
0078 RETURN V35
0079 EXT_STMT
0080 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0081 SEND_VAR_EX CV6($rightValue) 1
0082 SEND_VAL_EX string("PhpBench\Expression\Ast\PhpValue") 2
0083 SEND_VAR_EX CV2($params) 3
0084 V37 = DO_FCALL
0085 ASSIGN CV6($rightValue) V37
0086 EXT_STMT
0087 V39 = NEW 1 string("PhpBench\Expression\Ast\BooleanNode")
0088 INIT_METHOD_CALL 3 THIS string("evaluateNode")
0089 SEND_VAR_EX CV1($node) 1
0090 INIT_METHOD_CALL 0 CV5($leftValue) string("value")
0091 V40 = DO_FCALL
0092 SEND_VAR_NO_REF_EX V40 2
0093 INIT_METHOD_CALL 0 CV6($rightValue) string("value")
0094 V41 = DO_FCALL
0095 SEND_VAR_NO_REF_EX V41 3
0096 V42 = DO_FCALL
0097 SEND_VAR_NO_REF_EX V42 1
0098 DO_FCALL
0099 VERIFY_RETURN_TYPE V39
0100 RETURN V39
0101 EXT_STMT
0102 VERIFY_RETURN_TYPE
0103 RETURN null
LIVE RANGES:
     28: 0062 - 0064 (tmp/var)
     31: 0068 - 0070 (tmp/var)
     35: 0076 - 0077 (new)
     35: 0077 - 0078 (tmp/var)
     39: 0088 - 0099 (new)
     39: 0099 - 0100 (tmp/var)

PhpBench\Expression\NodeEvaluator\ComparisonEvaluator::evaluateNode:
     ; (lines=93, args=3, vars=3, tmps=23)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ComparisonEvaluator.php:56-86
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 CV1($leftValue) = RECV 2
0002 CV2($rightValue) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 0 CV0($node) string("operator")
0005 V3 = DO_FCALL
0006 T4 = IS_EQUAL V3 string("=")
0007 JMPZ T4 0012
0008 EXT_STMT
0009 T5 = IS_EQUAL CV1($leftValue) CV2($rightValue)
0010 VERIFY_RETURN_TYPE T5
0011 RETURN T5
0012 EXT_STMT
0013 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodeEvaluator\is_numeric")
0014 SEND_VAR_EX CV1($leftValue) 1
0015 V6 = DO_FCALL
0016 T7 = BOOL_NOT V6
0017 T7 = JMPNZ_EX T7 0023
0018 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodeEvaluator\is_numeric")
0019 SEND_VAR_EX CV2($rightValue) 1
0020 V8 = DO_FCALL
0021 T9 = BOOL_NOT V8
0022 T7 = BOOL T9
0023 JMPZ T7 0044
0024 EXT_STMT
0025 V10 = NEW 2 string("PhpBench\Expression\Exception\EvaluationError")
0026 SEND_VAR_EX CV0($node) 1
0027 INIT_NS_FCALL_BY_NAME 4 string("PhpBench\Expression\NodeEvaluator\sprintf")
0028 SEND_VAL_EX string("Unsupported operator "%s" when comparing "%s" and "%s"") 1
0029 INIT_METHOD_CALL 0 CV0($node) string("operator")
0030 V11 = DO_FCALL
0031 SEND_VAR_NO_REF_EX V11 2
0032 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodeEvaluator\gettype")
0033 SEND_VAR_EX CV1($leftValue) 1
0034 V12 = DO_FCALL
0035 SEND_VAR_NO_REF_EX V12 3
0036 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodeEvaluator\gettype")
0037 SEND_VAR_EX CV2($rightValue) 1
0038 V13 = DO_FCALL
0039 SEND_VAR_NO_REF_EX V13 4
0040 V14 = DO_FCALL
0041 SEND_VAR_NO_REF_EX V14 2
0042 DO_FCALL
0043 THROW V10
0044 EXT_STMT
0045 INIT_METHOD_CALL 0 CV0($node) string("operator")
0046 V16 = DO_FCALL
0047 SWITCH_STRING V16 "<": 0057, "<=": 0062, ">": 0067, ">=": 0072, default: 0077
0048 T17 = CASE V16 string("<")
0049 JMPNZ T17 0057
0050 T17 = CASE V16 string("<=")
0051 JMPNZ T17 0062
0052 T17 = CASE V16 string(">")
0053 JMPNZ T17 0067
0054 T17 = CASE V16 string(">=")
0055 JMPNZ T17 0072
0056 JMP 0077
0057 EXT_STMT
0058 T18 = IS_SMALLER CV1($leftValue) CV2($rightValue)
0059 VERIFY_RETURN_TYPE T18
0060 FREE V16
0061 RETURN T18
0062 EXT_STMT
0063 T19 = IS_SMALLER_OR_EQUAL CV1($leftValue) CV2($rightValue)
0064 VERIFY_RETURN_TYPE T19
0065 FREE V16
0066 RETURN T19
0067 EXT_STMT
0068 T20 = IS_SMALLER CV2($rightValue) CV1($leftValue)
0069 VERIFY_RETURN_TYPE T20
0070 FREE V16
0071 RETURN T20
0072 EXT_STMT
0073 T21 = IS_SMALLER_OR_EQUAL CV2($rightValue) CV1($leftValue)
0074 VERIFY_RETURN_TYPE T21
0075 FREE V16
0076 RETURN T21
0077 FREE V16
0078 EXT_STMT
0079 V22 = NEW 2 string("PhpBench\Expression\Exception\EvaluationError")
0080 SEND_VAR_EX CV0($node) 1
0081 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\sprintf")
0082 SEND_VAL_EX string("Unknown comparison operator "%s"") 1
0083 INIT_METHOD_CALL 0 CV0($node) string("operator")
0084 V23 = DO_FCALL
0085 SEND_VAR_NO_REF_EX V23 2
0086 V24 = DO_FCALL
0087 SEND_VAR_NO_REF_EX V24 2
0088 DO_FCALL
0089 THROW V22
0090 EXT_STMT
0091 VERIFY_RETURN_TYPE
0092 RETURN null
LIVE RANGES:
     5: 0010 - 0011 (tmp/var)
     10: 0026 - 0043 (new)
     16: 0047 - 0077 (tmp/var)
     18: 0059 - 0061 (tmp/var)
     19: 0064 - 0066 (tmp/var)
     20: 0069 - 0071 (tmp/var)
     21: 0074 - 0076 (tmp/var)
     22: 0080 - 0089 (new)

$_main:
     ; (lines=11, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/TolerableEvaluator.php:1-47
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 EXT_STMT
0009 DECLARE_CLASS string("phpbench\expression\nodeevaluator\tolerableevaluator")
0010 RETURN int(1)

PhpBench\Expression\NodeEvaluator\TolerableEvaluator::evaluate:
     ; (lines=73, args=3, vars=7, tmps=27)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/TolerableEvaluator.php:19-45
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T7 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\TolerableNode")
0005 T8 = BOOL_NOT T7
0006 JMPZ T8 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 INIT_METHOD_CALL 0 CV1($node) string("tolerance")
0011 V9 = DO_FCALL
0012 ASSIGN CV3($toleranceNode) V9
0013 EXT_STMT
0014 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0015 INIT_METHOD_CALL 0 CV1($node) string("value")
0016 V11 = DO_FCALL
0017 SEND_VAR_NO_REF_EX V11 1
0018 SEND_VAL_EX string("PhpBench\Expression\Ast\NumberValue") 2
0019 SEND_VAR_EX CV2($params) 3
0020 V12 = DO_FCALL
0021 ASSIGN CV4($context) V12
0022 EXT_STMT
0023 T14 = INSTANCEOF CV3($toleranceNode) string("PhpBench\Expression\Ast\PercentageNode")
0024 JMPZ T14 0046
0025 EXT_STMT
0026 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0027 INIT_METHOD_CALL 0 CV3($toleranceNode) string("valueNode")
0028 V15 = DO_FCALL
0029 SEND_VAR_NO_REF_EX V15 1
0030 SEND_VAL_EX string("PhpBench\Expression\Ast\NumberValue") 2
0031 SEND_VAR_EX CV2($params) 3
0032 V16 = DO_FCALL
0033 ASSIGN CV5($amount) V16
0034 EXT_STMT
0035 V18 = NEW 1 string("PhpBench\Expression\Ast\FloatNode")
0036 INIT_METHOD_CALL 0 CV4($context) string("value")
0037 V19 = DO_FCALL
0038 T20 = DIV V19 int(100)
0039 INIT_METHOD_CALL 0 CV5($amount) string("value")
0040 V21 = DO_FCALL
0041 T22 = MUL V21 T20
0042 SEND_VAL_EX T22 1
0043 DO_FCALL
0044 ASSIGN CV6($tolerance) V18
0045 JMP 0052
0046 EXT_STMT
0047 INIT_METHOD_CALL 2 CV0($evaluator) string("evaluate")
0048 SEND_VAR_EX CV3($toleranceNode) 1
0049 SEND_VAR_EX CV2($params) 2
0050 V25 = DO_FCALL
0051 ASSIGN CV6($tolerance) V25
0052 EXT_STMT
0053 T27 = INSTANCEOF CV4($context) string("PhpBench\Expression\Ast\DisplayAsNode")
0054 JMPZ T27 0063
0055 EXT_STMT
0056 V28 = NEW 2 string("PhpBench\Expression\Ast\DisplayAsNode")
0057 SEND_VAR_EX CV6($tolerance) 1
0058 INIT_METHOD_CALL 0 CV4($context) string("as")
0059 V29 = DO_FCALL
0060 SEND_VAR_NO_REF_EX V29 2
0061 DO_FCALL
0062 ASSIGN CV6($tolerance) V28
0063 EXT_STMT
0064 V32 = NEW 2 string("PhpBench\Expression\Ast\TolerableNode")
0065 SEND_VAR_EX CV4($context) 1
0066 SEND_VAR_EX CV6($tolerance) 2
0067 DO_FCALL
0068 VERIFY_RETURN_TYPE V32
0069 RETURN V32
0070 EXT_STMT
0071 VERIFY_RETURN_TYPE
0072 RETURN null
LIVE RANGES:
     18: 0036 - 0044 (new)
     20: 0039 - 0041 (tmp/var)
     28: 0057 - 0062 (new)
     32: 0065 - 0068 (new)
     32: 0068 - 0069 (tmp/var)

$_main:
     ; (lines=11, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/DisplayAsEvaluator.php:1-37
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 EXT_STMT
0009 DECLARE_CLASS string("phpbench\expression\nodeevaluator\displayasevaluator")
0010 RETURN int(1)

PhpBench\Expression\NodeEvaluator\DisplayAsEvaluator::evaluate:
     ; (lines=58, args=3, vars=6, tmps=18)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/DisplayAsEvaluator.php:19-35
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T6 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\DisplayAsNode")
0005 T7 = BOOL_NOT T6
0006 JMPZ T7 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0011 INIT_METHOD_CALL 0 CV1($node) string("node")
0012 V8 = DO_FCALL
0013 SEND_VAR_NO_REF_EX V8 1
0014 SEND_VAL_EX string("PhpBench\Expression\Ast\NumberNode") 2
0015 SEND_VAR_EX CV2($params) 3
0016 V9 = DO_FCALL
0017 ASSIGN CV3($value) V9
0018 EXT_STMT
0019 V11 = NEW 1 string("PhpBench\Expression\Ast\UnitNode")
0020 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0021 INIT_METHOD_CALL 0 CV1($node) string("as")
0022 V12 = DO_FCALL
0023 INIT_METHOD_CALL 0 V12 string("unit")
0024 V13 = DO_FCALL
0025 SEND_VAR_NO_REF_EX V13 1
0026 SEND_VAL_EX string("PhpBench\Expression\Ast\StringNode") 2
0027 SEND_VAR_EX CV2($params) 3
0028 V14 = DO_FCALL
0029 SEND_VAR_NO_REF_EX V14 1
0030 DO_FCALL
0031 ASSIGN CV4($unit) V11
0032 EXT_STMT
0033 INIT_METHOD_CALL 0 CV1($node) string("precision")
0034 V17 = DO_FCALL
0035 ASSIGN CV5($precision) V17
0036 EXT_STMT
0037 JMPZ CV5($precision) 0047
0038 EXT_STMT
0039 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0040 INIT_METHOD_CALL 0 CV1($node) string("precision")
0041 V19 = DO_FCALL
0042 SEND_VAR_NO_REF_EX V19 1
0043 SEND_VAL_EX string("PhpBench\Expression\Ast\PhpValue") 2
0044 SEND_VAR_EX CV2($params) 3
0045 V20 = DO_FCALL
0046 ASSIGN CV5($precision) V20
0047 EXT_STMT
0048 V22 = NEW 3 string("PhpBench\Expression\Ast\DisplayAsNode")
0049 SEND_VAR_EX CV3($value) 1
0050 SEND_VAR_EX CV4($unit) 2
0051 SEND_VAR_EX CV5($precision) 3
0052 DO_FCALL
0053 VERIFY_RETURN_TYPE V22
0054 RETURN V22
0055 EXT_STMT
0056 VERIFY_RETURN_TYPE
0057 RETURN null
LIVE RANGES:
     11: 0020 - 0031 (new)
     22: 0049 - 0053 (new)
     22: 0053 - 0054 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/VariableEvaluator.php:1-47
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\nodeevaluator\variableevaluator")
0008 RETURN int(1)

PhpBench\Expression\NodeEvaluator\VariableEvaluator::evaluate:
     ; (lines=25, args=3, vars=3, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/VariableEvaluator.php:17-24
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T3 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\VariableNode")
0005 T4 = BOOL_NOT T3
0006 JMPZ T4 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Ast\PhpValueFactory") string("fromValue")
0011 INIT_METHOD_CALL 3 THIS string("resolveFromParameters")
0012 INIT_METHOD_CALL 0 CV1($node) string("name")
0013 V5 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V5 1
0015 SEND_VAR_EX CV2($params) 2
0016 SEND_VAR_EX CV1($node) 3
0017 V6 = DO_FCALL
0018 SEND_VAR_NO_REF_EX V6 1
0019 V7 = DO_FCALL
0020 VERIFY_RETURN_TYPE V7
0021 RETURN V7
0022 EXT_STMT
0023 VERIFY_RETURN_TYPE
0024 RETURN null
LIVE RANGES:
     7: 0020 - 0021 (tmp/var)

PhpBench\Expression\NodeEvaluator\VariableEvaluator::resolveFromParameters:
     ; (lines=30, args=3, vars=3, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/VariableEvaluator.php:31-45
     ; return  [] RANGE[0..0]
0000 CV0($key) = RECV 1
0001 CV1($params) = RECV 2
0002 CV2($node) = RECV 3
0003 EXT_STMT
0004 T3 = ISSET_ISEMPTY_DIM_OBJ (isset) CV1($params) CV0($key)
0005 T4 = BOOL_NOT T3
0006 JMPZ T4 0025
0007 EXT_STMT
0008 V5 = NEW 2 string("PhpBench\Expression\Exception\EvaluationError")
0009 SEND_VAR_EX CV2($node) 1
0010 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\NodeEvaluator\sprintf")
0011 SEND_VAL_EX string("Variable "%s" not found, known variables: "%s"") 1
0012 SEND_VAR_EX CV0($key) 2
0013 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\implode")
0014 SEND_VAL_EX string("", "") 1
0015 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodeEvaluator\array_keys")
0016 SEND_VAR_EX CV1($params) 1
0017 V6 = DO_FCALL
0018 SEND_VAR_NO_REF_EX V6 2
0019 V7 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V7 3
0021 V8 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V8 2
0023 DO_FCALL
0024 THROW V5
0025 EXT_STMT
0026 T10 = FETCH_DIM_R CV1($params) CV0($key)
0027 RETURN T10
0028 EXT_STMT
0029 RETURN null
LIVE RANGES:
     5: 0009 - 0024 (new)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ConcatEvaluator.php:1-34
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\nodeevaluator\concatevaluator")
0008 RETURN int(1)

PhpBench\Expression\NodeEvaluator\{closure}:
     ; (lines=23, args=2, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ConcatEvaluator.php:23-28
     ; return  [] RANGE[0..0]
0000 CV0($left) = RECV 1
0001 CV1($right) = RECV 2
0002 EXT_STMT
0003 V2 = NEW 3 string("PhpBench\Expression\Ast\ConcatenatedNode")
0004 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\implode")
0005 SEND_VAL_EX string("") 1
0006 INIT_METHOD_CALL 0 CV0($left) string("value")
0007 V3 = DO_FCALL
0008 T4 = CAST (string) V3
0009 T5 = INIT_ARRAY 2 (packed) T4 NEXT
0010 INIT_METHOD_CALL 0 CV1($right) string("value")
0011 V6 = DO_FCALL
0012 T7 = CAST (string) V6
0013 T5 = ADD_ARRAY_ELEMENT T7 NEXT
0014 SEND_VAL_EX T5 2
0015 V8 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V8 1
0017 SEND_VAR_EX CV0($left) 2
0018 SEND_VAR_EX CV1($right) 3
0019 DO_FCALL
0020 RETURN V2
0021 EXT_STMT
0022 RETURN null
LIVE RANGES:
     2: 0004 - 0020 (new)
     5: 0010 - 0014 (tmp/var)

PhpBench\Expression\NodeEvaluator\ConcatEvaluator::evaluate:
     ; (lines=34, args=3, vars=3, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/ConcatEvaluator.php:17-32
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T3 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ConcatNode")
0005 T4 = BOOL_NOT T3
0006 JMPZ T4 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 T5 = DECLARE_LAMBDA_FUNCTION string("")
0011 INIT_DYNAMIC_CALL 2 T5
0012 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0013 INIT_METHOD_CALL 0 CV1($node) string("left")
0014 V6 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V6 1
0016 SEND_VAL_EX string("PhpBench\Expression\Ast\PhpValue") 2
0017 SEND_VAR_EX CV2($params) 3
0018 V7 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V7 1
0020 INIT_METHOD_CALL 3 CV0($evaluator) string("evaluateType")
0021 INIT_METHOD_CALL 0 CV1($node) string("right")
0022 V8 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V8 1
0024 SEND_VAL_EX string("PhpBench\Expression\Ast\PhpValue") 2
0025 SEND_VAR_EX CV2($params) 3
0026 V9 = DO_FCALL
0027 SEND_VAR_NO_REF_EX V9 2
0028 V10 = DO_FCALL
0029 VERIFY_RETURN_TYPE V10
0030 RETURN V10
0031 EXT_STMT
0032 VERIFY_RETURN_TYPE
0033 RETURN null
LIVE RANGES:
     10: 0029 - 0030 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/PhpValueEvaluator.php:1-24
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeevaluator\phpvalueevaluator")
0006 RETURN int(1)

PhpBench\Expression\NodeEvaluator\PhpValueEvaluator::evaluate:
     ; (lines=14, args=3, vars=3, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/PhpValueEvaluator.php:15-22
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T3 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\PhpValue")
0005 JMPZ T3 0009
0006 EXT_STMT
0007 VERIFY_RETURN_TYPE CV1($node)
0008 RETURN CV1($node)
0009 EXT_STMT
0010 RETURN null
0011 EXT_STMT
0012 VERIFY_RETURN_TYPE
0013 RETURN null

$_main:
     ; (lines=16, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/AccessEvaluator.php:1-114
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 NOP
0012 NOP
0013 EXT_STMT
0014 DECLARE_CLASS string("phpbench\expression\nodeevaluator\accessevaluator")
0015 RETURN int(1)

PhpBench\Expression\NodeEvaluator\AccessEvaluator::__construct:
     ; (lines=7, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/AccessEvaluator.php:25-28
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V1 = NEW 0 string("PhpBench\Expression\NodeEvaluator\DataFrameEvaluator")
0002 DO_FCALL
0003 ASSIGN_OBJ THIS string("dataFrameEvaluator")
0004 OP_DATA V1
0005 EXT_STMT
0006 RETURN null
LIVE RANGES:
     1: 0002 - 0003 (new)

PhpBench\Expression\NodeEvaluator\AccessEvaluator::evaluate:
     ; (lines=99, args=3, vars=8, tmps=31)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/AccessEvaluator.php:33-69
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T8 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\AccessNode")
0005 T9 = BOOL_NOT T8
0006 JMPZ T9 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 ASSIGN CV3($nullSafe) bool(false)
0011 EXT_STMT
0012 INIT_METHOD_CALL 0 CV1($node) string("expression")
0013 V11 = DO_FCALL
0014 ASSIGN CV4($container) V11
0015 EXT_STMT
0016 T13 = INSTANCEOF CV4($container) string("PhpBench\Expression\Ast\NullSafeNode")
0017 JMPZ T13 0024
0018 EXT_STMT
0019 ASSIGN CV3($nullSafe) bool(true)
0020 EXT_STMT
0021 INIT_METHOD_CALL 0 CV4($container) string("node")
0022 V15 = DO_FCALL
0023 ASSIGN CV4($container) V15
0024 EXT_STMT
0025 INIT_METHOD_CALL 2 CV0($evaluator) string("evaluate")
0026 SEND_VAR_EX CV4($container) 1
0027 SEND_VAR_EX CV2($params) 2
0028 V17 = DO_FCALL
0029 ASSIGN CV5($value) V17
0030 EXT_STMT
0031 T19 = INSTANCEOF CV5($value) string("PhpBench\Expression\Ast\DataFrameNode")
0032 JMPZ T19 0046
0033 EXT_STMT
0034 T20 = FETCH_OBJ_R THIS string("dataFrameEvaluator")
0035 INIT_METHOD_CALL 5 T20 string("evaluate")
0036 SEND_VAR_EX CV0($evaluator) 1
0037 SEND_VAR_EX CV5($value) 2
0038 INIT_METHOD_CALL 0 CV1($node) string("access")
0039 V21 = DO_FCALL
0040 SEND_VAR_NO_REF_EX V21 3
0041 SEND_VAR_EX CV2($params) 4
0042 SEND_VAR_EX CV3($nullSafe) 5
0043 V22 = DO_FCALL
0044 VERIFY_RETURN_TYPE V22
0045 RETURN V22
0046 EXT_STMT
0047 INIT_METHOD_CALL 2 THIS string("resolveArray")
0048 SEND_VAR_EX CV0($evaluator) 1
0049 SEND_VAR_EX CV5($value) 2
0050 V23 = DO_FCALL
0051 ASSIGN CV6($arrayValue) V23
0052 EXT_STMT
0053 INIT_METHOD_CALL 3 THIS string("resolveAccess")
0054 SEND_VAR_EX CV0($evaluator) 1
0055 SEND_VAR_EX CV1($node) 2
0056 SEND_VAR_EX CV2($params) 3
0057 V25 = DO_FCALL
0058 ASSIGN CV7($accessValue) V25
0059 EXT_STMT
0060 T27 = ARRAY_KEY_EXISTS CV7($accessValue) CV6($arrayValue)
0061 T28 = BOOL_NOT T27
0062 JMPZ T28 0088
0063 EXT_STMT
0064 T29 = TYPE_CHECK (true) CV3($nullSafe)
0065 JMPZ T29 0071
0066 EXT_STMT
0067 V30 = NEW 0 string("PhpBench\Expression\Ast\NullNode")
0068 DO_FCALL
0069 VERIFY_RETURN_TYPE V30
0070 RETURN V30
0071 EXT_STMT
0072 V32 = NEW 1 string("PhpBench\Expression\Exception\ExpressionError")
0073 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\NodeEvaluator\sprintf")
0074 SEND_VAL_EX string("Array does not have key "%s", it has keys "%s"") 1
0075 SEND_VAR_EX CV7($accessValue) 2
0076 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\implode")
0077 SEND_VAL_EX string("", "") 1
0078 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodeEvaluator\array_keys")
0079 SEND_VAR_EX CV6($arrayValue) 1
0080 V33 = DO_FCALL
0081 SEND_VAR_NO_REF_EX V33 2
0082 V34 = DO_FCALL
0083 SEND_VAR_NO_REF_EX V34 3
0084 V35 = DO_FCALL
0085 SEND_VAR_NO_REF_EX V35 1
0086 DO_FCALL
0087 THROW V32
0088 EXT_STMT
0089 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Ast\PhpValueFactory") string("fromValue")
0090 CHECK_FUNC_ARG 1
0091 V37 = FETCH_DIM_FUNC_ARG CV6($arrayValue) CV7($accessValue)
0092 SEND_FUNC_ARG V37 1
0093 V38 = DO_FCALL
0094 VERIFY_RETURN_TYPE V38
0095 RETURN V38
0096 EXT_STMT
0097 VERIFY_RETURN_TYPE
0098 RETURN null
LIVE RANGES:
     22: 0044 - 0045 (tmp/var)
     30: 0068 - 0069 (new)
     30: 0069 - 0070 (tmp/var)
     32: 0073 - 0087 (new)
     38: 0094 - 0095 (tmp/var)

PhpBench\Expression\NodeEvaluator\AccessEvaluator::resolveArray:
     ; (lines=26, args=2, vars=2, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/AccessEvaluator.php:74-84
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($value) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($value) string("PhpBench\Expression\Ast\ListNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0018
0006 EXT_STMT
0007 V4 = NEW 1 string("PhpBench\Expression\Exception\ExpressionError")
0008 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\sprintf")
0009 SEND_VAL_EX string("Array access expression on non-array, got "%s"") 1
0010 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodeEvaluator\get_class")
0011 SEND_VAR_EX CV1($value) 1
0012 V5 = DO_FCALL
0013 SEND_VAR_NO_REF_EX V5 2
0014 V6 = DO_FCALL
0015 SEND_VAR_NO_REF_EX V6 1
0016 DO_FCALL
0017 THROW V4
0018 EXT_STMT
0019 INIT_METHOD_CALL 0 CV1($value) string("value")
0020 V8 = DO_FCALL
0021 VERIFY_RETURN_TYPE V8
0022 RETURN V8
0023 EXT_STMT
0024 VERIFY_RETURN_TYPE
0025 RETURN null
LIVE RANGES:
     4: 0008 - 0017 (new)
     8: 0021 - 0022 (tmp/var)

PhpBench\Expression\NodeEvaluator\AccessEvaluator::resolveAccess:
     ; (lines=59, args=3, vars=5, tmps=19)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/AccessEvaluator.php:91-112
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 2 CV0($evaluator) string("evaluate")
0005 INIT_METHOD_CALL 0 CV1($node) string("access")
0006 V5 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V5 1
0008 SEND_VAR_EX CV2($params) 2
0009 V6 = DO_FCALL
0010 ASSIGN CV3($accessValue) V6
0011 EXT_STMT
0012 T8 = INSTANCEOF CV3($accessValue) string("PhpBench\Expression\Ast\ScalarValue")
0013 T9 = BOOL_NOT T8
0014 JMPZ T9 0027
0015 EXT_STMT
0016 V10 = NEW 1 string("PhpBench\Expression\Exception\ExpressionError")
0017 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\sprintf")
0018 SEND_VAL_EX string("Array access expression must evaluate to a scalar, got "%s"") 1
0019 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodeEvaluator\get_class")
0020 SEND_VAR_EX CV3($accessValue) 1
0021 V11 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V11 2
0023 V12 = DO_FCALL
0024 SEND_VAR_NO_REF_EX V12 1
0025 DO_FCALL
0026 THROW V10
0027 EXT_STMT
0028 INIT_METHOD_CALL 0 CV3($accessValue) string("value")
0029 V14 = DO_FCALL
0030 ASSIGN CV4($value) V14
0031 EXT_STMT
0032 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodeEvaluator\is_string")
0033 SEND_VAR_EX CV4($value) 1
0034 V16 = DO_FCALL
0035 T17 = BOOL_NOT V16
0036 T17 = JMPZ_EX T17 0042
0037 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodeEvaluator\is_integer")
0038 SEND_VAR_EX CV4($value) 1
0039 V18 = DO_FCALL
0040 T19 = BOOL_NOT V18
0041 T17 = BOOL T19
0042 JMPZ T17 0055
0043 EXT_STMT
0044 V20 = NEW 1 string("PhpBench\Expression\Exception\ExpressionError")
0045 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodeEvaluator\sprintf")
0046 SEND_VAL_EX string("Array access expression must evaluate to either a string or an int, got "%s"") 1
0047 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodeEvaluator\gettype")
0048 SEND_VAR_EX CV4($value) 1
0049 V21 = DO_FCALL
0050 SEND_VAR_NO_REF_EX V21 2
0051 V22 = DO_FCALL
0052 SEND_VAR_NO_REF_EX V22 1
0053 DO_FCALL
0054 THROW V20
0055 EXT_STMT
0056 RETURN CV4($value)
0057 EXT_STMT
0058 RETURN null
LIVE RANGES:
     10: 0017 - 0026 (new)
     20: 0045 - 0054 (new)

$_main:
     ; (lines=12, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/DataFrameEvaluator.php:1-53
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 EXT_STMT
0011 RETURN int(1)

PhpBench\Expression\NodeEvaluator\{closure}:
     ; (lines=23, args=1, vars=4, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/DataFrameEvaluator.php:42-50
     ; return  [] RANGE[0..0]
0000 CV0($row) = RECV 1
0001 BIND_STATIC CV1($evaluator)
0002 BIND_STATIC CV2($accessNode)
0003 EXT_STMT
0004 INIT_METHOD_CALL 2 CV1($evaluator) string("evaluate")
0005 SEND_VAR_EX CV2($accessNode) 1
0006 INIT_METHOD_CALL 0 CV0($row) string("toRecord")
0007 V4 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V4 2
0009 V5 = DO_FCALL
0010 ASSIGN CV3($result) V5
0011 EXT_STMT
0012 T7 = INSTANCEOF CV3($result) string("PhpBench\Expression\Ast\BooleanNode")
0013 T8 = BOOL_NOT T7
0014 JMPZ T8 0017
0015 EXT_STMT
0016 RETURN bool(false)
0017 EXT_STMT
0018 INIT_METHOD_CALL 0 CV3($result) string("value")
0019 V9 = DO_FCALL
0020 RETURN V9
0021 EXT_STMT
0022 RETURN null

PhpBench\Expression\NodeEvaluator\DataFrameEvaluator::evaluate:
     ; (lines=47, args=5, vars=6, tmps=12)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/DataFrameEvaluator.php:23-38
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($frameNode) = RECV 2
0002 CV2($accessNode) = RECV 3
0003 CV3($params) = RECV 4
0004 CV4($nullSafe) = RECV 5
0005 EXT_STMT
0006 T6 = INSTANCEOF CV2($accessNode) string("PhpBench\Expression\Ast\ScalarValue")
0007 JMPZ T6 0033
0008 NOP
0009 EXT_STMT
0010 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Ast\PhpValueFactory") string("fromValue")
0011 INIT_METHOD_CALL 0 CV1($frameNode) string("dataFrame")
0012 V7 = DO_FCALL
0013 INIT_METHOD_CALL 1 V7 string("column")
0014 INIT_METHOD_CALL 0 CV2($accessNode) string("value")
0015 V8 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V8 1
0017 V9 = DO_FCALL
0018 INIT_METHOD_CALL 0 V9 string("toValues")
0019 V10 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V10 1
0021 V11 = DO_FCALL
0022 RETURN V11
0023 JMP 0033
0024 CV5($notExist) = CATCH string("PhpBench\Data\Exception\ColumnDoesNotExist")
0025 EXT_STMT
0026 JMPZ CV4($nullSafe) 0031
0027 EXT_STMT
0028 V12 = NEW 0 string("PhpBench\Expression\Ast\NullNode")
0029 DO_FCALL
0030 RETURN V12
0031 EXT_STMT
0032 THROW CV5($notExist)
0033 EXT_STMT
0034 V14 = NEW 1 string("PhpBench\Expression\Ast\DataFrameNode")
0035 INIT_METHOD_CALL 3 THIS string("filterDataFrame")
0036 SEND_VAR_EX CV0($evaluator) 1
0037 INIT_METHOD_CALL 0 CV1($frameNode) string("dataFrame")
0038 V15 = DO_FCALL
0039 SEND_VAR_NO_REF_EX V15 2
0040 SEND_VAR_EX CV2($accessNode) 3
0041 V16 = DO_FCALL
0042 SEND_VAR_NO_REF_EX V16 1
0043 DO_FCALL
0044 RETURN V14
0045 EXT_STMT
0046 RETURN null
LIVE RANGES:
     12: 0029 - 0030 (new)
     14: 0035 - 0044 (new)
EXCEPTION TABLE:
     0009, 0024, -, -

PhpBench\Expression\NodeEvaluator\DataFrameEvaluator::filterDataFrame:
     ; (lines=15, args=3, vars=3, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/DataFrameEvaluator.php:40-51
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($dataFrame) = RECV 2
0002 CV2($accessNode) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 1 CV1($dataFrame) string("filter")
0005 T3 = DECLARE_LAMBDA_FUNCTION string("")
0006 BIND_LEXICAL T3 CV0($evaluator)
0007 BIND_LEXICAL T3 CV2($accessNode)
0008 SEND_VAL_EX T3 1
0009 V4 = DO_FCALL
0010 VERIFY_RETURN_TYPE V4
0011 RETURN V4
0012 EXT_STMT
0013 VERIFY_RETURN_TYPE
0014 RETURN null
LIVE RANGES:
     3: 0006 - 0008 (tmp/var)
     4: 0010 - 0011 (tmp/var)

$_main:
     ; (lines=8, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/NullSafeEvaluator.php:1-28
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 EXT_STMT
0006 DECLARE_CLASS string("phpbench\expression\nodeevaluator\nullsafeevaluator")
0007 RETURN int(1)

PhpBench\Expression\NodeEvaluator\NullSafeEvaluator::evaluate:
     ; (lines=18, args=3, vars=3, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodeEvaluator/NullSafeEvaluator.php:16-26
     ; return  [] RANGE[0..0]
0000 CV0($evaluator) = RECV 1
0001 CV1($node) = RECV 2
0002 CV2($params) = RECV 3
0003 EXT_STMT
0004 T3 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\NullSafeNode")
0005 T4 = BOOL_NOT T3
0006 JMPZ T4 0009
0007 EXT_STMT
0008 RETURN null
0009 EXT_STMT
0010 V5 = NEW 2 string("PhpBench\Expression\Exception\EvaluationError")
0011 SEND_VAR_EX CV1($node) 1
0012 SEND_VAL_EX string("Null safe operator can only be used before an access expression") 2
0013 DO_FCALL
0014 THROW V5
0015 EXT_STMT
0016 VERIFY_RETURN_TYPE
0017 RETURN null
LIVE RANGES:
     5: 0011 - 0014 (new)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Printer/NormalizingPrinter.php:1-26
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\printer\normalizingprinter")
0006 RETURN int(1)

PhpBench\Expression\Printer\NormalizingPrinter::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Printer/NormalizingPrinter.php:16-19
     ; return  [] RANGE[0..0]
0000 CV0($printers) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("printers")
0003 OP_DATA CV0($printers)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\Printer\NormalizingPrinter::print:
     ; (lines=13, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Printer/NormalizingPrinter.php:21-24
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_R THIS string("printers")
0003 INIT_METHOD_CALL 2 T1 string("print")
0004 V2 = FETCH_THIS
0005 SEND_VAR_EX V2 1
0006 SEND_VAR_EX CV0($node) 2
0007 V3 = DO_FCALL
0008 VERIFY_RETURN_TYPE V3
0009 RETURN V3
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     3: 0008 - 0009 (tmp/var)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Printer.php:1-13
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 RETURN int(1)

PhpBench\Expression\Printer::print:
     ; (lines=4, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Printer.php:11-11
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 EXT_STMT
0002 VERIFY_RETURN_TYPE
0003 RETURN null

$_main:
     ; (lines=6, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinters.php:1-43
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 EXT_STMT
0004 DECLARE_CLASS string("phpbench\expression\nodeprinters")
0005 RETURN int(1)

PhpBench\Expression\NodePrinters::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinters.php:18-21
     ; return  [] RANGE[0..0]
0000 CV0($printers) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("printers")
0003 OP_DATA CV0($printers)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\NodePrinters::print:
     ; (lines=38, args=2, vars=4, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinters.php:25-41
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T4 = FETCH_OBJ_R THIS string("printers")
0004 V5 = FE_RESET_R T4 0022
0005 FE_FETCH_R V5 CV2($nodePrinter) 0022
0006 EXT_STMT
0007 INIT_METHOD_CALL 2 CV2($nodePrinter) string("print")
0008 SEND_VAR_EX CV0($printer) 1
0009 SEND_VAR_EX CV1($node) 2
0010 V6 = DO_FCALL
0011 ASSIGN CV3($output) V6
0012 EXT_STMT
0013 T8 = TYPE_CHECK (null) CV3($output)
0014 JMPZ T8 0017
0015 EXT_STMT
0016 JMP 0005
0017 EXT_STMT
0018 VERIFY_RETURN_TYPE CV3($output)
0019 FE_FREE V5
0020 RETURN CV3($output)
0021 JMP 0005
0022 FE_FREE V5
0023 EXT_STMT
0024 V9 = NEW 1 string("PhpBench\Expression\Exception\PrinterError")
0025 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\sprintf")
0026 SEND_VAL_EX string("Could not find printer for node of class "%s"") 1
0027 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\get_class")
0028 SEND_VAR_EX CV1($node) 1
0029 V10 = DO_FCALL
0030 SEND_VAR_NO_REF_EX V10 2
0031 V11 = DO_FCALL
0032 SEND_VAR_NO_REF_EX V11 1
0033 DO_FCALL
0034 THROW V9
0035 EXT_STMT
0036 VERIFY_RETURN_TYPE
0037 RETURN null
LIVE RANGES:
     5: 0005 - 0022 (loop)
     9: 0025 - 0034 (new)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ConcatenatedNodePrinter.php:1-27
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\concatenatednodeprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\ConcatenatedNodePrinter::print:
     ; (lines=30, args=2, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ConcatenatedNodePrinter.php:15-25
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ConcatenatedNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\implode")
0010 SEND_VAL_EX string("") 1
0011 INIT_METHOD_CALL 1 CV0($printer) string("print")
0012 INIT_METHOD_CALL 0 CV1($node) string("left")
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 1
0015 V5 = DO_FCALL
0016 T6 = INIT_ARRAY 2 (packed) V5 NEXT
0017 INIT_METHOD_CALL 1 CV0($printer) string("print")
0018 INIT_METHOD_CALL 0 CV1($node) string("right")
0019 V7 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V7 1
0021 V8 = DO_FCALL
0022 T6 = ADD_ARRAY_ELEMENT V8 NEXT
0023 SEND_VAL_EX T6 2
0024 V9 = DO_FCALL
0025 VERIFY_RETURN_TYPE V9
0026 RETURN V9
0027 EXT_STMT
0028 VERIFY_RETURN_TYPE
0029 RETURN null
LIVE RANGES:
     6: 0017 - 0023 (tmp/var)
     9: 0025 - 0026 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ArgumentListPrinter.php:1-27
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\argumentlistprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\ArgumentListPrinter::print:
     ; (lines=33, args=2, vars=4, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ArgumentListPrinter.php:12-25
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T4 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ArgumentListNode")
0004 T5 = BOOL_NOT T4
0005 JMPZ T5 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 ASSIGN CV2($out) array(...)
0010 EXT_STMT
0011 INIT_METHOD_CALL 0 CV1($node) string("nodes")
0012 V7 = DO_FCALL
0013 V8 = FE_RESET_R V7 0022
0014 FE_FETCH_R V8 CV3($expression) 0022
0015 EXT_STMT
0016 INIT_METHOD_CALL 1 CV0($printer) string("print")
0017 SEND_VAR_EX CV3($expression) 1
0018 V10 = DO_FCALL
0019 ASSIGN_DIM CV2($out) NEXT
0020 OP_DATA V10
0021 JMP 0014
0022 FE_FREE V8
0023 EXT_STMT
0024 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\implode")
0025 SEND_VAL_EX string(", ") 1
0026 SEND_VAR_EX CV2($out) 2
0027 V11 = DO_FCALL
0028 VERIFY_RETURN_TYPE V11
0029 RETURN V11
0030 EXT_STMT
0031 VERIFY_RETURN_TYPE
0032 RETURN null
LIVE RANGES:
     8: 0014 - 0022 (loop)
     11: 0028 - 0029 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/RelativeDeviationPrinter.php:1-27
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\nodeprinter\relativedeviationprinter")
0008 RETURN int(1)

PhpBench\Expression\NodePrinter\RelativeDeviationPrinter::print:
     ; (lines=30, args=2, vars=2, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/RelativeDeviationPrinter.php:14-25
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\RelativeDeviationNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\NodePrinter\sprintf")
0010 SEND_VAL_EX string("%s%.2f%%") 1
0011 INIT_METHOD_CALL 1 CV0($printer) string("print")
0012 V4 = NEW 1 string("PhpBench\Expression\Ast\UnitNode")
0013 V5 = NEW 1 string("PhpBench\Expression\Ast\StringNode")
0014 SEND_VAL_EX string("±") 1
0015 DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 1
0017 DO_FCALL
0018 SEND_VAR_NO_REF_EX V4 1
0019 V8 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V8 2
0021 INIT_METHOD_CALL 0 CV1($node) string("value")
0022 V9 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V9 3
0024 V10 = DO_FCALL
0025 VERIFY_RETURN_TYPE V10
0026 RETURN V10
0027 EXT_STMT
0028 VERIFY_RETURN_TYPE
0029 RETURN null
LIVE RANGES:
     4: 0013 - 0018 (new)
     5: 0014 - 0016 (new)
     10: 0025 - 0026 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/UnitPrinter.php:1-21
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\unitprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\UnitPrinter::print:
     ; (lines=19, args=2, vars=2, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/UnitPrinter.php:12-19
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\UnitNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_METHOD_CALL 1 CV0($printer) string("print")
0010 INIT_METHOD_CALL 0 CV1($node) string("unit")
0011 V4 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V4 1
0013 V5 = DO_FCALL
0014 VERIFY_RETURN_TYPE V5
0015 RETURN V5
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     5: 0014 - 0015 (tmp/var)

$_main:
     ; (lines=8, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/NumberPrinter.php:1-31
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 EXT_STMT
0006 DECLARE_CLASS string("phpbench\expression\nodeprinter\numberprinter")
0007 RETURN int(1)

PhpBench\Expression\NodePrinter\NumberPrinter::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/NumberPrinter.php:17-20
     ; return  [] RANGE[0..0]
0000 CV0($precision) = RECV_INIT 1 int(12)
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("precision")
0003 OP_DATA CV0($precision)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\NodePrinter\NumberPrinter::print:
     ; (lines=23, args=2, vars=2, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/NumberPrinter.php:22-29
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\NumberNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\round")
0010 INIT_METHOD_CALL 0 CV1($node) string("value")
0011 V4 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V4 1
0013 CHECK_FUNC_ARG 2
0014 V5 = FETCH_OBJ_FUNC_ARG (ref) THIS string("precision")
0015 SEND_FUNC_ARG V5 2
0016 V6 = DO_FCALL
0017 T7 = CAST (string) V6
0018 VERIFY_RETURN_TYPE T7
0019 RETURN T7
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     7: 0018 - 0019 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/BinaryOperatorPrinter.php:1-26
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\binaryoperatorprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\BinaryOperatorPrinter::print:
     ; (lines=32, args=2, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/BinaryOperatorPrinter.php:12-24
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\BinaryOperatorNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 4 string("PhpBench\Expression\NodePrinter\sprintf")
0010 SEND_VAL_EX string("%s %s %s") 1
0011 INIT_METHOD_CALL 1 CV0($printer) string("print")
0012 INIT_METHOD_CALL 0 CV1($node) string("left")
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 1
0015 V5 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 2
0017 INIT_METHOD_CALL 0 CV1($node) string("operator")
0018 V6 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V6 3
0020 INIT_METHOD_CALL 1 CV0($printer) string("print")
0021 INIT_METHOD_CALL 0 CV1($node) string("right")
0022 V7 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V7 1
0024 V8 = DO_FCALL
0025 SEND_VAR_NO_REF_EX V8 4
0026 V9 = DO_FCALL
0027 VERIFY_RETURN_TYPE V9
0028 RETURN V9
0029 EXT_STMT
0030 VERIFY_RETURN_TYPE
0031 RETURN null
LIVE RANGES:
     9: 0027 - 0028 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ComparisonPrinter.php:1-26
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\comparisonprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\ComparisonPrinter::print:
     ; (lines=32, args=2, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ComparisonPrinter.php:12-24
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ComparisonNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 4 string("PhpBench\Expression\NodePrinter\sprintf")
0010 SEND_VAL_EX string("%s %s %s") 1
0011 INIT_METHOD_CALL 1 CV0($printer) string("print")
0012 INIT_METHOD_CALL 0 CV1($node) string("left")
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 1
0015 V5 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 2
0017 INIT_METHOD_CALL 0 CV1($node) string("operator")
0018 V6 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V6 3
0020 INIT_METHOD_CALL 1 CV0($printer) string("print")
0021 INIT_METHOD_CALL 0 CV1($node) string("right")
0022 V7 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V7 1
0024 V8 = DO_FCALL
0025 SEND_VAR_NO_REF_EX V8 4
0026 V9 = DO_FCALL
0027 VERIFY_RETURN_TYPE V9
0028 RETURN V9
0029 EXT_STMT
0030 VERIFY_RETURN_TYPE
0031 RETURN null
LIVE RANGES:
     9: 0027 - 0028 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/BooleanPrinter.php:1-21
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\booleanprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\BooleanPrinter::print:
     ; (lines=20, args=2, vars=2, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/BooleanPrinter.php:12-19
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\BooleanNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_METHOD_CALL 0 CV1($node) string("value")
0010 V4 = DO_FCALL
0011 JMPZ V4 0014
0012 T5 = QM_ASSIGN string("true")
0013 JMP 0015
0014 T5 = QM_ASSIGN string("false")
0015 VERIFY_RETURN_TYPE T5
0016 RETURN T5
0017 EXT_STMT
0018 VERIFY_RETURN_TYPE
0019 RETURN null
LIVE RANGES:
     5: 0015 - 0016 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/FunctionPrinter.php:1-21
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\functionprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\FunctionPrinter::print:
     ; (lines=26, args=2, vars=2, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/FunctionPrinter.php:12-19
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\FunctionNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\NodePrinter\sprintf")
0010 SEND_VAL_EX string("%s(%s)") 1
0011 INIT_METHOD_CALL 0 CV1($node) string("name")
0012 V4 = DO_FCALL
0013 SEND_VAR_NO_REF_EX V4 2
0014 INIT_METHOD_CALL 1 CV0($printer) string("print")
0015 INIT_METHOD_CALL 0 CV1($node) string("args")
0016 V5 = DO_FCALL
0017 SEND_VAR_NO_REF_EX V5 1
0018 V6 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V6 3
0020 V7 = DO_FCALL
0021 VERIFY_RETURN_TYPE V7
0022 RETURN V7
0023 EXT_STMT
0024 VERIFY_RETURN_TYPE
0025 RETURN null
LIVE RANGES:
     7: 0021 - 0022 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ListPrinter.php:1-27
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\listprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\ListPrinter::print:
     ; (lines=35, args=2, vars=4, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ListPrinter.php:12-25
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T4 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ListNode")
0004 T5 = BOOL_NOT T4
0005 JMPZ T5 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 ASSIGN CV2($out) array(...)
0010 EXT_STMT
0011 INIT_METHOD_CALL 0 CV1($node) string("nodes")
0012 V7 = DO_FCALL
0013 V8 = FE_RESET_R V7 0022
0014 FE_FETCH_R V8 CV3($expression) 0022
0015 EXT_STMT
0016 INIT_METHOD_CALL 1 CV0($printer) string("print")
0017 SEND_VAR_EX CV3($expression) 1
0018 V10 = DO_FCALL
0019 ASSIGN_DIM CV2($out) NEXT
0020 OP_DATA V10
0021 JMP 0014
0022 FE_FREE V8
0023 EXT_STMT
0024 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\implode")
0025 SEND_VAL_EX string(", ") 1
0026 SEND_VAR_EX CV2($out) 2
0027 V11 = DO_FCALL
0028 T12 = CONCAT string("[") V11
0029 T13 = CONCAT T12 string("]")
0030 VERIFY_RETURN_TYPE T13
0031 RETURN T13
0032 EXT_STMT
0033 VERIFY_RETURN_TYPE
0034 RETURN null
LIVE RANGES:
     8: 0014 - 0022 (loop)
     13: 0030 - 0031 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ParenthesisPrinter.php:1-21
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\parenthesisprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\ParenthesisPrinter::print:
     ; (lines=23, args=2, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ParenthesisPrinter.php:12-19
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ParenthesisNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\sprintf")
0010 SEND_VAL_EX string("(%s)") 1
0011 INIT_METHOD_CALL 1 CV0($printer) string("print")
0012 INIT_METHOD_CALL 0 CV1($node) string("expression")
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 1
0015 V5 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 2
0017 V6 = DO_FCALL
0018 VERIFY_RETURN_TYPE V6
0019 RETURN V6
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     6: 0018 - 0019 (tmp/var)

$_main:
     ; (lines=8, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/TolerablePrinter.php:1-32
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 EXT_STMT
0006 DECLARE_CLASS string("phpbench\expression\nodeprinter\tolerableprinter")
0007 RETURN int(1)

PhpBench\Expression\NodePrinter\TolerablePrinter::print:
     ; (lines=34, args=2, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/TolerablePrinter.php:13-30
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ToleratedTrue")
0004 JMPZ T2 0007
0005 EXT_STMT
0006 RETURN string("~true")
0007 EXT_STMT
0008 T3 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\TolerableNode")
0009 T4 = BOOL_NOT T3
0010 JMPZ T4 0013
0011 EXT_STMT
0012 RETURN null
0013 EXT_STMT
0014 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\NodePrinter\sprintf")
0015 SEND_VAL_EX string("%s ± %s") 1
0016 INIT_METHOD_CALL 1 CV0($printer) string("print")
0017 INIT_METHOD_CALL 0 CV1($node) string("value")
0018 V5 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V5 1
0020 V6 = DO_FCALL
0021 SEND_VAR_NO_REF_EX V6 2
0022 INIT_METHOD_CALL 1 CV0($printer) string("print")
0023 INIT_METHOD_CALL 0 CV1($node) string("tolerance")
0024 V7 = DO_FCALL
0025 SEND_VAR_NO_REF_EX V7 1
0026 V8 = DO_FCALL
0027 SEND_VAR_NO_REF_EX V8 3
0028 V9 = DO_FCALL
0029 VERIFY_RETURN_TYPE V9
0030 RETURN V9
0031 EXT_STMT
0032 VERIFY_RETURN_TYPE
0033 RETURN null
LIVE RANGES:
     9: 0029 - 0030 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/PercentagePrinter.php:1-27
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\nodeprinter\percentageprinter")
0008 RETURN int(1)

PhpBench\Expression\NodePrinter\PercentagePrinter::print:
     ; (lines=33, args=2, vars=2, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/PercentagePrinter.php:14-25
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\PercentageNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\NodePrinter\sprintf")
0010 SEND_VAL_EX string("%.2f%s") 1
0011 INIT_METHOD_CALL 1 CV0($printer) string("print")
0012 INIT_METHOD_CALL 0 CV1($node) string("valueNode")
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 1
0015 V5 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 2
0017 INIT_METHOD_CALL 1 CV0($printer) string("print")
0018 V6 = NEW 1 string("PhpBench\Expression\Ast\UnitNode")
0019 V7 = NEW 1 string("PhpBench\Expression\Ast\StringNode")
0020 SEND_VAL_EX string("%") 1
0021 DO_FCALL
0022 SEND_VAR_NO_REF_EX V7 1
0023 DO_FCALL
0024 SEND_VAR_NO_REF_EX V6 1
0025 V10 = DO_FCALL
0026 SEND_VAR_NO_REF_EX V10 3
0027 V11 = DO_FCALL
0028 VERIFY_RETURN_TYPE V11
0029 RETURN V11
0030 EXT_STMT
0031 VERIFY_RETURN_TYPE
0032 RETURN null
LIVE RANGES:
     6: 0019 - 0024 (new)
     7: 0020 - 0022 (new)
     11: 0028 - 0029 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ValueWithUnitPrinter.php:1-25
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\valuewithunitprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\ValueWithUnitPrinter::print:
     ; (lines=29, args=2, vars=2, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ValueWithUnitPrinter.php:12-23
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ValueWithUnitNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\NodePrinter\sprintf")
0010 SEND_VAL_EX string("%s %s") 1
0011 INIT_METHOD_CALL 1 CV0($printer) string("print")
0012 INIT_METHOD_CALL 0 CV1($node) string("left")
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 1
0015 V5 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 2
0017 INIT_METHOD_CALL 1 CV0($printer) string("print")
0018 INIT_METHOD_CALL 0 CV1($node) string("unit")
0019 V6 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V6 1
0021 V7 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V7 3
0023 V8 = DO_FCALL
0024 VERIFY_RETURN_TYPE V8
0025 RETURN V8
0026 EXT_STMT
0027 VERIFY_RETURN_TYPE
0028 RETURN null
LIVE RANGES:
     8: 0024 - 0025 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ParameterPrinter.php:1-35
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\nodeprinter\parameterprinter")
0008 RETURN int(1)

PhpBench\Expression\NodePrinter\{closure}:
     ; (lines=24, args=2, vars=3, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ParameterPrinter.php:22-32
     ; return  [] RANGE[0..0]
0000 CV0($carry) = RECV 1
0001 CV1($segment) = RECV 2
0002 BIND_STATIC CV2($printer)
0003 EXT_STMT
0004 T3 = INSTANCEOF CV1($segment) string("PhpBench\Expression\Ast\NullSafeNode")
0005 JMPZ T3 0014
0006 EXT_STMT
0007 INIT_METHOD_CALL 1 CV2($printer) string("print")
0008 SEND_VAR_EX CV1($segment) 1
0009 V4 = DO_FCALL
0010 T5 = CONCAT string("?") V4
0011 ASSIGN_OP (CONCAT) CV0($carry) T5
0012 EXT_STMT
0013 RETURN CV0($carry)
0014 EXT_STMT
0015 INIT_METHOD_CALL 1 CV2($printer) string("print")
0016 SEND_VAR_EX CV1($segment) 1
0017 V7 = DO_FCALL
0018 T8 = CONCAT string(".") V7
0019 ASSIGN_OP (CONCAT) CV0($carry) T8
0020 EXT_STMT
0021 RETURN CV0($carry)
0022 EXT_STMT
0023 RETURN null

PhpBench\Expression\NodePrinter\ParameterPrinter::print:
     ; (lines=27, args=2, vars=2, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ParameterPrinter.php:16-33
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ParameterNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\ltrim")
0010 INIT_FCALL 3 128 string("array_reduce")
0011 INIT_METHOD_CALL 0 CV1($node) string("segments")
0012 V4 = DO_FCALL
0013 SEND_VAR V4 1
0014 T5 = DECLARE_LAMBDA_FUNCTION string("")
0015 BIND_LEXICAL T5 CV0($printer)
0016 SEND_VAL T5 2
0017 SEND_VAL string("") 3
0018 V6 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V6 1
0020 SEND_VAL_EX string(".") 2
0021 V7 = DO_FCALL
0022 VERIFY_RETURN_TYPE V7
0023 RETURN V7
0024 EXT_STMT
0025 VERIFY_RETURN_TYPE
0026 RETURN null
LIVE RANGES:
     5: 0015 - 0016 (tmp/var)
     7: 0022 - 0023 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/StringPrinter.php:1-21
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\stringprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\StringPrinter::print:
     ; (lines=17, args=2, vars=2, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/StringPrinter.php:12-19
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\StringNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_METHOD_CALL 0 CV1($node) string("value")
0010 V4 = DO_FCALL
0011 T5 = CAST (string) V4
0012 VERIFY_RETURN_TYPE T5
0013 RETURN T5
0014 EXT_STMT
0015 VERIFY_RETURN_TYPE
0016 RETURN null
LIVE RANGES:
     5: 0012 - 0013 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/LabelPrinter.php:1-21
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\labelprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\LabelPrinter::print:
     ; (lines=17, args=2, vars=2, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/LabelPrinter.php:12-19
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\LabelNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_METHOD_CALL 0 CV1($node) string("value")
0010 V4 = DO_FCALL
0011 T5 = CAST (string) V4
0012 VERIFY_RETURN_TYPE T5
0013 RETURN T5
0014 EXT_STMT
0015 VERIFY_RETURN_TYPE
0016 RETURN null
LIVE RANGES:
     5: 0012 - 0013 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ConcatPrinter.php:1-27
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\concatprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\ConcatPrinter::print:
     ; (lines=30, args=2, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ConcatPrinter.php:15-25
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\ConcatNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\implode")
0010 SEND_VAL_EX string("") 1
0011 INIT_METHOD_CALL 1 CV0($printer) string("print")
0012 INIT_METHOD_CALL 0 CV1($node) string("left")
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 1
0015 V5 = DO_FCALL
0016 T6 = INIT_ARRAY 2 (packed) V5 NEXT
0017 INIT_METHOD_CALL 1 CV0($printer) string("print")
0018 INIT_METHOD_CALL 0 CV1($node) string("right")
0019 V7 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V7 1
0021 V8 = DO_FCALL
0022 T6 = ADD_ARRAY_ELEMENT V8 NEXT
0023 SEND_VAL_EX T6 2
0024 V9 = DO_FCALL
0025 VERIFY_RETURN_TYPE V9
0026 RETURN V9
0027 EXT_STMT
0028 VERIFY_RETURN_TYPE
0029 RETURN null
LIVE RANGES:
     6: 0017 - 0023 (tmp/var)
     9: 0025 - 0026 (tmp/var)

$_main:
     ; (lines=8, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/PercentageDifferencePrinter.php:1-31
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 EXT_STMT
0006 DECLARE_CLASS string("phpbench\expression\nodeprinter\percentagedifferenceprinter")
0007 RETURN int(1)

PhpBench\Expression\NodePrinter\PercentageDifferencePrinter::print:
     ; (lines=36, args=2, vars=3, tmps=11)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/PercentageDifferencePrinter.php:16-29
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T3 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\PercentDifferenceNode")
0004 T4 = BOOL_NOT T3
0005 JMPZ T4 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_METHOD_CALL 0 CV1($node) string("percentage")
0010 V5 = DO_FCALL
0011 T6 = IS_SMALLER int(0) V5
0012 JMPZ T6 0015
0013 T7 = QM_ASSIGN string("+")
0014 JMP 0016
0015 T7 = QM_ASSIGN string("")
0016 ASSIGN CV2($prefix) T7
0017 EXT_STMT
0018 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\NodePrinter\sprintf")
0019 SEND_VAL_EX string("%s%.2f%%") 1
0020 SEND_VAR_EX CV2($prefix) 2
0021 INIT_METHOD_CALL 1 CV0($printer) string("print")
0022 V9 = NEW 1 string("PhpBench\Expression\Ast\FloatNode")
0023 INIT_METHOD_CALL 0 CV1($node) string("percentage")
0024 V10 = DO_FCALL
0025 SEND_VAR_NO_REF_EX V10 1
0026 DO_FCALL
0027 SEND_VAR_NO_REF_EX V9 1
0028 V12 = DO_FCALL
0029 SEND_VAR_NO_REF_EX V12 3
0030 V13 = DO_FCALL
0031 VERIFY_RETURN_TYPE V13
0032 RETURN V13
0033 EXT_STMT
0034 VERIFY_RETURN_TYPE
0035 RETURN null
LIVE RANGES:
     9: 0023 - 0027 (new)
     13: 0031 - 0032 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/NullPrinter.php:1-21
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\nullprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\NullPrinter::print:
     ; (lines=13, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/NullPrinter.php:12-19
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\NullNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 RETURN string("null")
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/UnrepresentableValuePrinter.php:1-21
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\unrepresentablevalueprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\UnrepresentableValuePrinter::print:
     ; (lines=23, args=2, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/UnrepresentableValuePrinter.php:12-19
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\UnrepresentableValueNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\NodePrinter\sprintf")
0010 SEND_VAL_EX string("<%s>") 1
0011 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodePrinter\gettype")
0012 INIT_METHOD_CALL 0 CV1($node) string("value")
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 1
0015 V5 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 2
0017 V6 = DO_FCALL
0018 VERIFY_RETURN_TYPE V6
0019 RETURN V6
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     6: 0018 - 0019 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/VariablePrinter.php:1-24
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\variableprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\VariablePrinter::print:
     ; (lines=16, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/VariablePrinter.php:15-22
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\VariableNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_METHOD_CALL 0 CV1($node) string("name")
0010 V4 = DO_FCALL
0011 VERIFY_RETURN_TYPE V4
0012 RETURN V4
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE
0015 RETURN null
LIVE RANGES:
     4: 0011 - 0012 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ArrayAccessPrinter.php:1-24
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\arrayaccessprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\ArrayAccessPrinter::print:
     ; (lines=29, args=2, vars=2, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/ArrayAccessPrinter.php:15-22
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\AccessNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\NodePrinter\sprintf")
0010 SEND_VAL_EX string("%s[%s]") 1
0011 INIT_METHOD_CALL 1 CV0($printer) string("print")
0012 INIT_METHOD_CALL 0 CV1($node) string("expression")
0013 V4 = DO_FCALL
0014 SEND_VAR_NO_REF_EX V4 1
0015 V5 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V5 2
0017 INIT_METHOD_CALL 1 CV0($printer) string("print")
0018 INIT_METHOD_CALL 0 CV1($node) string("access")
0019 V6 = DO_FCALL
0020 SEND_VAR_NO_REF_EX V6 1
0021 V7 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V7 3
0023 V8 = DO_FCALL
0024 VERIFY_RETURN_TYPE V8
0025 RETURN V8
0026 EXT_STMT
0027 VERIFY_RETURN_TYPE
0028 RETURN null
LIVE RANGES:
     8: 0024 - 0025 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/NullSafePrinter.php:1-21
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\expression\nodeprinter\nullsafeprinter")
0006 RETURN int(1)

PhpBench\Expression\NodePrinter\NullSafePrinter::print:
     ; (lines=20, args=2, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/NullSafePrinter.php:12-19
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T2 = INSTANCEOF CV1($node) string("PhpBench\Expression\Ast\NullSafeNode")
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0008
0006 EXT_STMT
0007 RETURN null
0008 EXT_STMT
0009 INIT_METHOD_CALL 1 CV0($printer) string("print")
0010 INIT_METHOD_CALL 0 CV1($node) string("node")
0011 V4 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V4 1
0013 V5 = DO_FCALL
0014 T6 = CONCAT V5 string("?")
0015 VERIFY_RETURN_TYPE T6
0016 RETURN T6
0017 EXT_STMT
0018 VERIFY_RETURN_TYPE
0019 RETURN null
LIVE RANGES:
     6: 0015 - 0016 (tmp/var)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Printer/UnderlinePrinterFactory.php:1-25
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 EXT_STMT
0004 RETURN int(1)

PhpBench\Expression\Printer\UnderlinePrinterFactory::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Printer/UnderlinePrinterFactory.php:15-18
     ; return  [] RANGE[0..0]
0000 CV0($printers) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("printers")
0003 OP_DATA CV0($printers)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\Printer\UnderlinePrinterFactory::underline:
     ; (lines=13, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Printer/UnderlinePrinterFactory.php:20-23
     ; return  [] RANGE[0..0]
0000 CV0($targetNode) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 string("PhpBench\Expression\Printer\UnderlinePrinter")
0003 CHECK_FUNC_ARG 1
0004 V2 = FETCH_OBJ_FUNC_ARG (ref) THIS string("printers")
0005 SEND_FUNC_ARG V2 1
0006 SEND_VAR_EX CV0($targetNode) 2
0007 DO_FCALL
0008 VERIFY_RETURN_TYPE V1
0009 RETURN V1
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (new)
     1: 0008 - 0009 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/HighlightingNodePrinter.php:1-59
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\nodeprinter\highlightingnodeprinter")
0008 RETURN int(1)

PhpBench\Expression\NodePrinter\HighlightingNodePrinter::__construct:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/HighlightingNodePrinter.php:25-29
     ; return  [] RANGE[0..0]
0000 CV0($nodePrinter) = RECV 1
0001 CV1($colorMap) = RECV 2
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("nodePrinter")
0004 OP_DATA CV0($nodePrinter)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("colorMap")
0007 OP_DATA CV1($colorMap)
0008 EXT_STMT
0009 RETURN null

PhpBench\Expression\NodePrinter\HighlightingNodePrinter::print:
     ; (lines=52, args=2, vars=6, tmps=16)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/NodePrinter/HighlightingNodePrinter.php:34-57
     ; return  [] RANGE[0..0]
0000 CV0($printer) = RECV 1
0001 CV1($node) = RECV 2
0002 EXT_STMT
0003 T6 = FETCH_OBJ_R THIS string("nodePrinter")
0004 INIT_METHOD_CALL 2 T6 string("print")
0005 SEND_VAR_EX CV0($printer) 1
0006 SEND_VAR_EX CV1($node) 2
0007 V7 = DO_FCALL
0008 ASSIGN CV2($printed) V7
0009 EXT_STMT
0010 T9 = FETCH_OBJ_R THIS string("colorMap")
0011 INIT_METHOD_CALL 0 T9 string("colors")
0012 V10 = DO_FCALL
0013 ASSIGN CV3($map) V10
0014 EXT_STMT
0015 V12 = FE_RESET_R CV3($map) 0045
0016 T13 = FE_FETCH_R V12 CV4($color) 0045
0017 ASSIGN CV5($nodeFqn) T13
0018 EXT_STMT
0019 V15 = FETCH_CLASS (no-autolod) (exception) CV5($nodeFqn)
0020 T16 = INSTANCEOF CV1($node) V15
0021 T17 = BOOL_NOT T16
0022 JMPZ T17 0025
0023 EXT_STMT
0024 JMP 0016
0025 EXT_STMT
0026 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\NodePrinter\is_callable")
0027 SEND_VAR_EX CV4($color) 1
0028 V18 = DO_FCALL
0029 JMPZ V18 0035
0030 EXT_STMT
0031 INIT_DYNAMIC_CALL 1 CV4($color)
0032 SEND_VAR_EX CV1($node) 1
0033 V19 = DO_FCALL
0034 ASSIGN CV4($color) V19
0035 EXT_STMT
0036 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\NodePrinter\sprintf")
0037 SEND_VAL_EX string("<%s>%s</>") 1
0038 SEND_VAR_EX CV4($color) 2
0039 SEND_VAR_EX CV2($printed) 3
0040 V21 = DO_FCALL
0041 VERIFY_RETURN_TYPE V21
0042 FE_FREE V12
0043 RETURN V21
0044 JMP 0016
0045 FE_FREE V12
0046 EXT_STMT
0047 VERIFY_RETURN_TYPE CV2($printed)
0048 RETURN CV2($printed)
0049 EXT_STMT
0050 VERIFY_RETURN_TYPE
0051 RETURN null
LIVE RANGES:
     12: 0016 - 0045 (loop)
     21: 0041 - 0043 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/NullOutputFormatter.php:1-73
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 DECLARE_CLASS string("symfony\component\console\formatter\nulloutputformatter")
0003 RETURN int(1)

Symfony\Component\Console\Formatter\NullOutputFormatter::format:
     ; (lines=3, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/NullOutputFormatter.php:24-27
     ; return  [] RANGE[0..0]
0000 CV0($message) = RECV 1
0001 EXT_STMT
0002 RETURN null

Symfony\Component\Console\Formatter\NullOutputFormatter::getStyle:
     ; (lines=18, args=1, vars=1, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/NullOutputFormatter.php:32-39
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_R THIS string("style")
0003 JMPZ T1 0008
0004 EXT_STMT
0005 T2 = FETCH_OBJ_R THIS string("style")
0006 VERIFY_RETURN_TYPE T2
0007 RETURN T2
0008 EXT_STMT
0009 V4 = NEW 0 string("Symfony\Component\Console\Formatter\NullOutputFormatterStyle")
0010 DO_FCALL
0011 T3 = ASSIGN_OBJ THIS string("style")
0012 OP_DATA V4
0013 VERIFY_RETURN_TYPE T3
0014 RETURN T3
0015 EXT_STMT
0016 VERIFY_RETURN_TYPE
0017 RETURN null
LIVE RANGES:
     2: 0006 - 0007 (tmp/var)
     4: 0010 - 0011 (new)
     3: 0012 - 0014 (tmp/var)

Symfony\Component\Console\Formatter\NullOutputFormatter::hasStyle:
     ; (lines=6, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/NullOutputFormatter.php:44-47
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 EXT_STMT
0002 RETURN bool(false)
0003 EXT_STMT
0004 VERIFY_RETURN_TYPE
0005 RETURN null

Symfony\Component\Console\Formatter\NullOutputFormatter::isDecorated:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/NullOutputFormatter.php:52-55
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN bool(false)
0002 EXT_STMT
0003 VERIFY_RETURN_TYPE
0004 RETURN null

Symfony\Component\Console\Formatter\NullOutputFormatter::setDecorated:
     ; (lines=3, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/NullOutputFormatter.php:60-63
     ; return  [] RANGE[0..0]
0000 CV0($decorated) = RECV 1
0001 EXT_STMT
0002 RETURN null

Symfony\Component\Console\Formatter\NullOutputFormatter::setStyle:
     ; (lines=4, args=2, vars=2, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/NullOutputFormatter.php:68-71
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 CV1($style) = RECV 2
0002 EXT_STMT
0003 RETURN null

$_main:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/OutputFormatterInterface.php:1-59
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN int(1)

Symfony\Component\Console\Formatter\OutputFormatterInterface::setDecorated:
     ; (lines=3, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/OutputFormatterInterface.php:24-24
     ; return  [] RANGE[0..0]
0000 CV0($decorated) = RECV 1
0001 EXT_STMT
0002 RETURN null

Symfony\Component\Console\Formatter\OutputFormatterInterface::isDecorated:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/OutputFormatterInterface.php:31-31
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN null

Symfony\Component\Console\Formatter\OutputFormatterInterface::setStyle:
     ; (lines=4, args=2, vars=2, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/OutputFormatterInterface.php:36-36
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 CV1($style) = RECV 2
0002 EXT_STMT
0003 RETURN null

Symfony\Component\Console\Formatter\OutputFormatterInterface::hasStyle:
     ; (lines=3, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/OutputFormatterInterface.php:43-43
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 EXT_STMT
0002 RETURN null

Symfony\Component\Console\Formatter\OutputFormatterInterface::getStyle:
     ; (lines=3, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/OutputFormatterInterface.php:52-52
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 EXT_STMT
0002 RETURN null

Symfony\Component\Console\Formatter\OutputFormatterInterface::format:
     ; (lines=3, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/vendor/symfony/console/Formatter/OutputFormatterInterface.php:57-57
     ; return  [] RANGE[0..0]
0000 CV0($message) = RECV 1
0001 EXT_STMT
0002 RETURN null

$_main:
     ; (lines=26, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Theme/SolarizedTheme.php:1-150
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 NOP
0012 NOP
0013 NOP
0014 NOP
0015 NOP
0016 NOP
0017 NOP
0018 NOP
0019 NOP
0020 NOP
0021 NOP
0022 NOP
0023 EXT_STMT
0024 DECLARE_CLASS string("phpbench\expression\theme\solarizedtheme")
0025 RETURN int(1)

PhpBench\Expression\Theme\{closure}:
     ; (lines=20, args=1, vars=1, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Theme/SolarizedTheme.php:110-114
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 NOP
0002 EXT_STMT
0003 V1 = FETCH_THIS
0004 INIT_METHOD_CALL 0 V1 string("gradient")
0005 V2 = DO_FCALL
0006 INIT_METHOD_CALL 1 V2 string("colorAtPercentile")
0007 INIT_METHOD_CALL 0 CV0($node) string("percentage")
0008 V3 = DO_FCALL
0009 T4 = CAST (long) V3
0010 T5 = ADD T4 int(100)
0011 T6 = DIV T5 int(2)
0012 SEND_VAL_EX T6 1
0013 V7 = DO_FCALL
0014 INIT_METHOD_CALL 0 V7 string("toHex")
0015 V8 = DO_FCALL
0016 T9 = CONCAT string("fg=#") V8
0017 RETURN T9
0018 EXT_STMT
0019 RETURN null

PhpBench\Expression\Theme\{closure}:
     ; (lines=19, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Theme/SolarizedTheme.php:115-121
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 NOP
0002 EXT_STMT
0003 V1 = FETCH_THIS
0004 INIT_METHOD_CALL 0 V1 string("gradient")
0005 V2 = DO_FCALL
0006 INIT_METHOD_CALL 1 V2 string("colorAtPercentile")
0007 INIT_METHOD_CALL 0 CV0($node) string("value")
0008 V3 = DO_FCALL
0009 T4 = CAST (long) V3
0010 T5 = ADD int(50) T4
0011 SEND_VAL_EX T5 1
0012 V6 = DO_FCALL
0013 INIT_METHOD_CALL 0 V6 string("toHex")
0014 V7 = DO_FCALL
0015 T8 = CONCAT string("fg=#") V7
0016 RETURN T8
0017 EXT_STMT
0018 RETURN null

PhpBench\Expression\Theme\{closure}:
     ; (lines=18, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Theme/SolarizedTheme.php:124-128
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 NOP
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 CV0($node) string("value")
0004 V1 = DO_FCALL
0005 JMPZ V1 0010
0006 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("BLUE")
0007 T3 = CONCAT string("fg=") T2
0008 T4 = QM_ASSIGN T3
0009 JMP 0013
0010 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("RED")
0011 T6 = CONCAT string("fg=") T5
0012 T4 = QM_ASSIGN T6
0013 VERIFY_RETURN_TYPE T4
0014 RETURN T4
0015 EXT_STMT
0016 VERIFY_RETURN_TYPE
0017 RETURN null
LIVE RANGES:
     4: 0013 - 0014 (tmp/var)

PhpBench\Expression\Theme\SolarizedTheme::__construct:
     ; (lines=45, args=1, vars=1, tmps=18)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Theme/SolarizedTheme.php:77-94
     ; return  [] RANGE[0..0]
0000 CV0($light) = RECV_INIT 1 bool(true)
0001 EXT_STMT
0002 JMPZ CV0($light) 0024
0003 EXT_STMT
0004 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("BASE00")
0005 ASSIGN_OBJ THIS string("base0")
0006 OP_DATA T2
0007 EXT_STMT
0008 T4 = FETCH_CLASS_CONSTANT (self) (exception) string("BASE01")
0009 ASSIGN_OBJ THIS string("base1")
0010 OP_DATA T4
0011 EXT_STMT
0012 T6 = FETCH_CLASS_CONSTANT (self) (exception) string("BASE02")
0013 ASSIGN_OBJ THIS string("base2")
0014 OP_DATA T6
0015 EXT_STMT
0016 T8 = FETCH_CLASS_CONSTANT (self) (exception) string("BASE03")
0017 ASSIGN_OBJ THIS string("base3")
0018 OP_DATA T8
0019 EXT_STMT
0020 ASSIGN_OBJ THIS string("neutral")
0021 OP_DATA string("#222222")
0022 EXT_STMT
0023 RETURN null
0024 EXT_STMT
0025 ASSIGN_OBJ THIS string("neutral")
0026 OP_DATA string("#aaaaaa")
0027 EXT_STMT
0028 T12 = FETCH_CLASS_CONSTANT (self) (exception) string("BASE0")
0029 ASSIGN_OBJ THIS string("base0")
0030 OP_DATA T12
0031 EXT_STMT
0032 T14 = FETCH_CLASS_CONSTANT (self) (exception) string("BASE1")
0033 ASSIGN_OBJ THIS string("base1")
0034 OP_DATA T14
0035 EXT_STMT
0036 T16 = FETCH_CLASS_CONSTANT (self) (exception) string("BASE2")
0037 ASSIGN_OBJ THIS string("base2")
0038 OP_DATA T16
0039 EXT_STMT
0040 T18 = FETCH_CLASS_CONSTANT (self) (exception) string("BASE3")
0041 ASSIGN_OBJ THIS string("base3")
0042 OP_DATA T18
0043 EXT_STMT
0044 RETURN null

PhpBench\Expression\Theme\SolarizedTheme::colors:
     ; (lines=37, args=0, vars=0, tmps=20)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Theme/SolarizedTheme.php:101-133
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_CLASS_CONSTANT (self) (exception) string("BASE1")
0002 T1 = CONCAT string("fg=") T0
0003 T2 = INIT_ARRAY 12 T1 string("PhpBench\Expression\Ast\LabelNode")
0004 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("BASE1")
0005 T4 = CONCAT string("fg=") T3
0006 T2 = ADD_ARRAY_ELEMENT T4 string("PhpBench\Expression\Ast\UnitNode")
0007 T5 = FETCH_CLASS_CONSTANT (self) (exception) string("GREEN")
0008 T6 = CONCAT string("fg=") T5
0009 T2 = ADD_ARRAY_ELEMENT T6 string("PhpBench\Expression\Ast\FunctionNode")
0010 T7 = FETCH_CLASS_CONSTANT (self) (exception) string("RED")
0011 T8 = CONCAT string("fg=") T7
0012 T2 = ADD_ARRAY_ELEMENT T8 string("PhpBench\Expression\Ast\ParenthesisNode")
0013 T9 = DECLARE_LAMBDA_FUNCTION string("")
0014 T2 = ADD_ARRAY_ELEMENT T9 string("PhpBench\Expression\Ast\PercentDifferenceNode")
0015 T10 = DECLARE_LAMBDA_FUNCTION string("")
0016 T2 = ADD_ARRAY_ELEMENT T10 string("PhpBench\Expression\Ast\RelativeDeviationNode")
0017 T2 = ADD_ARRAY_ELEMENT string("fg=default") string("PhpBench\Expression\Ast\DisplayAsNode")
0018 T11 = FETCH_CLASS_CONSTANT (self) (exception) string("ORANGE")
0019 T12 = CONCAT string("fg=") T11
0020 T2 = ADD_ARRAY_ELEMENT T12 string("PhpBench\Expression\Ast\ParameterNode")
0021 T13 = DECLARE_LAMBDA_FUNCTION string("")
0022 T2 = ADD_ARRAY_ELEMENT T13 string("PhpBench\Expression\Ast\BooleanNode")
0023 T14 = FETCH_CLASS_CONSTANT (self) (exception) string("BLUE")
0024 T15 = CONCAT string("fg=") T14
0025 T2 = ADD_ARRAY_ELEMENT T15 string("PhpBench\Expression\Ast\ToleratedTrue")
0026 T16 = FETCH_CLASS_CONSTANT (self) (exception) string("YELLOW")
0027 T17 = CONCAT string("fg=") T16
0028 T2 = ADD_ARRAY_ELEMENT T17 string("PhpBench\Expression\Ast\ArithmeticOperatorNode")
0029 T18 = FETCH_CLASS_CONSTANT (self) (exception) string("YELLOW")
0030 T19 = CONCAT string("fg=") T18
0031 T2 = ADD_ARRAY_ELEMENT T19 string("PhpBench\Expression\Ast\ComparisonNode")
0032 VERIFY_RETURN_TYPE T2
0033 RETURN T2
0034 EXT_STMT
0035 VERIFY_RETURN_TYPE
0036 RETURN null
LIVE RANGES:
     2: 0004 - 0033 (tmp/var)

PhpBench\Expression\Theme\SolarizedTheme::gradient:
     ; (lines=35, args=0, vars=0, tmps=11)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Theme/SolarizedTheme.php:135-148
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("gradient")
0002 T1 = BOOL_NOT T0
0003 JMPZ T1 0028
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Theme\Util\Gradient") string("start")
0006 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Theme\Util\Color") string("fromHex")
0007 T3 = FETCH_CLASS_CONSTANT (self) (exception) string("GREEN")
0008 SEND_VAL_EX T3 1
0009 V4 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V4 1
0011 V5 = DO_FCALL
0012 INIT_METHOD_CALL 2 V5 string("to")
0013 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Theme\Util\Color") string("fromHex")
0014 SEND_VAL_EX string("#aaaaaa") 1
0015 V6 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V6 1
0017 SEND_VAL_EX int(100) 2
0018 V7 = DO_FCALL
0019 INIT_METHOD_CALL 2 V7 string("to")
0020 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Theme\Util\Color") string("fromHex")
0021 SEND_VAL_EX string("#ff0000") 1
0022 V8 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V8 1
0024 SEND_VAL_EX int(100) 2
0025 V9 = DO_FCALL
0026 ASSIGN_OBJ THIS string("gradient")
0027 OP_DATA V9
0028 EXT_STMT
0029 T10 = FETCH_OBJ_R THIS string("gradient")
0030 VERIFY_RETURN_TYPE T10
0031 RETURN T10
0032 EXT_STMT
0033 VERIFY_RETURN_TYPE
0034 RETURN null
LIVE RANGES:
     10: 0030 - 0031 (tmp/var)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ColorMap.php:1-17
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 RETURN int(1)

PhpBench\Expression\ColorMap::colors:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/ColorMap.php:15-15
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 VERIFY_RETURN_TYPE
0002 RETURN null

$_main:
     ; (lines=11, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Printer/EvaluatingPrinter.php:1-74
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 EXT_STMT
0009 DECLARE_CLASS string("phpbench\expression\printer\evaluatingprinter")
0010 RETURN int(1)

PhpBench\Expression\Printer\EvaluatingPrinter::__construct:
     ; (lines=18, args=4, vars=4, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Printer/EvaluatingPrinter.php:32-42
     ; return  [] RANGE[0..0]
0000 CV0($printers) = RECV 1
0001 CV1($evaluator) = RECV 2
0002 CV2($nodeClasses) = RECV 3
0003 CV3($params) = RECV_INIT 4 array(...)
0004 EXT_STMT
0005 ASSIGN_OBJ THIS string("printers")
0006 OP_DATA CV0($printers)
0007 EXT_STMT
0008 ASSIGN_OBJ THIS string("nodeClasses")
0009 OP_DATA CV2($nodeClasses)
0010 EXT_STMT
0011 ASSIGN_OBJ THIS string("evaluator")
0012 OP_DATA CV1($evaluator)
0013 EXT_STMT
0014 ASSIGN_OBJ THIS string("params")
0015 OP_DATA CV3($params)
0016 EXT_STMT
0017 RETURN null

PhpBench\Expression\Printer\EvaluatingPrinter::withParams:
     ; (lines=19, args=1, vars=1, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Printer/EvaluatingPrinter.php:47-50
     ; return  [] RANGE[0..0]
0000 CV0($params) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 4 (self) (exception)
0003 CHECK_FUNC_ARG 1
0004 V2 = FETCH_OBJ_FUNC_ARG (ref) THIS string("printers")
0005 SEND_FUNC_ARG V2 1
0006 CHECK_FUNC_ARG 2
0007 V3 = FETCH_OBJ_FUNC_ARG (ref) THIS string("evaluator")
0008 SEND_FUNC_ARG V3 2
0009 CHECK_FUNC_ARG 3
0010 V4 = FETCH_OBJ_FUNC_ARG (ref) THIS string("nodeClasses")
0011 SEND_FUNC_ARG V4 3
0012 SEND_VAR_EX CV0($params) 4
0013 DO_FCALL
0014 VERIFY_RETURN_TYPE V1
0015 RETURN V1
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     1: 0003 - 0014 (new)
     1: 0014 - 0015 (tmp/var)

PhpBench\Expression\Printer\EvaluatingPrinter::print:
     ; (lines=37, args=1, vars=1, tmps=12)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Printer/EvaluatingPrinter.php:52-61
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 THIS string("shouldEvaluate")
0003 SEND_VAR_EX CV0($node) 1
0004 V1 = DO_FCALL
0005 T2 = BOOL_NOT V1
0006 JMPZ T2 0016
0007 EXT_STMT
0008 T3 = FETCH_OBJ_R THIS string("printers")
0009 INIT_METHOD_CALL 2 T3 string("print")
0010 V4 = FETCH_THIS
0011 SEND_VAR_EX V4 1
0012 SEND_VAR_EX CV0($node) 2
0013 V5 = DO_FCALL
0014 VERIFY_RETURN_TYPE V5
0015 RETURN V5
0016 EXT_STMT
0017 T6 = FETCH_OBJ_R THIS string("evaluator")
0018 INIT_METHOD_CALL 2 T6 string("evaluate")
0019 SEND_VAR_EX CV0($node) 1
0020 CHECK_FUNC_ARG 2
0021 V7 = FETCH_OBJ_FUNC_ARG (ref) THIS string("params")
0022 SEND_FUNC_ARG V7 2
0023 V8 = DO_FCALL
0024 ASSIGN CV0($node) V8
0025 EXT_STMT
0026 T10 = FETCH_OBJ_R THIS string("printers")
0027 INIT_METHOD_CALL 2 T10 string("print")
0028 V11 = FETCH_THIS
0029 SEND_VAR_EX V11 1
0030 SEND_VAR_EX CV0($node) 2
0031 V12 = DO_FCALL
0032 VERIFY_RETURN_TYPE V12
0033 RETURN V12
0034 EXT_STMT
0035 VERIFY_RETURN_TYPE
0036 RETURN null
LIVE RANGES:
     5: 0014 - 0015 (tmp/var)
     12: 0032 - 0033 (tmp/var)

PhpBench\Expression\Printer\EvaluatingPrinter::shouldEvaluate:
     ; (lines=19, args=1, vars=2, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Printer/EvaluatingPrinter.php:63-72
     ; return  [] RANGE[0..0]
0000 CV0($node) = RECV 1
0001 EXT_STMT
0002 T2 = FETCH_OBJ_R THIS string("nodeClasses")
0003 V3 = FE_RESET_R T2 0013
0004 FE_FETCH_R V3 CV1($nodeClass) 0013
0005 EXT_STMT
0006 V4 = FETCH_CLASS (no-autolod) (exception) CV1($nodeClass)
0007 T5 = INSTANCEOF CV0($node) V4
0008 JMPZ T5 0012
0009 EXT_STMT
0010 FE_FREE V3
0011 RETURN bool(true)
0012 JMP 0004
0013 FE_FREE V3
0014 EXT_STMT
0015 RETURN bool(false)
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     3: 0004 - 0013 (loop)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/ParameterProvider.php:1-65
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 EXT_STMT
0004 RETURN int(1)

PhpBench\Assertion\{closure}:
     ; (lines=39, args=1, vars=2, tmps=15)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/ParameterProvider.php:16-24
     ; return  [] RANGE[0..0]
0000 CV0($variantData) = RECV 1
0001 BIND_STATIC CV1($variant)
0002 EXT_STMT
0003 V2 = FETCH_THIS
0004 INIT_METHOD_CALL 1 V2 string("subjectData")
0005 INIT_METHOD_CALL 0 CV1($variant) string("getSubject")
0006 V3 = DO_FCALL
0007 SEND_VAR_NO_REF_EX V3 1
0008 V4 = DO_FCALL
0009 T5 = INIT_ARRAY 5 V4 string("subject")
0010 T5 = ADD_ARRAY_ELEMENT CV0($variantData) string("variant")
0011 INIT_METHOD_CALL 0 CV1($variant) string("getBaseline")
0012 V6 = DO_FCALL
0013 JMPZ V6 0022
0014 V7 = FETCH_THIS
0015 INIT_METHOD_CALL 1 V7 string("buildVariantData")
0016 INIT_METHOD_CALL 0 CV1($variant) string("getBaseline")
0017 V8 = DO_FCALL
0018 SEND_VAR_NO_REF_EX V8 1
0019 V9 = DO_FCALL
0020 T10 = QM_ASSIGN V9
0021 JMP 0023
0022 T10 = QM_ASSIGN CV0($variantData)
0023 T5 = ADD_ARRAY_ELEMENT T10 string("baseline")
0024 T11 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\NodePrinter\DisplayAsPrinter") string("PARAM_OUTPUT_TIME_UNIT")
0025 INIT_METHOD_CALL 0 CV1($variant) string("getSubject")
0026 V12 = DO_FCALL
0027 INIT_METHOD_CALL 0 V12 string("getOutputTimeUnit")
0028 V13 = DO_FCALL
0029 T5 = ADD_ARRAY_ELEMENT V13 T11
0030 T14 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\NodePrinter\DisplayAsPrinter") string("PARAM_OUTPUT_TIME_PRECISION")
0031 INIT_METHOD_CALL 0 CV1($variant) string("getSubject")
0032 V15 = DO_FCALL
0033 INIT_METHOD_CALL 0 V15 string("getOutputTimePrecision")
0034 V16 = DO_FCALL
0035 T5 = ADD_ARRAY_ELEMENT V16 T14
0036 RETURN T5
0037 EXT_STMT
0038 RETURN null
LIVE RANGES:
     5: 0010 - 0036 (tmp/var)
     11: 0025 - 0029 (tmp/var)
     14: 0031 - 0035 (tmp/var)

PhpBench\Assertion\ParameterProvider::provideFor:
     ; (lines=13, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/ParameterProvider.php:14-25
     ; return  [] RANGE[0..0]
0000 CV0($variant) = RECV 1
0001 EXT_STMT
0002 T1 = DECLARE_LAMBDA_FUNCTION string("")
0003 BIND_LEXICAL T1 CV0($variant)
0004 INIT_DYNAMIC_CALL 1 T1
0005 INIT_METHOD_CALL 1 THIS string("buildVariantData")
0006 SEND_VAR_EX CV0($variant) 1
0007 V2 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V2 1
0009 V3 = DO_FCALL
0010 RETURN V3
0011 EXT_STMT
0012 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (tmp/var)

PhpBench\Assertion\ParameterProvider::buildVariantData:
     ; (lines=54, args=1, vars=8, tmps=24)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/ParameterProvider.php:30-51
     ; return  [] RANGE[0..0]
0000 CV0($variant) = RECV 1
0001 EXT_STMT
0002 ASSIGN CV1($data) array(...)
0003 EXT_STMT
0004 INIT_METHOD_CALL 0 CV0($variant) string("getIterations")
0005 V9 = DO_FCALL
0006 V10 = FE_RESET_R V9 0049
0007 FE_FETCH_R V10 CV2($iteration) 0049
0008 EXT_STMT
0009 INIT_METHOD_CALL 0 CV2($iteration) string("getResults")
0010 V11 = DO_FCALL
0011 V12 = FE_RESET_R V11 0047
0012 FE_FETCH_R V12 CV3($result) 0047
0013 EXT_STMT
0014 INIT_METHOD_CALL 0 CV3($result) string("getMetrics")
0015 V13 = DO_FCALL
0016 ASSIGN CV4($metrics) V13
0017 EXT_STMT
0018 INIT_METHOD_CALL 0 CV3($result) string("getKey")
0019 V15 = DO_FCALL
0020 T16 = CAST (string) V15
0021 ASSIGN CV5($resultKey) T16
0022 EXT_STMT
0023 V18 = FE_RESET_R CV4($metrics) 0045
0024 T19 = FE_FETCH_R V18 CV6($value) 0045
0025 ASSIGN CV7($name) T19
0026 EXT_STMT
0027 T21 = CAST (string) CV7($name)
0028 ASSIGN CV7($name) T21
0029 EXT_STMT
0030 T23 = FETCH_DIM_IS CV1($data) CV5($resultKey)
0031 T24 = ISSET_ISEMPTY_DIM_OBJ (isset) T23 CV7($name)
0032 T25 = BOOL_NOT T24
0033 JMPZ T25 0038
0034 EXT_STMT
0035 V26 = FETCH_DIM_W CV1($data) CV5($resultKey)
0036 ASSIGN_DIM V26 CV7($name)
0037 OP_DATA array(...)
0038 EXT_STMT
0039 T29 = CAST (string) CV7($name)
0040 V28 = FETCH_DIM_W CV1($data) CV5($resultKey)
0041 V30 = FETCH_DIM_W V28 T29
0042 ASSIGN_DIM V30 NEXT
0043 OP_DATA CV6($value)
0044 JMP 0024
0045 FE_FREE V18
0046 JMP 0012
0047 FE_FREE V12
0048 JMP 0007
0049 FE_FREE V10
0050 EXT_STMT
0051 RETURN CV1($data)
0052 EXT_STMT
0053 RETURN null
LIVE RANGES:
     10: 0007 - 0049 (loop)
     12: 0012 - 0047 (loop)
     18: 0024 - 0045 (loop)
     29: 0040 - 0041 (tmp/var)

PhpBench\Assertion\ParameterProvider::subjectData:
     ; (lines=16, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/ParameterProvider.php:56-63
     ; return  [] RANGE[0..0]
0000 CV0($subject) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 CV0($subject) string("getOutputTimeUnit")
0003 V1 = DO_FCALL
0004 T2 = INIT_ARRAY 3 V1 string("time_unit")
0005 INIT_METHOD_CALL 0 CV0($subject) string("getOutputTimePrecision")
0006 V3 = DO_FCALL
0007 T2 = ADD_ARRAY_ELEMENT V3 string("time_precision")
0008 INIT_METHOD_CALL 0 CV0($subject) string("getOutputMode")
0009 V4 = DO_FCALL
0010 T2 = ADD_ARRAY_ELEMENT V4 string("time_mode")
0011 VERIFY_RETURN_TYPE T2
0012 RETURN T2
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE
0015 RETURN null
LIVE RANGES:
     2: 0005 - 0012 (tmp/var)

$_main:
     ; (lines=10, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Util/VariantBuilder.php:1-67
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 EXT_STMT
0009 RETURN int(1)

PhpBench\Tests\Util\{closure}:
     ; (lines=10, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Util/VariantBuilder.php:43-47
     ; return  [] RANGE[0..0]
0000 CV0($builder) = RECV 1
0001 EXT_STMT
0002 V1 = FETCH_THIS
0003 V2 = FETCH_OBJ_W (dim write) V1 string("iterations")
0004 ASSIGN_DIM V2 NEXT
0005 OP_DATA CV0($builder)
0006 EXT_STMT
0007 RETURN CV0($builder)
0008 EXT_STMT
0009 RETURN null

PhpBench\Tests\Util\VariantBuilder::__construct:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Util/VariantBuilder.php:25-27
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN null

PhpBench\Tests\Util\VariantBuilder::create:
     ; (lines=8, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Util/VariantBuilder.php:29-32
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 0 (self) (exception)
0002 DO_FCALL
0003 VERIFY_RETURN_TYPE V0
0004 RETURN V0
0005 EXT_STMT
0006 VERIFY_RETURN_TYPE
0007 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (new)
     0: 0003 - 0004 (tmp/var)

PhpBench\Tests\Util\VariantBuilder::setRevs:
     ; (lines=11, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Util/VariantBuilder.php:34-39
     ; return  [] RANGE[0..0]
0000 CV0($revs) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("revs")
0003 OP_DATA CV0($revs)
0004 EXT_STMT
0005 T2 = FETCH_THIS
0006 VERIFY_RETURN_TYPE T2
0007 RETURN T2
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     2: 0006 - 0007 (tmp/var)

PhpBench\Tests\Util\VariantBuilder::iteration:
     ; (lines=14, args=0, vars=0, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Util/VariantBuilder.php:41-48
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = DECLARE_LAMBDA_FUNCTION string("")
0002 INIT_DYNAMIC_CALL 1 T0
0003 V1 = NEW 1 string("PhpBench\Tests\Util\IterationBuilder")
0004 V2 = FETCH_THIS
0005 SEND_VAR_EX V2 1
0006 DO_FCALL
0007 SEND_VAR_NO_REF_EX V1 1
0008 V4 = DO_FCALL
0009 VERIFY_RETURN_TYPE V4
0010 RETURN V4
0011 EXT_STMT
0012 VERIFY_RETURN_TYPE
0013 RETURN null
LIVE RANGES:
     1: 0004 - 0007 (new)
     4: 0009 - 0010 (tmp/var)

PhpBench\Tests\Util\VariantBuilder::build:
     ; (lines=51, args=0, vars=5, tmps=19)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Util/VariantBuilder.php:50-65
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V5 = NEW 2 string("PhpBench\Model\Suite")
0002 SEND_VAL_EX string("testSuite") 1
0003 V6 = NEW 0 string("DateTime")
0004 DO_FCALL
0005 SEND_VAR_NO_REF_EX V6 2
0006 DO_FCALL
0007 ASSIGN CV0($suite) V5
0008 EXT_STMT
0009 V10 = NEW 2 string("PhpBench\Model\Benchmark")
0010 SEND_VAR_EX CV0($suite) 1
0011 SEND_VAL_EX string("testBenchmark") 2
0012 DO_FCALL
0013 ASSIGN CV1($benchmark) V10
0014 EXT_STMT
0015 V13 = NEW 2 string("PhpBench\Model\Subject")
0016 SEND_VAR_EX CV1($benchmark) 1
0017 SEND_VAL_EX string("foo") 2
0018 DO_FCALL
0019 ASSIGN CV2($subject) V13
0020 EXT_STMT
0021 V16 = NEW 5 string("PhpBench\Model\Variant")
0022 SEND_VAR_EX CV2($subject) 1
0023 INIT_STATIC_METHOD_CALL 2 string("PhpBench\Model\ParameterSet") string("fromSerializedParameters")
0024 SEND_VAL_EX string("foo") 1
0025 SEND_VAL_EX array(...) 2
0026 V17 = DO_FCALL
0027 SEND_VAR_NO_REF_EX V17 2
0028 CHECK_FUNC_ARG 3
0029 V18 = FETCH_OBJ_FUNC_ARG (ref) THIS string("revs")
0030 SEND_FUNC_ARG V18 3
0031 SEND_VAL_EX int(1) 4
0032 SEND_VAL_EX array(...) 5
0033 DO_FCALL
0034 ASSIGN CV3($variant) V16
0035 EXT_STMT
0036 T21 = FETCH_OBJ_R THIS string("iterations")
0037 V22 = FE_RESET_R T21 0044
0038 FE_FETCH_R V22 CV4($iteration) 0044
0039 EXT_STMT
0040 INIT_METHOD_CALL 1 CV4($iteration) string("build")
0041 SEND_VAR_EX CV3($variant) 1
0042 DO_FCALL
0043 JMP 0038
0044 FE_FREE V22
0045 EXT_STMT
0046 VERIFY_RETURN_TYPE CV3($variant)
0047 RETURN CV3($variant)
0048 EXT_STMT
0049 VERIFY_RETURN_TYPE
0050 RETURN null
LIVE RANGES:
     5: 0002 - 0007 (new)
     6: 0004 - 0005 (new)
     10: 0010 - 0013 (new)
     13: 0016 - 0019 (new)
     16: 0022 - 0034 (new)
     22: 0038 - 0044 (loop)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Util/IterationBuilder.php:1-43
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 EXT_STMT
0006 RETURN int(1)

PhpBench\Tests\Util\IterationBuilder::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Util/IterationBuilder.php:21-24
     ; return  [] RANGE[0..0]
0000 CV0($variant) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("variant")
0003 OP_DATA CV0($variant)
0004 EXT_STMT
0005 RETURN null

PhpBench\Tests\Util\IterationBuilder::setResult:
     ; (lines=12, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Util/IterationBuilder.php:26-31
     ; return  [] RANGE[0..0]
0000 CV0($result) = RECV 1
0001 EXT_STMT
0002 V1 = FETCH_OBJ_W (dim write) THIS string("results")
0003 ASSIGN_DIM V1 NEXT
0004 OP_DATA CV0($result)
0005 EXT_STMT
0006 T3 = FETCH_THIS
0007 VERIFY_RETURN_TYPE T3
0008 RETURN T3
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     3: 0007 - 0008 (tmp/var)

PhpBench\Tests\Util\IterationBuilder::end:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Util/IterationBuilder.php:33-36
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("variant")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Tests\Util\IterationBuilder::build:
     ; (lines=12, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/tests/Util/IterationBuilder.php:38-41
     ; return  [] RANGE[0..0]
0000 CV0($variant) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 CV0($variant) string("createIteration")
0003 CHECK_FUNC_ARG 1
0004 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("results")
0005 SEND_FUNC_ARG V1 1
0006 V2 = DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0007 - 0008 (tmp/var)

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/TimeResult.php:1-104
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\model\result\timeresult")
0006 RETURN int(1)

PhpBench\Model\Result\TimeResult::__construct:
     ; (lines=34, args=2, vars=2, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/TimeResult.php:34-46
     ; return  [] RANGE[0..0]
0000 CV0($netTime) = RECV 1
0001 CV1($revs) = RECV_INIT 2 int(1)
0002 EXT_STMT
0003 T2 = IS_SMALLER CV0($netTime) int(0)
0004 JMPZ T2 0014
0005 EXT_STMT
0006 V3 = NEW 1 string("InvalidArgumentException")
0007 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\Result\sprintf")
0008 SEND_VAL_EX string("Net time cannot be less than zero, got "%s"") 1
0009 SEND_VAR_EX CV0($netTime) 2
0010 V4 = DO_FCALL
0011 SEND_VAR_NO_REF_EX V4 1
0012 DO_FCALL
0013 THROW V3
0014 EXT_STMT
0015 T6 = IS_SMALLER CV1($revs) int(1)
0016 JMPZ T6 0026
0017 EXT_STMT
0018 V7 = NEW 1 string("InvalidArgumentException")
0019 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\Result\sprintf")
0020 SEND_VAL_EX string("Revs cannot be less than zero, got "%s"") 1
0021 SEND_VAR_EX CV1($revs) 2
0022 V8 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V8 1
0024 DO_FCALL
0025 THROW V7
0026 EXT_STMT
0027 ASSIGN_OBJ THIS string("netTime")
0028 OP_DATA CV0($netTime)
0029 EXT_STMT
0030 ASSIGN_OBJ THIS string("revs")
0031 OP_DATA CV1($revs)
0032 EXT_STMT
0033 RETURN null
LIVE RANGES:
     3: 0007 - 0013 (new)
     7: 0019 - 0025 (new)

PhpBench\Model\Result\TimeResult::fromArray:
     ; (lines=22, args=1, vars=1, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/TimeResult.php:48-54
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 2 (self) (exception)
0003 T2 = FETCH_DIM_R CV0($values) string("net")
0004 T3 = CAST (long) T2
0005 SEND_VAL_EX T3 1
0006 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\Result\array_key_exists")
0007 SEND_VAL_EX string("revs") 1
0008 SEND_VAR_EX CV0($values) 2
0009 V4 = DO_FCALL
0010 JMPZ V4 0014
0011 T5 = FETCH_DIM_R CV0($values) string("revs")
0012 T6 = QM_ASSIGN T5
0013 JMP 0015
0014 T6 = QM_ASSIGN int(1)
0015 SEND_VAL_EX T6 2
0016 DO_FCALL
0017 VERIFY_RETURN_TYPE V1
0018 RETURN V1
0019 EXT_STMT
0020 VERIFY_RETURN_TYPE
0021 RETURN null
LIVE RANGES:
     1: 0003 - 0017 (new)
     1: 0017 - 0018 (tmp/var)

PhpBench\Model\Result\TimeResult::getNet:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/TimeResult.php:59-62
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("netTime")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Result\TimeResult::getRevTime:
     ; (lines=19, args=1, vars=1, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/TimeResult.php:72-82
     ; return  [] RANGE[0..0]
0000 CV0($revs) = RECV 1
0001 EXT_STMT
0002 T1 = IS_SMALLER_OR_EQUAL CV0($revs) int(0)
0003 JMPZ T1 0013
0004 EXT_STMT
0005 V2 = NEW 1 string("InvalidArgumentException")
0006 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\Result\sprintf")
0007 SEND_VAL_EX string("Revolutions must be more than 0, got %s") 1
0008 SEND_VAR_EX CV0($revs) 2
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 1
0011 DO_FCALL
0012 THROW V2
0013 EXT_STMT
0014 T5 = FETCH_OBJ_R THIS string("netTime")
0015 T6 = DIV T5 CV0($revs)
0016 RETURN T6
0017 EXT_STMT
0018 RETURN null
LIVE RANGES:
     2: 0006 - 0012 (new)

PhpBench\Model\Result\TimeResult::getMetrics:
     ; (lines=14, args=0, vars=0, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/TimeResult.php:87-94
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("netTime")
0002 T1 = INIT_ARRAY 3 T0 string("net")
0003 T2 = FETCH_OBJ_R THIS string("revs")
0004 T1 = ADD_ARRAY_ELEMENT T2 string("revs")
0005 T3 = FETCH_OBJ_R THIS string("netTime")
0006 T4 = FETCH_OBJ_R THIS string("revs")
0007 T5 = DIV T3 T4
0008 T1 = ADD_ARRAY_ELEMENT T5 string("avg")
0009 VERIFY_RETURN_TYPE T1
0010 RETURN T1
0011 EXT_STMT
0012 VERIFY_RETURN_TYPE
0013 RETURN null
LIVE RANGES:
     1: 0003 - 0010 (tmp/var)
     3: 0006 - 0007 (tmp/var)

PhpBench\Model\Result\TimeResult::getKey:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/TimeResult.php:99-102
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN string("time")
0002 EXT_STMT
0003 VERIFY_RETURN_TYPE
0004 RETURN null

$_main:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ResultInterface.php:1-59
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN int(1)

PhpBench\Model\ResultInterface::fromArray:
     ; (lines=4, args=1, vars=1, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ResultInterface.php:28-28
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 EXT_STMT
0002 VERIFY_RETURN_TYPE
0003 RETURN null

PhpBench\Model\ResultInterface::getMetrics:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ResultInterface.php:51-51
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN null

PhpBench\Model\ResultInterface::getKey:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ResultInterface.php:57-57
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 VERIFY_RETURN_TYPE
0002 RETURN null

$_main:
     ; (lines=7, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/MemoryResult.php:1-99
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 EXT_STMT
0005 DECLARE_CLASS string("phpbench\model\result\memoryresult")
0006 RETURN int(1)

PhpBench\Model\Result\MemoryResult::fromArray:
     ; (lines=18, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/MemoryResult.php:29-36
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 3 (self) (exception)
0003 T2 = FETCH_DIM_R CV0($values) string("peak")
0004 T3 = CAST (long) T2
0005 SEND_VAL_EX T3 1
0006 T4 = FETCH_DIM_R CV0($values) string("real")
0007 T5 = CAST (long) T4
0008 SEND_VAL_EX T5 2
0009 T6 = FETCH_DIM_R CV0($values) string("final")
0010 T7 = CAST (long) T6
0011 SEND_VAL_EX T7 3
0012 DO_FCALL
0013 VERIFY_RETURN_TYPE V1
0014 RETURN V1
0015 EXT_STMT
0016 VERIFY_RETURN_TYPE
0017 RETURN null
LIVE RANGES:
     1: 0003 - 0013 (new)
     1: 0013 - 0014 (tmp/var)

PhpBench\Model\Result\MemoryResult::__construct:
     ; (lines=14, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/MemoryResult.php:40-45
     ; return  [] RANGE[0..0]
0000 CV0($peak) = RECV 1
0001 CV1($real) = RECV 2
0002 CV2($final) = RECV 3
0003 EXT_STMT
0004 ASSIGN_OBJ THIS string("peak")
0005 OP_DATA CV0($peak)
0006 EXT_STMT
0007 ASSIGN_OBJ THIS string("real")
0008 OP_DATA CV1($real)
0009 EXT_STMT
0010 ASSIGN_OBJ THIS string("final")
0011 OP_DATA CV2($final)
0012 EXT_STMT
0013 RETURN null

PhpBench\Model\Result\MemoryResult::getPeak:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/MemoryResult.php:53-56
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("peak")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Result\MemoryResult::getReal:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/MemoryResult.php:64-67
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("real")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Result\MemoryResult::getFinal:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/MemoryResult.php:74-77
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("final")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Result\MemoryResult::getMetrics:
     ; (lines=12, args=0, vars=0, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/MemoryResult.php:82-89
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("peak")
0002 T1 = INIT_ARRAY 3 T0 string("peak")
0003 T2 = FETCH_OBJ_R THIS string("real")
0004 T1 = ADD_ARRAY_ELEMENT T2 string("real")
0005 T3 = FETCH_OBJ_R THIS string("final")
0006 T1 = ADD_ARRAY_ELEMENT T3 string("final")
0007 VERIFY_RETURN_TYPE T1
0008 RETURN T1
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     1: 0003 - 0008 (tmp/var)

PhpBench\Model\Result\MemoryResult::getKey:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Result/MemoryResult.php:94-97
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN string("mem")
0002 EXT_STMT
0003 VERIFY_RETURN_TYPE
0004 RETURN null

$_main:
     ; (lines=14, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:1-294
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 EXT_STMT
0012 DECLARE_CLASS string("phpbench\model\suite")
0013 RETURN int(1)

PhpBench\Model\Suite::__construct:
     ; (lines=33, args=6, vars=6, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:44-58
     ; return  [] RANGE[0..0]
0000 CV0($tag) = RECV 1
0001 CV1($date) = RECV 2
0002 CV2($configPath) = RECV_INIT 3 null
0003 CV3($benchmarks) = RECV_INIT 4 array(...)
0004 CV4($envInformations) = RECV_INIT 5 array(...)
0005 CV5($uuid) = RECV_INIT 6 null
0006 EXT_STMT
0007 JMPZ CV0($tag) 0013
0008 V7 = NEW 1 string("PhpBench\Model\Tag")
0009 SEND_VAR_EX CV0($tag) 1
0010 DO_FCALL
0011 T9 = QM_ASSIGN V7
0012 JMP 0014
0013 T9 = QM_ASSIGN null
0014 ASSIGN_OBJ THIS string("tag")
0015 OP_DATA T9
0016 EXT_STMT
0017 ASSIGN_OBJ THIS string("date")
0018 OP_DATA CV1($date)
0019 EXT_STMT
0020 ASSIGN_OBJ THIS string("configPath")
0021 OP_DATA CV2($configPath)
0022 EXT_STMT
0023 ASSIGN_OBJ THIS string("envInformations")
0024 OP_DATA CV4($envInformations)
0025 EXT_STMT
0026 ASSIGN_OBJ THIS string("benchmarks")
0027 OP_DATA CV3($benchmarks)
0028 EXT_STMT
0029 ASSIGN_OBJ THIS string("uuid")
0030 OP_DATA CV5($uuid)
0031 EXT_STMT
0032 RETURN null
LIVE RANGES:
     7: 0009 - 0011 (new)

PhpBench\Model\Suite::getBenchmarks:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:63-66
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("benchmarks")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Suite::getBenchmark:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:68-71
     ; return  [] RANGE[0..0]
0000 CV0($class) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("benchmarks")
0003 T2 = FETCH_DIM_IS T1 CV0($class)
0004 T3 = COALESCE T2 0006
0005 T3 = QM_ASSIGN null
0006 VERIFY_RETURN_TYPE T3
0007 RETURN T3
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     3: 0006 - 0007 (tmp/var)

PhpBench\Model\Suite::createBenchmark:
     ; (lines=18, args=1, vars=2, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:77-83
     ; return  [] RANGE[0..0]
0000 CV0($class) = RECV 1
0001 EXT_STMT
0002 V2 = NEW 2 string("PhpBench\Model\Benchmark")
0003 V3 = FETCH_THIS
0004 SEND_VAR_EX V3 1
0005 SEND_VAR_EX CV0($class) 2
0006 DO_FCALL
0007 ASSIGN CV1($benchmark) V2
0008 EXT_STMT
0009 V6 = FETCH_OBJ_W (dim write) THIS string("benchmarks")
0010 ASSIGN_DIM V6 CV0($class)
0011 OP_DATA CV1($benchmark)
0012 EXT_STMT
0013 VERIFY_RETURN_TYPE CV1($benchmark)
0014 RETURN CV1($benchmark)
0015 EXT_STMT
0016 VERIFY_RETURN_TYPE
0017 RETURN null
LIVE RANGES:
     2: 0003 - 0007 (new)

PhpBench\Model\Suite::getIterator:
     ; (lines=11, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:88-91
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 1 string("ArrayIterator")
0002 CHECK_FUNC_ARG 1
0003 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("benchmarks")
0004 SEND_FUNC_ARG V1 1
0005 DO_FCALL
0006 VERIFY_RETURN_TYPE V0
0007 RETURN V0
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     0: 0002 - 0006 (new)
     0: 0006 - 0007 (tmp/var)

PhpBench\Model\Suite::getTag:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:93-96
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("tag")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Suite::getDate:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:98-101
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("date")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Suite::getConfigPath:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:103-106
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("configPath")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Suite::getSummary:
     ; (lines=10, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:108-111
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 1 string("PhpBench\Model\Summary")
0002 V1 = FETCH_THIS
0003 SEND_VAR_EX V1 1
0004 DO_FCALL
0005 VERIFY_RETURN_TYPE V0
0006 RETURN V0
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     0: 0002 - 0005 (new)
     0: 0005 - 0006 (tmp/var)

PhpBench\Model\Suite::getIterations:
     ; (lines=23, args=0, vars=3, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:113-124
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 ASSIGN CV0($iterations) array(...)
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 THIS string("getVariants")
0004 V4 = DO_FCALL
0005 V5 = FE_RESET_R V4 0016
0006 FE_FETCH_R V5 CV1($variant) 0016
0007 EXT_STMT
0008 V6 = FE_RESET_R CV1($variant) 0014
0009 FE_FETCH_R V6 CV2($iteration) 0014
0010 EXT_STMT
0011 ASSIGN_DIM CV0($iterations) NEXT
0012 OP_DATA CV2($iteration)
0013 JMP 0009
0014 FE_FREE V6
0015 JMP 0006
0016 FE_FREE V5
0017 EXT_STMT
0018 VERIFY_RETURN_TYPE CV0($iterations)
0019 RETURN CV0($iterations)
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     5: 0006 - 0016 (loop)
     6: 0009 - 0014 (loop)

PhpBench\Model\Suite::getSubjects:
     ; (lines=25, args=0, vars=3, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:129-140
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 ASSIGN CV0($subjects) array(...)
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 THIS string("getBenchmarks")
0004 V4 = DO_FCALL
0005 V5 = FE_RESET_R V4 0018
0006 FE_FETCH_R V5 CV1($benchmark) 0018
0007 EXT_STMT
0008 INIT_METHOD_CALL 0 CV1($benchmark) string("getSubjects")
0009 V6 = DO_FCALL
0010 V7 = FE_RESET_R V6 0016
0011 FE_FETCH_R V7 CV2($subject) 0016
0012 EXT_STMT
0013 ASSIGN_DIM CV0($subjects) NEXT
0014 OP_DATA CV2($subject)
0015 JMP 0011
0016 FE_FREE V7
0017 JMP 0006
0018 FE_FREE V5
0019 EXT_STMT
0020 VERIFY_RETURN_TYPE CV0($subjects)
0021 RETURN CV0($subjects)
0022 EXT_STMT
0023 VERIFY_RETURN_TYPE
0024 RETURN null
LIVE RANGES:
     5: 0006 - 0018 (loop)
     7: 0011 - 0016 (loop)

PhpBench\Model\Suite::getVariants:
     ; (lines=25, args=0, vars=3, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:145-156
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 ASSIGN CV0($variants) array(...)
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 THIS string("getSubjects")
0004 V4 = DO_FCALL
0005 V5 = FE_RESET_R V4 0018
0006 FE_FETCH_R V5 CV1($subject) 0018
0007 EXT_STMT
0008 INIT_METHOD_CALL 0 CV1($subject) string("getVariants")
0009 V6 = DO_FCALL
0010 V7 = FE_RESET_R V6 0016
0011 FE_FETCH_R V7 CV2($variant) 0016
0012 EXT_STMT
0013 ASSIGN_DIM CV0($variants) NEXT
0014 OP_DATA CV2($variant)
0015 JMP 0011
0016 FE_FREE V7
0017 JMP 0006
0018 FE_FREE V5
0019 EXT_STMT
0020 VERIFY_RETURN_TYPE CV0($variants)
0021 RETURN CV0($variants)
0022 EXT_STMT
0023 VERIFY_RETURN_TYPE
0024 RETURN null
LIVE RANGES:
     5: 0006 - 0018 (loop)
     7: 0011 - 0016 (loop)

PhpBench\Model\Suite::getErrorStacks:
     ; (lines=27, args=0, vars=2, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:158-171
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 ASSIGN CV0($errorStacks) array(...)
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 THIS string("getVariants")
0004 V3 = DO_FCALL
0005 V4 = FE_RESET_R V3 0020
0006 FE_FETCH_R V4 CV1($variant) 0020
0007 EXT_STMT
0008 INIT_METHOD_CALL 0 CV1($variant) string("hasErrorStack")
0009 V5 = DO_FCALL
0010 T6 = TYPE_CHECK (false) V5
0011 JMPZ T6 0014
0012 EXT_STMT
0013 JMP 0006
0014 EXT_STMT
0015 INIT_METHOD_CALL 0 CV1($variant) string("getErrorStack")
0016 V8 = DO_FCALL
0017 ASSIGN_DIM CV0($errorStacks) NEXT
0018 OP_DATA V8
0019 JMP 0006
0020 FE_FREE V4
0021 EXT_STMT
0022 VERIFY_RETURN_TYPE CV0($errorStacks)
0023 RETURN CV0($errorStacks)
0024 EXT_STMT
0025 VERIFY_RETURN_TYPE
0026 RETURN null
LIVE RANGES:
     4: 0006 - 0020 (loop)

PhpBench\Model\Suite::getFailures:
     ; (lines=33, args=0, vars=2, tmps=10)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:176-190
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 ASSIGN CV0($failures) array(...)
0002 EXT_STMT
0003 INIT_METHOD_CALL 0 THIS string("getVariants")
0004 V3 = DO_FCALL
0005 V4 = FE_RESET_R V3 0026
0006 FE_FETCH_R V4 CV1($variant) 0026
0007 EXT_STMT
0008 INIT_METHOD_CALL 0 CV1($variant) string("getAssertionResults")
0009 V5 = DO_FCALL
0010 INIT_METHOD_CALL 0 V5 string("failures")
0011 V6 = DO_FCALL
0012 INIT_METHOD_CALL 0 V6 string("count")
0013 V7 = DO_FCALL
0014 T8 = IS_IDENTICAL V7 int(0)
0015 JMPZ T8 0018
0016 EXT_STMT
0017 JMP 0006
0018 EXT_STMT
0019 INIT_METHOD_CALL 0 CV1($variant) string("getAssertionResults")
0020 V10 = DO_FCALL
0021 INIT_METHOD_CALL 0 V10 string("failures")
0022 V11 = DO_FCALL
0023 ASSIGN_DIM CV0($failures) NEXT
0024 OP_DATA V11
0025 JMP 0006
0026 FE_FREE V4
0027 EXT_STMT
0028 VERIFY_RETURN_TYPE CV0($failures)
0029 RETURN CV0($failures)
0030 EXT_STMT
0031 VERIFY_RETURN_TYPE
0032 RETURN null
LIVE RANGES:
     4: 0006 - 0026 (loop)

PhpBench\Model\Suite::setEnvInformations:
     ; (lines=12, args=1, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:195-200
     ; return  [] RANGE[0..0]
0000 CV0($envInformations) = RECV 1
0001 EXT_STMT
0002 V2 = FE_RESET_R CV0($envInformations) 0009
0003 FE_FETCH_R V2 CV1($envInformation) 0009
0004 EXT_STMT
0005 INIT_METHOD_CALL 1 THIS string("addEnvInformation")
0006 SEND_VAR_EX CV1($envInformation) 1
0007 DO_FCALL
0008 JMP 0003
0009 FE_FREE V2
0010 EXT_STMT
0011 RETURN null
LIVE RANGES:
     2: 0003 - 0009 (loop)

PhpBench\Model\Suite::addEnvInformation:
     ; (lines=9, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:202-205
     ; return  [] RANGE[0..0]
0000 CV0($information) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 CV0($information) string("getName")
0003 V2 = DO_FCALL
0004 V1 = FETCH_OBJ_W (dim write) THIS string("envInformations")
0005 ASSIGN_DIM V1 V2
0006 OP_DATA CV0($information)
0007 EXT_STMT
0008 RETURN null
LIVE RANGES:
     2: 0004 - 0005 (tmp/var)

PhpBench\Model\Suite::getEnvInformations:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:210-213
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("envInformations")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Suite::getUuid:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:222-225
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("uuid")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Suite::generateUuid:
     ; (lines=39, args=0, vars=1, tmps=15)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:234-242
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\serialize")
0002 CHECK_FUNC_ARG 1
0003 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("envInformations")
0004 SEND_FUNC_ARG V1 1
0005 V2 = DO_FCALL
0006 ASSIGN CV0($serialized) V2
0007 EXT_STMT
0008 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\dechex")
0009 INIT_METHOD_CALL 0 THIS string("getDate")
0010 V5 = DO_FCALL
0011 INIT_METHOD_CALL 1 V5 string("format")
0012 SEND_VAL_EX string("Ymd") 1
0013 V6 = DO_FCALL
0014 T7 = CAST (long) V6
0015 SEND_VAL_EX T7 1
0016 V8 = DO_FCALL
0017 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Model\substr")
0018 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\sha1")
0019 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\implode")
0020 INIT_NS_FCALL_BY_NAME 0 string("PhpBench\Model\microtime")
0021 V9 = DO_FCALL
0022 T10 = INIT_ARRAY 3 (packed) V9 NEXT
0023 T10 = ADD_ARRAY_ELEMENT CV0($serialized) NEXT
0024 T11 = FETCH_OBJ_R THIS string("configPath")
0025 T10 = ADD_ARRAY_ELEMENT T11 NEXT
0026 SEND_VAL_EX T10 1
0027 V12 = DO_FCALL
0028 SEND_VAR_NO_REF_EX V12 1
0029 V13 = DO_FCALL
0030 SEND_VAR_NO_REF_EX V13 1
0031 SEND_VAL_EX int(0) 2
0032 SEND_VAL_EX int(-7) 3
0033 V14 = DO_FCALL
0034 T15 = CONCAT V8 V14
0035 ASSIGN_OBJ THIS string("uuid")
0036 OP_DATA T15
0037 EXT_STMT
0038 RETURN null
LIVE RANGES:
     8: 0017 - 0034 (tmp/var)
     10: 0023 - 0026 (tmp/var)

PhpBench\Model\Suite::mergeBaselines:
     ; (lines=54, args=1, vars=6, tmps=17)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:244-266
     ; return  [] RANGE[0..0]
0000 CV0($suiteCollection) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 CV0($suiteCollection) string("getSuites")
0003 V6 = DO_FCALL
0004 V7 = FE_RESET_R V6 0046
0005 FE_FETCH_R V7 CV1($baselineSuite) 0046
0006 EXT_STMT
0007 INIT_METHOD_CALL 0 THIS string("getVariants")
0008 V8 = DO_FCALL
0009 V9 = FE_RESET_R V8 0044
0010 FE_FETCH_R V9 CV2($variant) 0044
0011 EXT_STMT
0012 INIT_METHOD_CALL 0 CV2($variant) string("getSubject")
0013 V10 = DO_FCALL
0014 ASSIGN CV3($subject) V10
0015 EXT_STMT
0016 INIT_METHOD_CALL 0 CV3($subject) string("getBenchmark")
0017 V12 = DO_FCALL
0018 ASSIGN CV4($benchmark) V12
0019 EXT_STMT
0020 INIT_METHOD_CALL 3 CV1($baselineSuite) string("findVariant")
0021 INIT_METHOD_CALL 0 CV4($benchmark) string("getClass")
0022 V14 = DO_FCALL
0023 SEND_VAR_NO_REF_EX V14 1
0024 INIT_METHOD_CALL 0 CV3($subject) string("getName")
0025 V15 = DO_FCALL
0026 SEND_VAR_NO_REF_EX V15 2
0027 INIT_METHOD_CALL 0 CV2($variant) string("getParameterSet")
0028 V16 = DO_FCALL
0029 INIT_METHOD_CALL 0 V16 string("getName")
0030 V17 = DO_FCALL
0031 SEND_VAR_NO_REF_EX V17 3
0032 V18 = DO_FCALL
0033 ASSIGN CV5($baselineVariant) V18
0034 EXT_STMT
0035 T20 = BOOL_NOT CV5($baselineVariant)
0036 JMPZ T20 0039
0037 EXT_STMT
0038 JMP 0010
0039 EXT_STMT
0040 INIT_METHOD_CALL 1 CV2($variant) string("attachBaseline")
0041 SEND_VAR_EX CV5($baselineVariant) 1
0042 DO_FCALL
0043 JMP 0010
0044 FE_FREE V9
0045 JMP 0005
0046 FE_FREE V7
0047 EXT_STMT
0048 T22 = FETCH_THIS
0049 VERIFY_RETURN_TYPE T22
0050 RETURN T22
0051 EXT_STMT
0052 VERIFY_RETURN_TYPE
0053 RETURN null
LIVE RANGES:
     7: 0005 - 0046 (loop)
     9: 0010 - 0044 (loop)
     22: 0049 - 0050 (tmp/var)

PhpBench\Model\Suite::findVariant:
     ; (lines=30, args=3, vars=5, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:268-279
     ; return  [] RANGE[0..0]
0000 CV0($benchmarkClass) = RECV 1
0001 CV1($subjectName) = RECV 2
0002 CV2($variantName) = RECV 3
0003 EXT_STMT
0004 INIT_METHOD_CALL 1 THIS string("getBenchmark")
0005 SEND_VAR_EX CV0($benchmarkClass) 1
0006 V5 = DO_FCALL
0007 T6 = ASSIGN CV3($benchmark) V5
0008 T7 = BOOL_NOT T6
0009 JMPZ T7 0012
0010 EXT_STMT
0011 RETURN null
0012 EXT_STMT
0013 INIT_METHOD_CALL 1 CV3($benchmark) string("getSubject")
0014 SEND_VAR_EX CV1($subjectName) 1
0015 V8 = DO_FCALL
0016 T9 = ASSIGN CV4($subject) V8
0017 T10 = BOOL_NOT T9
0018 JMPZ T10 0021
0019 EXT_STMT
0020 RETURN null
0021 EXT_STMT
0022 INIT_METHOD_CALL 1 CV4($subject) string("getVariant")
0023 SEND_VAR_EX CV2($variantName) 1
0024 V11 = DO_FCALL
0025 VERIFY_RETURN_TYPE V11
0026 RETURN V11
0027 EXT_STMT
0028 VERIFY_RETURN_TYPE
0029 RETURN null
LIVE RANGES:
     11: 0025 - 0026 (tmp/var)

PhpBench\Model\Suite::getBaseline:
     ; (lines=36, args=0, vars=2, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Suite.php:281-292
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_METHOD_CALL 0 THIS string("getSubjects")
0002 V2 = DO_FCALL
0003 V3 = FE_RESET_R V2 0030
0004 FE_FETCH_R V3 CV0($subject) 0030
0005 EXT_STMT
0006 INIT_METHOD_CALL 0 CV0($subject) string("getVariants")
0007 V4 = DO_FCALL
0008 V5 = FE_RESET_R V4 0028
0009 FE_FETCH_R V5 CV1($variant) 0028
0010 EXT_STMT
0011 INIT_METHOD_CALL 0 CV1($variant) string("getBaseline")
0012 V6 = DO_FCALL
0013 JMPZ V6 0027
0014 EXT_STMT
0015 INIT_METHOD_CALL 0 CV1($variant) string("getBaseline")
0016 V7 = DO_FCALL
0017 INIT_METHOD_CALL 0 V7 string("getSubject")
0018 V8 = DO_FCALL
0019 INIT_METHOD_CALL 0 V8 string("getBenchmark")
0020 V9 = DO_FCALL
0021 INIT_METHOD_CALL 0 V9 string("getSuite")
0022 V10 = DO_FCALL
0023 VERIFY_RETURN_TYPE V10
0024 FE_FREE V5
0025 FE_FREE V3
0026 RETURN V10
0027 JMP 0009
0028 FE_FREE V5
0029 JMP 0004
0030 FE_FREE V3
0031 EXT_STMT
0032 RETURN null
0033 EXT_STMT
0034 VERIFY_RETURN_TYPE
0035 RETURN null
LIVE RANGES:
     3: 0004 - 0030 (loop)
     5: 0009 - 0028 (loop)
     10: 0023 - 0026 (tmp/var)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Tag.php:1-42
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 DECLARE_CLASS string("phpbench\model\tag")
0004 RETURN int(1)

PhpBench\Model\Tag::__construct:
     ; (lines=30, args=1, vars=1, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Tag.php:26-35
     ; return  [] RANGE[0..0]
0000 CV0($tag) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\preg_match")
0003 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\sprintf")
0004 SEND_VAL_EX string("/^%s$/") 1
0005 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("REGEX_PATTERN")
0006 SEND_VAL_EX T1 2
0007 V2 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V2 1
0009 SEND_VAR_EX CV0($tag) 2
0010 V3 = DO_FCALL
0011 T4 = BOOL_NOT V3
0012 JMPZ T4 0022
0013 EXT_STMT
0014 V5 = NEW 1 string("PhpBench\Storage\Exception\InvalidTagException")
0015 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\sprintf")
0016 SEND_VAL_EX string("Tag must be non-empty string of alphanumeric characters and _, got "%s"") 1
0017 SEND_VAR_EX CV0($tag) 2
0018 V6 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V6 1
0020 DO_FCALL
0021 THROW V5
0022 EXT_STMT
0023 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\strtolower")
0024 SEND_VAR_EX CV0($tag) 1
0025 V9 = DO_FCALL
0026 ASSIGN_OBJ THIS string("tag")
0027 OP_DATA V9
0028 EXT_STMT
0029 RETURN null
LIVE RANGES:
     5: 0015 - 0021 (new)

PhpBench\Model\Tag::__toString:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Tag.php:37-40
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("tag")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=8, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Benchmark.php:1-124
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 EXT_STMT
0006 DECLARE_CLASS string("phpbench\model\benchmark")
0007 RETURN int(1)

PhpBench\Model\Benchmark::__construct:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Benchmark.php:42-46
     ; return  [] RANGE[0..0]
0000 CV0($suite) = RECV 1
0001 CV1($class) = RECV 2
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("suite")
0004 OP_DATA CV0($suite)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("class")
0007 OP_DATA CV1($class)
0008 EXT_STMT
0009 RETURN null

PhpBench\Model\Benchmark::createSubjectFromMetadataAndExecutor:
     ; (lines=71, args=2, vars=3, tmps=24)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Benchmark.php:48-63
     ; return  [] RANGE[0..0]
0000 CV0($metadata) = RECV 1
0001 CV1($executor) = RECV 2
0002 EXT_STMT
0003 V3 = NEW 2 string("PhpBench\Model\Subject")
0004 V4 = FETCH_THIS
0005 SEND_VAR_EX V4 1
0006 INIT_METHOD_CALL 0 CV0($metadata) string("getName")
0007 V5 = DO_FCALL
0008 SEND_VAR_NO_REF_EX V5 2
0009 DO_FCALL
0010 ASSIGN CV2($subject) V3
0011 EXT_STMT
0012 INIT_METHOD_CALL 1 CV2($subject) string("setGroups")
0013 INIT_METHOD_CALL 0 CV0($metadata) string("getGroups")
0014 V8 = DO_FCALL
0015 T9 = JMP_SET V8 0017
0016 T9 = QM_ASSIGN array(...)
0017 SEND_VAL_EX T9 1
0018 DO_FCALL
0019 EXT_STMT
0020 INIT_METHOD_CALL 1 CV2($subject) string("setSleep")
0021 INIT_METHOD_CALL 0 CV0($metadata) string("getSleep")
0022 V11 = DO_FCALL
0023 T12 = JMP_SET V11 0025
0024 T12 = QM_ASSIGN int(0)
0025 SEND_VAL_EX T12 1
0026 DO_FCALL
0027 EXT_STMT
0028 INIT_METHOD_CALL 1 CV2($subject) string("setRetryThreshold")
0029 INIT_METHOD_CALL 0 CV0($metadata) string("getRetryThreshold")
0030 V14 = DO_FCALL
0031 SEND_VAR_NO_REF_EX V14 1
0032 DO_FCALL
0033 EXT_STMT
0034 INIT_METHOD_CALL 1 CV2($subject) string("setOutputTimeUnit")
0035 INIT_METHOD_CALL 0 CV0($metadata) string("getOutputTimeUnit")
0036 V16 = DO_FCALL
0037 SEND_VAR_NO_REF_EX V16 1
0038 DO_FCALL
0039 EXT_STMT
0040 INIT_METHOD_CALL 1 CV2($subject) string("setOutputTimePrecision")
0041 INIT_METHOD_CALL 0 CV0($metadata) string("getOutputTimePrecision")
0042 V18 = DO_FCALL
0043 SEND_VAR_NO_REF_EX V18 1
0044 DO_FCALL
0045 EXT_STMT
0046 INIT_METHOD_CALL 1 CV2($subject) string("setOutputMode")
0047 INIT_METHOD_CALL 0 CV0($metadata) string("getOutputMode")
0048 V20 = DO_FCALL
0049 SEND_VAR_NO_REF_EX V20 1
0050 DO_FCALL
0051 EXT_STMT
0052 INIT_METHOD_CALL 1 CV2($subject) string("setExecutor")
0053 SEND_VAR_EX CV1($executor) 1
0054 DO_FCALL
0055 EXT_STMT
0056 INIT_METHOD_CALL 1 CV2($subject) string("setFormat")
0057 INIT_METHOD_CALL 0 CV0($metadata) string("getFormat")
0058 V23 = DO_FCALL
0059 SEND_VAR_NO_REF_EX V23 1
0060 DO_FCALL
0061 EXT_STMT
0062 V25 = FETCH_OBJ_W (dim write) THIS string("subjects")
0063 ASSIGN_DIM V25 NEXT
0064 OP_DATA CV2($subject)
0065 EXT_STMT
0066 VERIFY_RETURN_TYPE CV2($subject)
0067 RETURN CV2($subject)
0068 EXT_STMT
0069 VERIFY_RETURN_TYPE
0070 RETURN null
LIVE RANGES:
     3: 0004 - 0010 (new)

PhpBench\Model\Benchmark::createSubject:
     ; (lines=18, args=1, vars=2, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Benchmark.php:69-75
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 EXT_STMT
0002 V2 = NEW 2 string("PhpBench\Model\Subject")
0003 V3 = FETCH_THIS
0004 SEND_VAR_EX V3 1
0005 SEND_VAR_EX CV0($name) 2
0006 DO_FCALL
0007 ASSIGN CV1($subject) V2
0008 EXT_STMT
0009 V6 = FETCH_OBJ_W (dim write) THIS string("subjects")
0010 ASSIGN_DIM V6 CV0($name)
0011 OP_DATA CV1($subject)
0012 EXT_STMT
0013 VERIFY_RETURN_TYPE CV1($subject)
0014 RETURN CV1($subject)
0015 EXT_STMT
0016 VERIFY_RETURN_TYPE
0017 RETURN null
LIVE RANGES:
     2: 0003 - 0007 (new)

PhpBench\Model\Benchmark::getSubjects:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Benchmark.php:82-85
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("subjects")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Benchmark::getClass:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Benchmark.php:90-93
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("class")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Benchmark::getName:
     ; (lines=21, args=0, vars=1, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Benchmark.php:95-101
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\explode")
0002 SEND_VAL_EX string("\") 1
0003 CHECK_FUNC_ARG 2
0004 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("class")
0005 SEND_FUNC_ARG V1 2
0006 V2 = DO_FCALL
0007 ASSIGN CV0($parts) V2
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\end")
0010 SEND_VAR_EX CV0($parts) 1
0011 DO_FCALL
0012 EXT_STMT
0013 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\current")
0014 SEND_VAR_EX CV0($parts) 1
0015 V5 = DO_FCALL
0016 VERIFY_RETURN_TYPE V5
0017 RETURN V5
0018 EXT_STMT
0019 VERIFY_RETURN_TYPE
0020 RETURN null
LIVE RANGES:
     5: 0016 - 0017 (tmp/var)

PhpBench\Model\Benchmark::getSuite:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Benchmark.php:106-109
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("suite")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Benchmark::getIterator:
     ; (lines=11, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Benchmark.php:114-117
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 1 string("ArrayIterator")
0002 CHECK_FUNC_ARG 1
0003 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("subjects")
0004 SEND_FUNC_ARG V1 1
0005 DO_FCALL
0006 VERIFY_RETURN_TYPE V0
0007 RETURN V0
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     0: 0002 - 0006 (new)
     0: 0006 - 0007 (tmp/var)

PhpBench\Model\Benchmark::getSubject:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Benchmark.php:119-122
     ; return  [] RANGE[0..0]
0000 CV0($subjectName) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("subjects")
0003 T2 = FETCH_DIM_IS T1 CV0($subjectName)
0004 T3 = COALESCE T2 0006
0005 T3 = QM_ASSIGN null
0006 VERIFY_RETURN_TYPE T3
0007 RETURN T3
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     3: 0006 - 0007 (tmp/var)

$_main:
     ; (lines=15, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:1-239
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 NOP
0012 NOP
0013 EXT_STMT
0014 RETURN int(1)

PhpBench\Model\{closure}:
     ; (lines=7, args=1, vars=2, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:219-221
     ; return  [] RANGE[0..0]
0000 CV0($variant) = RECV 1
0001 BIND_STATIC CV1($target)
0002 EXT_STMT
0003 T2 = IS_NOT_IDENTICAL CV0($variant) CV1($target)
0004 RETURN T2
0005 EXT_STMT
0006 RETURN null

PhpBench\Model\Subject::__construct:
     ; (lines=18, args=2, vars=2, tmps=5)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:87-93
     ; return  [] RANGE[0..0]
0000 CV0($benchmark) = RECV 1
0001 CV1($name) = RECV 2
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("benchmark")
0004 OP_DATA CV0($benchmark)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("name")
0007 OP_DATA CV1($name)
0008 EXT_STMT
0009 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\count")
0010 INIT_METHOD_CALL 0 CV0($benchmark) string("getSubjects")
0011 V5 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V5 1
0013 V6 = DO_FCALL
0014 ASSIGN_OBJ THIS string("index")
0015 OP_DATA V6
0016 EXT_STMT
0017 RETURN null

PhpBench\Model\Subject::getName:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:98-101
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("name")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Subject::createVariant:
     ; (lines=26, args=4, vars=5, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:107-119
     ; return  [] RANGE[0..0]
0000 CV0($parameterSet) = RECV 1
0001 CV1($revolutions) = RECV 2
0002 CV2($warmup) = RECV 3
0003 CV3($computedStats) = RECV_INIT 4 array(...)
0004 EXT_STMT
0005 V5 = NEW 5 string("PhpBench\Model\Variant")
0006 V6 = FETCH_THIS
0007 SEND_VAR_EX V6 1
0008 SEND_VAR_EX CV0($parameterSet) 2
0009 SEND_VAR_EX CV1($revolutions) 3
0010 SEND_VAR_EX CV2($warmup) 4
0011 SEND_VAR_EX CV3($computedStats) 5
0012 DO_FCALL
0013 ASSIGN CV4($variant) V5
0014 EXT_STMT
0015 INIT_METHOD_CALL 0 CV0($parameterSet) string("getName")
0016 V10 = DO_FCALL
0017 V9 = FETCH_OBJ_W (dim write) THIS string("variants")
0018 ASSIGN_DIM V9 V10
0019 OP_DATA CV4($variant)
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE CV4($variant)
0022 RETURN CV4($variant)
0023 EXT_STMT
0024 VERIFY_RETURN_TYPE
0025 RETURN null
LIVE RANGES:
     5: 0006 - 0013 (new)
     10: 0017 - 0018 (tmp/var)

PhpBench\Model\Subject::getVariants:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:124-127
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("variants")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Subject::getBenchmark:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:132-135
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("benchmark")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Subject::getGroups:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:137-140
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("groups")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Subject::inGroups:
     ; (lines=17, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:142-145
     ; return  [] RANGE[0..0]
0000 CV0($groups) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\count")
0003 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\array_intersect")
0004 CHECK_FUNC_ARG 1
0005 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("groups")
0006 SEND_FUNC_ARG V1 1
0007 SEND_VAR_EX CV0($groups) 2
0008 V2 = DO_FCALL
0009 SEND_VAR_NO_REF_EX V2 1
0010 V3 = DO_FCALL
0011 T4 = IS_NOT_IDENTICAL V3 int(0)
0012 VERIFY_RETURN_TYPE T4
0013 RETURN T4
0014 EXT_STMT
0015 VERIFY_RETURN_TYPE
0016 RETURN null
LIVE RANGES:
     4: 0012 - 0013 (tmp/var)

PhpBench\Model\Subject::setGroups:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:147-150
     ; return  [] RANGE[0..0]
0000 CV0($groups) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("groups")
0003 OP_DATA CV0($groups)
0004 EXT_STMT
0005 RETURN null

PhpBench\Model\Subject::getSleep:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:152-155
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("sleep")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Subject::setSleep:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:157-160
     ; return  [] RANGE[0..0]
0000 CV0($sleep) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("sleep")
0003 OP_DATA CV0($sleep)
0004 EXT_STMT
0005 RETURN null

PhpBench\Model\Subject::getOutputTimeUnit:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:162-165
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("outputTimeUnit")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Subject::setOutputTimeUnit:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:167-170
     ; return  [] RANGE[0..0]
0000 CV0($outputTimeUnit) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("outputTimeUnit")
0003 OP_DATA CV0($outputTimeUnit)
0004 EXT_STMT
0005 RETURN null

PhpBench\Model\Subject::getOutputTimePrecision:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:172-175
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("outputTimePrecision")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Subject::setOutputTimePrecision:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:177-180
     ; return  [] RANGE[0..0]
0000 CV0($outputTimePrecision) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("outputTimePrecision")
0003 OP_DATA CV0($outputTimePrecision)
0004 EXT_STMT
0005 RETURN null

PhpBench\Model\Subject::getOutputMode:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:182-185
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("outputMode")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Subject::setOutputMode:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:187-190
     ; return  [] RANGE[0..0]
0000 CV0($outputMode) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("outputMode")
0003 OP_DATA CV0($outputMode)
0004 EXT_STMT
0005 RETURN null

PhpBench\Model\Subject::getRetryThreshold:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:192-195
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("retryThreshold")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Subject::setRetryThreshold:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:197-200
     ; return  [] RANGE[0..0]
0000 CV0($retryThreshold) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("retryThreshold")
0003 OP_DATA CV0($retryThreshold)
0004 EXT_STMT
0005 RETURN null

PhpBench\Model\Subject::getIndex:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:202-205
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("index")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Subject::getExecutor:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:207-210
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("executor")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Subject::setExecutor:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:212-215
     ; return  [] RANGE[0..0]
0000 CV0($executor) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("executor")
0003 OP_DATA CV0($executor)
0004 EXT_STMT
0005 RETURN null

PhpBench\Model\Subject::remove:
     ; (lines=14, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:217-222
     ; return  [] RANGE[0..0]
0000 CV0($target) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\array_filter")
0003 CHECK_FUNC_ARG 1
0004 V2 = FETCH_OBJ_FUNC_ARG (ref) THIS string("variants")
0005 SEND_FUNC_ARG V2 1
0006 T3 = DECLARE_LAMBDA_FUNCTION string("")
0007 BIND_LEXICAL T3 CV0($target)
0008 SEND_VAL_EX T3 2
0009 V4 = DO_FCALL
0010 ASSIGN_OBJ THIS string("variants")
0011 OP_DATA V4
0012 EXT_STMT
0013 RETURN null
LIVE RANGES:
     3: 0007 - 0008 (tmp/var)

PhpBench\Model\Subject::getVariant:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:224-227
     ; return  [] RANGE[0..0]
0000 CV0($parameterSetName) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("variants")
0003 T2 = FETCH_DIM_IS T1 CV0($parameterSetName)
0004 T3 = COALESCE T2 0006
0005 T3 = QM_ASSIGN null
0006 VERIFY_RETURN_TYPE T3
0007 RETURN T3
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     3: 0006 - 0007 (tmp/var)

PhpBench\Model\Subject::setFormat:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:229-232
     ; return  [] RANGE[0..0]
0000 CV0($format) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("format")
0003 OP_DATA CV0($format)
0004 EXT_STMT
0005 RETURN null

PhpBench\Model\Subject::getFormat:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Subject.php:234-237
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("format")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=27, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:1-459
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 NOP
0007 NOP
0008 NOP
0009 NOP
0010 NOP
0011 NOP
0012 NOP
0013 NOP
0014 NOP
0015 NOP
0016 NOP
0017 NOP
0018 NOP
0019 NOP
0020 NOP
0021 NOP
0022 NOP
0023 NOP
0024 EXT_STMT
0025 DECLARE_CLASS string("phpbench\model\variant")
0026 RETURN int(1)

PhpBench\Model\{closure}:
     ; (lines=9, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:195-197
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 V1 = FETCH_THIS
0003 INIT_METHOD_CALL 0 V1 string("getRevolutions")
0004 V2 = DO_FCALL
0005 T3 = DIV CV0($value) V2
0006 RETURN T3
0007 EXT_STMT
0008 RETURN null

PhpBench\Model\Variant::__construct:
     ; (lines=30, args=5, vars=5, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:97-110
     ; return  [] RANGE[0..0]
0000 CV0($subject) = RECV 1
0001 CV1($parameterSet) = RECV 2
0002 CV2($revolutions) = RECV 3
0003 CV3($warmup) = RECV 4
0004 CV4($computedStats) = RECV_INIT 5 array(...)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("subject")
0007 OP_DATA CV0($subject)
0008 EXT_STMT
0009 ASSIGN_OBJ THIS string("parameterSet")
0010 OP_DATA CV1($parameterSet)
0011 EXT_STMT
0012 ASSIGN_OBJ THIS string("revolutions")
0013 OP_DATA CV2($revolutions)
0014 EXT_STMT
0015 ASSIGN_OBJ THIS string("warmup")
0016 OP_DATA CV3($warmup)
0017 EXT_STMT
0018 ASSIGN_OBJ THIS string("computedStats")
0019 OP_DATA CV4($computedStats)
0020 EXT_STMT
0021 V11 = NEW 2 string("PhpBench\Assertion\VariantAssertionResults")
0022 V12 = FETCH_THIS
0023 SEND_VAR_EX V12 1
0024 SEND_VAL_EX array(...) 2
0025 DO_FCALL
0026 ASSIGN_OBJ THIS string("assertionResults")
0027 OP_DATA V11
0028 EXT_STMT
0029 RETURN null
LIVE RANGES:
     11: 0022 - 0026 (new)

PhpBench\Model\Variant::spawnIterations:
     ; (lines=19, args=1, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:116-121
     ; return  [] RANGE[0..0]
0000 CV0($nbIterations) = RECV 1
0001 EXT_STMT
0002 ASSIGN CV1($index) int(0)
0003 JMP 0014
0004 EXT_STMT
0005 V5 = NEW 2 string("PhpBench\Model\Iteration")
0006 SEND_VAR_EX CV1($index) 1
0007 V6 = FETCH_THIS
0008 SEND_VAR_EX V6 2
0009 DO_FCALL
0010 V3 = FETCH_OBJ_W (dim write) THIS string("iterations")
0011 ASSIGN_DIM V3 NEXT
0012 OP_DATA V5
0013 PRE_INC CV1($index)
0014 T9 = IS_SMALLER CV1($index) CV0($nbIterations)
0015 EXT_STMT
0016 JMPNZ T9 0004
0017 EXT_STMT
0018 RETURN null
LIVE RANGES:
     5: 0006 - 0010 (new)
     5: 0010 - 0011 (tmp/var)
     9: 0015 - 0016 (tmp/var)

PhpBench\Model\Variant::createIteration:
     ; (lines=26, args=1, vars=3, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:128-135
     ; return  [] RANGE[0..0]
0000 CV0($results) = RECV_INIT 1 array(...)
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\count")
0003 CHECK_FUNC_ARG 1
0004 V3 = FETCH_OBJ_FUNC_ARG (ref) THIS string("iterations")
0005 SEND_FUNC_ARG V3 1
0006 V4 = DO_FCALL
0007 ASSIGN CV1($index) V4
0008 EXT_STMT
0009 V6 = NEW 3 string("PhpBench\Model\Iteration")
0010 SEND_VAR_EX CV1($index) 1
0011 V7 = FETCH_THIS
0012 SEND_VAR_EX V7 2
0013 SEND_VAR_EX CV0($results) 3
0014 DO_FCALL
0015 ASSIGN CV2($iteration) V6
0016 EXT_STMT
0017 V10 = FETCH_OBJ_W (dim write) THIS string("iterations")
0018 ASSIGN_DIM V10 NEXT
0019 OP_DATA CV2($iteration)
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE CV2($iteration)
0022 RETURN CV2($iteration)
0023 EXT_STMT
0024 VERIFY_RETURN_TYPE
0025 RETURN null
LIVE RANGES:
     6: 0010 - 0015 (new)

PhpBench\Model\Variant::getIteration:
     ; (lines=11, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:142-145
     ; return  [] RANGE[0..0]
0000 CV0($index) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("iterations")
0003 T2 = FETCH_DIM_IS T1 CV0($index)
0004 T3 = COALESCE T2 0006
0005 T3 = QM_ASSIGN null
0006 VERIFY_RETURN_TYPE T3
0007 RETURN T3
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     3: 0006 - 0007 (tmp/var)

PhpBench\Model\Variant::addIteration:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:151-154
     ; return  [] RANGE[0..0]
0000 CV0($iteration) = RECV 1
0001 EXT_STMT
0002 V1 = FETCH_OBJ_W (dim write) THIS string("iterations")
0003 ASSIGN_DIM V1 NEXT
0004 OP_DATA CV0($iteration)
0005 EXT_STMT
0006 RETURN null

PhpBench\Model\Variant::getIterator:
     ; (lines=11, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:159-162
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 1 string("ArrayIterator")
0002 CHECK_FUNC_ARG 1
0003 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("iterations")
0004 SEND_FUNC_ARG V1 1
0005 DO_FCALL
0006 VERIFY_RETURN_TYPE V0
0007 RETURN V0
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     0: 0002 - 0006 (new)
     0: 0006 - 0007 (tmp/var)

PhpBench\Model\Variant::getMetricValues:
     ; (lines=28, args=2, vars=4, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:175-186
     ; return  [] RANGE[0..0]
0000 CV0($resultClass) = RECV 1
0001 CV1($metricName) = RECV 2
0002 EXT_STMT
0003 ASSIGN CV2($values) array(...)
0004 EXT_STMT
0005 T5 = FETCH_OBJ_R THIS string("iterations")
0006 V6 = FE_RESET_R T5 0021
0007 FE_FETCH_R V6 CV3($iteration) 0021
0008 EXT_STMT
0009 INIT_METHOD_CALL 1 CV3($iteration) string("hasResult")
0010 SEND_VAR_EX CV0($resultClass) 1
0011 V7 = DO_FCALL
0012 JMPZ V7 0020
0013 EXT_STMT
0014 INIT_METHOD_CALL 2 CV3($iteration) string("getMetric")
0015 SEND_VAR_EX CV0($resultClass) 1
0016 SEND_VAR_EX CV1($metricName) 2
0017 V9 = DO_FCALL
0018 ASSIGN_DIM CV2($values) NEXT
0019 OP_DATA V9
0020 JMP 0007
0021 FE_FREE V6
0022 EXT_STMT
0023 VERIFY_RETURN_TYPE CV2($values)
0024 RETURN CV2($values)
0025 EXT_STMT
0026 VERIFY_RETURN_TYPE
0027 RETURN null
LIVE RANGES:
     6: 0007 - 0021 (loop)

PhpBench\Model\Variant::getMetricValuesByRev:
     ; (lines=17, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:193-198
     ; return  [] RANGE[0..0]
0000 CV0($resultClass) = RECV 1
0001 CV1($metric) = RECV 2
0002 EXT_STMT
0003 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\array_map")
0004 T2 = DECLARE_LAMBDA_FUNCTION string("")
0005 SEND_VAL_EX T2 1
0006 INIT_METHOD_CALL 2 THIS string("getMetricValues")
0007 SEND_VAR_EX CV0($resultClass) 1
0008 SEND_VAR_EX CV1($metric) 2
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 2
0011 V4 = DO_FCALL
0012 VERIFY_RETURN_TYPE V4
0013 RETURN V4
0014 EXT_STMT
0015 VERIFY_RETURN_TYPE
0016 RETURN null
LIVE RANGES:
     4: 0012 - 0013 (tmp/var)

PhpBench\Model\Variant::resetAssertionResults:
     ; (lines=10, args=0, vars=0, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:200-203
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V1 = NEW 2 string("PhpBench\Assertion\VariantAssertionResults")
0002 V2 = FETCH_THIS
0003 SEND_VAR_EX V2 1
0004 SEND_VAL_EX array(...) 2
0005 DO_FCALL
0006 ASSIGN_OBJ THIS string("assertionResults")
0007 OP_DATA V1
0008 EXT_STMT
0009 RETURN null
LIVE RANGES:
     1: 0002 - 0006 (new)

PhpBench\Model\Variant::computeStats:
     ; (lines=125, args=0, vars=8, tmps=55)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:210-253
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 ASSIGN_OBJ THIS string("rejects")
0002 OP_DATA array(...)
0003 EXT_STMT
0004 INIT_METHOD_CALL 0 THIS string("getRevolutions")
0005 V9 = DO_FCALL
0006 ASSIGN CV0($revs) V9
0007 EXT_STMT
0008 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\count")
0009 CHECK_FUNC_ARG 1
0010 V11 = FETCH_OBJ_FUNC_ARG (ref) THIS string("iterations")
0011 SEND_FUNC_ARG V11 1
0012 V12 = DO_FCALL
0013 T13 = IS_IDENTICAL V12 int(0)
0014 JMPZ T13 0017
0015 EXT_STMT
0016 RETURN null
0017 EXT_STMT
0018 INIT_METHOD_CALL 2 THIS string("getMetricValuesByRev")
0019 SEND_VAL_EX string("PhpBench\Model\Result\TimeResult") 1
0020 SEND_VAL_EX string("net") 2
0021 V14 = DO_FCALL
0022 ASSIGN CV1($times) V14
0023 EXT_STMT
0024 INIT_METHOD_CALL 0 THIS string("getSubject")
0025 V16 = DO_FCALL
0026 INIT_METHOD_CALL 0 V16 string("getRetryThreshold")
0027 V17 = DO_FCALL
0028 ASSIGN CV2($retryThreshold) V17
0029 EXT_STMT
0030 V20 = NEW 2 string("PhpBench\Math\Distribution")
0031 SEND_VAR_EX CV1($times) 1
0032 CHECK_FUNC_ARG 2
0033 V21 = FETCH_OBJ_FUNC_ARG (ref) THIS string("computedStats")
0034 SEND_FUNC_ARG V21 2
0035 DO_FCALL
0036 ASSIGN_OBJ THIS string("stats")
0037 OP_DATA V20
0038 EXT_STMT
0039 T23 = FETCH_OBJ_R THIS string("iterations")
0040 V24 = FE_RESET_R T23 0119
0041 FE_FETCH_R V24 CV3($iteration) 0119
0042 EXT_STMT
0043 INIT_METHOD_CALL 1 CV3($iteration) string("getResult")
0044 SEND_VAL_EX string("PhpBench\Model\Result\TimeResult") 1
0045 V25 = DO_FCALL
0046 ASSIGN CV4($timeResult) V25
0047 NOP
0048 EXT_STMT
0049 T27 = FETCH_OBJ_R THIS string("stats")
0050 INIT_METHOD_CALL 0 T27 string("getMean")
0051 V28 = DO_FCALL
0052 T29 = IS_SMALLER int(0) V28
0053 JMPZ T29 0073
0054 EXT_STMT
0055 T30 = FETCH_OBJ_R THIS string("stats")
0056 INIT_METHOD_CALL 0 T30 string("getMean")
0057 V31 = DO_FCALL
0058 T32 = DIV int(100) V31
0059 INIT_METHOD_CALL 1 CV4($timeResult) string("getRevTime")
0060 INIT_METHOD_CALL 0 CV3($iteration) string("getVariant")
0061 V33 = DO_FCALL
0062 INIT_METHOD_CALL 0 V33 string("getRevolutions")
0063 V34 = DO_FCALL
0064 SEND_VAR_NO_REF_EX V34 1
0065 V35 = DO_FCALL
0066 T36 = FETCH_OBJ_R THIS string("stats")
0067 INIT_METHOD_CALL 0 T36 string("getMean")
0068 V37 = DO_FCALL
0069 T38 = SUB V35 V37
0070 T39 = MUL T32 T38
0071 ASSIGN CV5($deviation) T39
0072 JMP 0075
0073 EXT_STMT
0074 ASSIGN CV5($deviation) int(0)
0075 EXT_STMT
0076 INIT_METHOD_CALL 1 CV4($timeResult) string("getRevTime")
0077 SEND_VAR_EX CV0($revs) 1
0078 V42 = DO_FCALL
0079 ASSIGN CV6($revTime) V42
0080 EXT_STMT
0081 T44 = FETCH_OBJ_R THIS string("stats")
0082 INIT_METHOD_CALL 0 T44 string("getStdev")
0083 V45 = DO_FCALL
0084 JMPZ V45 0095
0085 T46 = FETCH_OBJ_R THIS string("stats")
0086 INIT_METHOD_CALL 0 T46 string("getMean")
0087 V47 = DO_FCALL
0088 T48 = SUB CV6($revTime) V47
0089 T49 = FETCH_OBJ_R THIS string("stats")
0090 INIT_METHOD_CALL 0 T49 string("getStdev")
0091 V50 = DO_FCALL
0092 T51 = DIV T48 V50
0093 T52 = QM_ASSIGN T51
0094 JMP 0096
0095 T52 = QM_ASSIGN int(0)
0096 ASSIGN CV7($zValue) T52
0097 EXT_STMT
0098 T54 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] CV2($retryThreshold)
0099 JMPZ T54 0110
0100 EXT_STMT
0101 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\abs")
0102 SEND_VAR_EX CV5($deviation) 1
0103 V55 = DO_FCALL
0104 T56 = IS_SMALLER_OR_EQUAL CV2($retryThreshold) V55
0105 JMPZ T56 0110
0106 EXT_STMT
0107 V57 = FETCH_OBJ_W (dim write) THIS string("rejects")
0108 ASSIGN_DIM V57 NEXT
0109 OP_DATA CV3($iteration)
0110 EXT_STMT
0111 INIT_METHOD_CALL 1 CV3($iteration) string("setResult")
0112 V59 = NEW 2 string("PhpBench\Model\Result\ComputedResult")
0113 SEND_VAR_EX CV7($zValue) 1
0114 SEND_VAR_EX CV5($deviation) 2
0115 DO_FCALL
0116 SEND_VAR_NO_REF_EX V59 1
0117 DO_FCALL
0118 JMP 0041
0119 FE_FREE V24
0120 EXT_STMT
0121 ASSIGN_OBJ THIS string("computed")
0122 OP_DATA bool(true)
0123 EXT_STMT
0124 RETURN null
LIVE RANGES:
     20: 0031 - 0036 (new)
     24: 0041 - 0119 (loop)
     32: 0059 - 0070 (tmp/var)
     35: 0066 - 0069 (tmp/var)
     48: 0089 - 0092 (tmp/var)
     59: 0113 - 0116 (new)

PhpBench\Model\Variant::getRejectCount:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:259-262
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\count")
0002 CHECK_FUNC_ARG 1
0003 V0 = FETCH_OBJ_FUNC_ARG (ref) THIS string("rejects")
0004 SEND_FUNC_ARG V0 1
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PhpBench\Model\Variant::getRejects:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:269-272
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("rejects")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Variant::getStats:
     ; (lines=40, args=0, vars=0, tmps=16)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:282-299
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("errorStack")
0002 T1 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] T0
0003 JMPZ T1 0024
0004 EXT_STMT
0005 V2 = NEW 1 string("RuntimeException")
0006 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Model\sprintf")
0007 SEND_VAL_EX string("Cannot retrieve stats when an exception was encountered ([%s] %s)") 1
0008 T3 = FETCH_OBJ_R THIS string("errorStack")
0009 INIT_METHOD_CALL 0 T3 string("getTop")
0010 V4 = DO_FCALL
0011 INIT_METHOD_CALL 0 V4 string("getClass")
0012 V5 = DO_FCALL
0013 SEND_VAR_NO_REF_EX V5 2
0014 T6 = FETCH_OBJ_R THIS string("errorStack")
0015 INIT_METHOD_CALL 0 T6 string("getTop")
0016 V7 = DO_FCALL
0017 INIT_METHOD_CALL 0 V7 string("getMessage")
0018 V8 = DO_FCALL
0019 SEND_VAR_NO_REF_EX V8 3
0020 V9 = DO_FCALL
0021 SEND_VAR_NO_REF_EX V9 1
0022 DO_FCALL
0023 THROW V2
0024 EXT_STMT
0025 T11 = FETCH_OBJ_R THIS string("computed")
0026 T12 = TYPE_CHECK (false) T11
0027 JMPZ T12 0033
0028 EXT_STMT
0029 V13 = NEW 1 string("RuntimeException")
0030 SEND_VAL_EX string("No statistics have yet been computed for this iteration set (::computeStats should be called)") 1
0031 DO_FCALL
0032 THROW V13
0033 EXT_STMT
0034 T15 = FETCH_OBJ_R THIS string("stats")
0035 VERIFY_RETURN_TYPE T15
0036 RETURN T15
0037 EXT_STMT
0038 VERIFY_RETURN_TYPE
0039 RETURN null
LIVE RANGES:
     2: 0006 - 0023 (new)
     13: 0030 - 0032 (new)
     15: 0035 - 0036 (tmp/var)

PhpBench\Model\Variant::isComputed:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:305-308
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("computed")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Variant::getParameterSet:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:313-316
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("parameterSet")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Variant::getSubject:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:321-324
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("subject")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Variant::hasErrorStack:
     ; (lines=8, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:330-333
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("errorStack")
0002 T1 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] T0
0003 VERIFY_RETURN_TYPE T1
0004 RETURN T1
0005 EXT_STMT
0006 VERIFY_RETURN_TYPE
0007 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (tmp/var)

PhpBench\Model\Variant::getErrorStack:
     ; (lines=19, args=0, vars=0, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:338-345
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("errorStack")
0002 T1 = TYPE_CHECK (null) T0
0003 JMPZ T1 0012
0004 EXT_STMT
0005 V2 = NEW 2 string("PhpBench\Model\ErrorStack")
0006 V3 = FETCH_THIS
0007 SEND_VAR_EX V3 1
0008 SEND_VAL_EX array(...) 2
0009 DO_FCALL
0010 VERIFY_RETURN_TYPE V2
0011 RETURN V2
0012 EXT_STMT
0013 T5 = FETCH_OBJ_R THIS string("errorStack")
0014 VERIFY_RETURN_TYPE T5
0015 RETURN T5
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     2: 0006 - 0010 (new)
     2: 0010 - 0011 (tmp/var)
     5: 0014 - 0015 (tmp/var)

PhpBench\Model\Variant::setException:
     ; (lines=24, args=1, vars=2, tmps=9)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:357-366
     ; return  [] RANGE[0..0]
0000 CV0($exception) = RECV 1
0001 EXT_STMT
0002 ASSIGN CV1($errors) array(...)
0003 NOP
0004 EXT_STMT
0005 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Model\Error") string("fromException")
0006 SEND_VAR_EX CV0($exception) 1
0007 V4 = DO_FCALL
0008 ASSIGN_DIM CV1($errors) NEXT
0009 OP_DATA V4
0010 INIT_METHOD_CALL 0 CV0($exception) string("getPrevious")
0011 V5 = DO_FCALL
0012 T6 = ASSIGN CV0($exception) V5
0013 JMPNZ T6 0004
0014 EXT_STMT
0015 V8 = NEW 2 string("PhpBench\Model\ErrorStack")
0016 V9 = FETCH_THIS
0017 SEND_VAR_EX V9 1
0018 SEND_VAR_EX CV1($errors) 2
0019 DO_FCALL
0020 ASSIGN_OBJ THIS string("errorStack")
0021 OP_DATA V8
0022 EXT_STMT
0023 RETURN null
LIVE RANGES:
     8: 0016 - 0020 (new)

PhpBench\Model\Variant::createErrorStack:
     ; (lines=11, args=1, vars=1, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:373-376
     ; return  [] RANGE[0..0]
0000 CV0($errors) = RECV 1
0001 EXT_STMT
0002 V2 = NEW 2 string("PhpBench\Model\ErrorStack")
0003 V3 = FETCH_THIS
0004 SEND_VAR_EX V3 1
0005 SEND_VAR_EX CV0($errors) 2
0006 DO_FCALL
0007 ASSIGN_OBJ THIS string("errorStack")
0008 OP_DATA V2
0009 EXT_STMT
0010 RETURN null
LIVE RANGES:
     2: 0003 - 0007 (new)

PhpBench\Model\Variant::getRevolutions:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:381-384
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("revolutions")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Variant::getWarmup:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:389-392
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("warmup")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Variant::getIterations:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:399-402
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("iterations")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Variant::count:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:407-410
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\count")
0002 CHECK_FUNC_ARG 1
0003 V0 = FETCH_OBJ_FUNC_ARG (ref) THIS string("iterations")
0004 SEND_FUNC_ARG V0 1
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PhpBench\Model\Variant::offsetGet:
     ; (lines=10, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:412-415
     ; return  [] RANGE[0..0]
0000 CV0($offset) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 1 THIS string("getIteration")
0003 SEND_VAR_EX CV0($offset) 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

PhpBench\Model\Variant::offsetSet:
     ; (lines=9, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:417-422
     ; return  [] RANGE[0..0]
0000 CV0($offset) = RECV 1
0001 CV1($value) = RECV 2
0002 EXT_STMT
0003 V2 = NEW 1 string("InvalidArgumentException")
0004 SEND_VAL_EX string("Iteration collections are immutable") 1
0005 DO_FCALL
0006 THROW V2
0007 EXT_STMT
0008 RETURN null
LIVE RANGES:
     2: 0004 - 0006 (new)

PhpBench\Model\Variant::offsetUnset:
     ; (lines=8, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:427-432
     ; return  [] RANGE[0..0]
0000 CV0($offset) = RECV 1
0001 EXT_STMT
0002 V1 = NEW 1 string("InvalidArgumentException")
0003 SEND_VAL_EX string("Iteration collections are immutable") 1
0004 DO_FCALL
0005 THROW V1
0006 EXT_STMT
0007 RETURN null
LIVE RANGES:
     1: 0003 - 0005 (new)

PhpBench\Model\Variant::offsetExists:
     ; (lines=13, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:434-437
     ; return  [] RANGE[0..0]
0000 CV0($offset) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\array_key_exists")
0003 SEND_VAR_EX CV0($offset) 1
0004 CHECK_FUNC_ARG 2
0005 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("iterations")
0006 SEND_FUNC_ARG V1 2
0007 V2 = DO_FCALL
0008 VERIFY_RETURN_TYPE V2
0009 RETURN V2
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     2: 0008 - 0009 (tmp/var)

PhpBench\Model\Variant::attachBaseline:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:439-442
     ; return  [] RANGE[0..0]
0000 CV0($baselineVariant) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("baseline")
0003 OP_DATA CV0($baselineVariant)
0004 EXT_STMT
0005 RETURN null

PhpBench\Model\Variant::getBaseline:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:444-447
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("baseline")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Variant::addAssertionResult:
     ; (lines=8, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:449-452
     ; return  [] RANGE[0..0]
0000 CV0($result) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_R THIS string("assertionResults")
0003 INIT_METHOD_CALL 1 T1 string("add")
0004 SEND_VAR_EX CV0($result) 1
0005 DO_FCALL
0006 EXT_STMT
0007 RETURN null

PhpBench\Model\Variant::getAssertionResults:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Variant.php:454-457
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("assertionResults")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:1-105
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 RETURN int(1)

PhpBench\Model\{closure}:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:70-72
     ; return  [] RANGE[0..0]
0000 CV0($serializedValue) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Model\ParameterContainer") string("fromSerializedValue")
0003 SEND_VAR_EX CV0($serializedValue) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

PhpBench\Model\{closure}:
     ; (lines=8, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:80-82
     ; return  [] RANGE[0..0]
0000 CV0($parameter) = RECV 1
0001 EXT_STMT
0002 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Model\ParameterContainer") string("fromValue")
0003 SEND_VAR_EX CV0($parameter) 1
0004 V1 = DO_FCALL
0005 RETURN V1
0006 EXT_STMT
0007 RETURN null

PhpBench\Model\{closure}:
     ; (lines=7, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:90-92
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 CV0($container) string("toUnserializedValue")
0003 V1 = DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null

PhpBench\Model\{closure}:
     ; (lines=7, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:100-102
     ; return  [] RANGE[0..0]
0000 CV0($container) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 CV0($container) string("getValue")
0003 V1 = DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null

PhpBench\Model\ParameterSet::__construct:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:30-34
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 CV1($parameters) = RECV 2
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("name")
0004 OP_DATA CV0($name)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("parameters")
0007 OP_DATA CV1($parameters)
0008 EXT_STMT
0009 RETURN null

PhpBench\Model\ParameterSet::getName:
     ; (lines=8, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:36-39
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("name")
0002 T1 = CAST (string) T0
0003 VERIFY_RETURN_TYPE T1
0004 RETURN T1
0005 EXT_STMT
0006 VERIFY_RETURN_TYPE
0007 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (tmp/var)

PhpBench\Model\ParameterSet::getIndex:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:44-47
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("name")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\ParameterSet::toArray:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:52-55
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("parameters")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\ParameterSet::fromParameterContainers:
     ; (lines=12, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:60-63
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 CV1($parameterContainers) = RECV 2
0002 EXT_STMT
0003 V2 = NEW 2 (self) (exception)
0004 SEND_VAR_EX CV0($name) 1
0005 SEND_VAR_EX CV1($parameterContainers) 2
0006 DO_FCALL
0007 VERIFY_RETURN_TYPE V2
0008 RETURN V2
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     2: 0004 - 0007 (new)
     2: 0007 - 0008 (tmp/var)

PhpBench\Model\ParameterSet::fromSerializedParameters:
     ; (lines=17, args=2, vars=2, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:68-73
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 CV1($parameters) = RECV 2
0002 EXT_STMT
0003 V2 = NEW 2 (self) (exception)
0004 SEND_VAR_EX CV0($name) 1
0005 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\array_map")
0006 T3 = DECLARE_LAMBDA_FUNCTION string("")
0007 SEND_VAL_EX T3 1
0008 SEND_VAR_EX CV1($parameters) 2
0009 V4 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V4 2
0011 DO_FCALL
0012 VERIFY_RETURN_TYPE V2
0013 RETURN V2
0014 EXT_STMT
0015 VERIFY_RETURN_TYPE
0016 RETURN null
LIVE RANGES:
     2: 0004 - 0012 (new)
     2: 0012 - 0013 (tmp/var)

PhpBench\Model\ParameterSet::fromUnserializedValues:
     ; (lines=17, args=2, vars=2, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:78-83
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 CV1($parameters) = RECV 2
0002 EXT_STMT
0003 V2 = NEW 2 (self) (exception)
0004 SEND_VAR_EX CV0($name) 1
0005 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\array_map")
0006 T3 = DECLARE_LAMBDA_FUNCTION string("")
0007 SEND_VAL_EX T3 1
0008 SEND_VAR_EX CV1($parameters) 2
0009 V4 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V4 2
0011 DO_FCALL
0012 VERIFY_RETURN_TYPE V2
0013 RETURN V2
0014 EXT_STMT
0015 VERIFY_RETURN_TYPE
0016 RETURN null
LIVE RANGES:
     2: 0004 - 0012 (new)
     2: 0012 - 0013 (tmp/var)

PhpBench\Model\ParameterSet::toUnserializedParameters:
     ; (lines=13, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:88-93
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\array_map")
0002 T0 = DECLARE_LAMBDA_FUNCTION string("")
0003 SEND_VAL_EX T0 1
0004 CHECK_FUNC_ARG 2
0005 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("parameters")
0006 SEND_FUNC_ARG V1 2
0007 V2 = DO_FCALL
0008 VERIFY_RETURN_TYPE V2
0009 RETURN V2
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     2: 0008 - 0009 (tmp/var)

PhpBench\Model\ParameterSet::toSerializedParameters:
     ; (lines=13, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ParameterSet.php:98-103
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\array_map")
0002 T0 = DECLARE_LAMBDA_FUNCTION string("")
0003 SEND_VAL_EX T0 1
0004 CHECK_FUNC_ARG 2
0005 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("parameters")
0006 SEND_FUNC_ARG V1 2
0007 V2 = DO_FCALL
0008 VERIFY_RETURN_TYPE V2
0009 RETURN V2
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     2: 0008 - 0009 (tmp/var)

$_main:
     ; (lines=8, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/VariantAssertionResults.php:1-111
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 EXT_STMT
0006 DECLARE_CLASS string("phpbench\assertion\variantassertionresults")
0007 RETURN int(1)

PhpBench\Assertion\{closure}:
     ; (lines=7, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/VariantAssertionResults.php:96-98
     ; return  [] RANGE[0..0]
0000 CV0($result) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 CV0($result) string("isFail")
0003 V1 = DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null

PhpBench\Assertion\{closure}:
     ; (lines=7, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/VariantAssertionResults.php:106-108
     ; return  [] RANGE[0..0]
0000 CV0($result) = RECV 1
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 CV0($result) string("isTolerated")
0003 V1 = DO_FCALL
0004 RETURN V1
0005 EXT_STMT
0006 RETURN null

PhpBench\Assertion\VariantAssertionResults::__construct:
     ; (lines=16, args=2, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/VariantAssertionResults.php:37-44
     ; return  [] RANGE[0..0]
0000 CV0($variant) = RECV 1
0001 CV1($results) = RECV_INIT 2 array(...)
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("variant")
0004 OP_DATA CV0($variant)
0005 EXT_STMT
0006 V4 = FE_RESET_R CV1($results) 0013
0007 FE_FETCH_R V4 CV2($result) 0013
0008 EXT_STMT
0009 INIT_METHOD_CALL 1 THIS string("add")
0010 SEND_VAR_EX CV2($result) 1
0011 DO_FCALL
0012 JMP 0007
0013 FE_FREE V4
0014 EXT_STMT
0015 RETURN null
LIVE RANGES:
     4: 0007 - 0013 (loop)

PhpBench\Assertion\VariantAssertionResults::getIterator:
     ; (lines=11, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/VariantAssertionResults.php:49-52
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 1 string("ArrayIterator")
0002 CHECK_FUNC_ARG 1
0003 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("results")
0004 SEND_FUNC_ARG V1 1
0005 DO_FCALL
0006 VERIFY_RETURN_TYPE V0
0007 RETURN V0
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     0: 0002 - 0006 (new)
     0: 0006 - 0007 (tmp/var)

PhpBench\Assertion\VariantAssertionResults::add:
     ; (lines=7, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/VariantAssertionResults.php:54-57
     ; return  [] RANGE[0..0]
0000 CV0($result) = RECV 1
0001 EXT_STMT
0002 V1 = FETCH_OBJ_W (dim write) THIS string("results")
0003 ASSIGN_DIM V1 NEXT
0004 OP_DATA CV0($result)
0005 EXT_STMT
0006 RETURN null

PhpBench\Assertion\VariantAssertionResults::asArray:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/VariantAssertionResults.php:62-65
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("results")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Assertion\VariantAssertionResults::getVariant:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/VariantAssertionResults.php:67-70
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("variant")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Assertion\VariantAssertionResults::count:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/VariantAssertionResults.php:75-78
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Assertion\count")
0002 CHECK_FUNC_ARG 1
0003 V0 = FETCH_OBJ_FUNC_ARG (ref) THIS string("results")
0004 SEND_FUNC_ARG V0 1
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PhpBench\Assertion\VariantAssertionResults::hasFailures:
     ; (lines=18, args=0, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/VariantAssertionResults.php:80-89
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T1 = FETCH_OBJ_R THIS string("results")
0002 V2 = FE_RESET_R T1 0012
0003 FE_FETCH_R V2 CV0($result) 0012
0004 EXT_STMT
0005 INIT_METHOD_CALL 0 CV0($result) string("isFail")
0006 V3 = DO_FCALL
0007 JMPZ V3 0011
0008 EXT_STMT
0009 FE_FREE V2
0010 RETURN bool(true)
0011 JMP 0003
0012 FE_FREE V2
0013 EXT_STMT
0014 RETURN bool(false)
0015 EXT_STMT
0016 VERIFY_RETURN_TYPE
0017 RETURN null
LIVE RANGES:
     2: 0003 - 0012 (loop)

PhpBench\Assertion\VariantAssertionResults::failures:
     ; (lines=19, args=0, vars=0, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/VariantAssertionResults.php:94-99
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 2 (self) (exception)
0002 CHECK_FUNC_ARG 1
0003 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("variant")
0004 SEND_FUNC_ARG V1 1
0005 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Assertion\array_filter")
0006 CHECK_FUNC_ARG 1
0007 V2 = FETCH_OBJ_FUNC_ARG (ref) THIS string("results")
0008 SEND_FUNC_ARG V2 1
0009 T3 = DECLARE_LAMBDA_FUNCTION string("")
0010 SEND_VAL_EX T3 2
0011 V4 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V4 2
0013 DO_FCALL
0014 VERIFY_RETURN_TYPE V0
0015 RETURN V0
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     0: 0002 - 0014 (new)
     0: 0014 - 0015 (tmp/var)

PhpBench\Assertion\VariantAssertionResults::tolerations:
     ; (lines=19, args=0, vars=0, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/VariantAssertionResults.php:104-109
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 2 (self) (exception)
0002 CHECK_FUNC_ARG 1
0003 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("variant")
0004 SEND_FUNC_ARG V1 1
0005 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Assertion\array_filter")
0006 CHECK_FUNC_ARG 1
0007 V2 = FETCH_OBJ_FUNC_ARG (ref) THIS string("results")
0008 SEND_FUNC_ARG V2 1
0009 T3 = DECLARE_LAMBDA_FUNCTION string("")
0010 SEND_VAL_EX T3 2
0011 V4 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V4 2
0013 DO_FCALL
0014 VERIFY_RETURN_TYPE V0
0015 RETURN V0
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     0: 0002 - 0014 (new)
     0: 0014 - 0015 (tmp/var)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Iteration.php:1-52
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 DECLARE_CLASS_DELAYED string("phpbench\model\iteration") string("phpbench\model\resultcollection")
0004 RETURN int(1)

PhpBench\Model\Iteration::__construct:
     ; (lines=15, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Iteration.php:25-33
     ; return  [] RANGE[0..0]
0000 CV0($index) = RECV 1
0001 CV1($variant) = RECV 2
0002 CV2($results) = RECV_INIT 3 array(...)
0003 EXT_STMT
0004 ASSIGN_OBJ THIS string("index")
0005 OP_DATA CV0($index)
0006 EXT_STMT
0007 ASSIGN_OBJ THIS string("variant")
0008 OP_DATA CV1($variant)
0009 EXT_STMT
0010 INIT_STATIC_METHOD_CALL 1 (parent) (exception) CONSTRUCTOR
0011 SEND_VAR_EX CV2($results) 1
0012 DO_FCALL
0013 EXT_STMT
0014 RETURN null

PhpBench\Model\Iteration::getVariant:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Iteration.php:39-42
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("variant")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Model\Iteration::getIndex:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/Iteration.php:47-50
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("index")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ResultCollection.php:1-121
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 RETURN int(1)

PhpBench\Model\ResultCollection::__construct:
     ; (lines=12, args=1, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ResultCollection.php:25-30
     ; return  [] RANGE[0..0]
0000 CV0($results) = RECV_INIT 1 array(...)
0001 EXT_STMT
0002 V2 = FE_RESET_R CV0($results) 0009
0003 FE_FETCH_R V2 CV1($result) 0009
0004 EXT_STMT
0005 INIT_METHOD_CALL 1 THIS string("setResult")
0006 SEND_VAR_EX CV1($result) 1
0007 DO_FCALL
0008 JMP 0003
0009 FE_FREE V2
0010 EXT_STMT
0011 RETURN null
LIVE RANGES:
     2: 0003 - 0009 (loop)

PhpBench\Model\ResultCollection::setResult:
     ; (lines=12, args=1, vars=2, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ResultCollection.php:38-42
     ; return  [] RANGE[0..0]
0000 CV0($result) = RECV 1
0001 EXT_STMT
0002 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\get_class")
0003 SEND_VAR_EX CV0($result) 1
0004 V2 = DO_FCALL
0005 ASSIGN CV1($class) V2
0006 EXT_STMT
0007 V4 = FETCH_OBJ_W (dim write) THIS string("results")
0008 ASSIGN_DIM V4 CV1($class)
0009 OP_DATA CV0($result)
0010 EXT_STMT
0011 RETURN null

PhpBench\Model\ResultCollection::hasResult:
     ; (lines=9, args=1, vars=1, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ResultCollection.php:48-51
     ; return  [] RANGE[0..0]
0000 CV0($class) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("results")
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($class)
0004 VERIFY_RETURN_TYPE T2
0005 RETURN T2
0006 EXT_STMT
0007 VERIFY_RETURN_TYPE
0008 RETURN null
LIVE RANGES:
     2: 0004 - 0005 (tmp/var)

PhpBench\Model\ResultCollection::getResult:
     ; (lines=23, args=1, vars=1, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ResultCollection.php:60-70
     ; return  [] RANGE[0..0]
0000 CV0($class) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("results")
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($class)
0004 T3 = BOOL_NOT T2
0005 JMPZ T3 0015
0006 EXT_STMT
0007 V4 = NEW 1 string("RuntimeException")
0008 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\sprintf")
0009 SEND_VAL_EX string("Result of class "%s" has not been set") 1
0010 SEND_VAR_EX CV0($class) 2
0011 V5 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V5 1
0013 DO_FCALL
0014 THROW V4
0015 EXT_STMT
0016 T7 = FETCH_OBJ_R THIS string("results")
0017 T8 = FETCH_DIM_R T7 CV0($class)
0018 VERIFY_RETURN_TYPE T8
0019 RETURN T8
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     4: 0008 - 0014 (new)
     8: 0018 - 0019 (tmp/var)

PhpBench\Model\ResultCollection::getMetric:
     ; (lines=36, args=2, vars=3, tmps=11)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ResultCollection.php:79-91
     ; return  [] RANGE[0..0]
0000 CV0($class) = RECV 1
0001 CV1($metric) = RECV 2
0002 EXT_STMT
0003 INIT_METHOD_CALL 1 THIS string("getResult")
0004 SEND_VAR_EX CV0($class) 1
0005 V3 = DO_FCALL
0006 INIT_METHOD_CALL 0 V3 string("getMetrics")
0007 V4 = DO_FCALL
0008 ASSIGN CV2($metrics) V4
0009 EXT_STMT
0010 T6 = ISSET_ISEMPTY_DIM_OBJ (isset) CV2($metrics) CV1($metric)
0011 T7 = BOOL_NOT T6
0012 JMPZ T7 0031
0013 EXT_STMT
0014 V8 = NEW 1 string("InvalidArgumentException")
0015 INIT_NS_FCALL_BY_NAME 4 string("PhpBench\Model\sprintf")
0016 SEND_VAL_EX string("Unknown metric "%s" for result class "%s". Available metrics: "%s"") 1
0017 SEND_VAR_EX CV1($metric) 2
0018 SEND_VAR_EX CV0($class) 3
0019 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Model\implode")
0020 SEND_VAL_EX string("", "") 1
0021 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Model\array_keys")
0022 SEND_VAR_EX CV2($metrics) 1
0023 V9 = DO_FCALL
0024 SEND_VAR_NO_REF_EX V9 2
0025 V10 = DO_FCALL
0026 SEND_VAR_NO_REF_EX V10 4
0027 V11 = DO_FCALL
0028 SEND_VAR_NO_REF_EX V11 1
0029 DO_FCALL
0030 THROW V8
0031 EXT_STMT
0032 T13 = FETCH_DIM_R CV2($metrics) CV1($metric)
0033 RETURN T13
0034 EXT_STMT
0035 RETURN null
LIVE RANGES:
     8: 0015 - 0030 (new)

PhpBench\Model\ResultCollection::getMetricOrDefault:
     ; (lines=19, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ResultCollection.php:102-109
     ; return  [] RANGE[0..0]
0000 CV0($class) = RECV 1
0001 CV1($metric) = RECV 2
0002 CV2($default) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_METHOD_CALL 1 THIS string("hasResult")
0005 SEND_VAR_EX CV0($class) 1
0006 V3 = DO_FCALL
0007 T4 = TYPE_CHECK (false) V3
0008 JMPZ T4 0011
0009 EXT_STMT
0010 RETURN CV2($default)
0011 EXT_STMT
0012 INIT_METHOD_CALL 2 THIS string("getMetric")
0013 SEND_VAR_EX CV0($class) 1
0014 SEND_VAR_EX CV1($metric) 2
0015 V5 = DO_FCALL
0016 RETURN V5
0017 EXT_STMT
0018 RETURN null

PhpBench\Model\ResultCollection::getResults:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Model/ResultCollection.php:116-119
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("results")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=9, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Tokens.php:1-121
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 NOP
0004 NOP
0005 NOP
0006 EXT_STMT
0007 DECLARE_CLASS string("phpbench\expression\tokens")
0008 RETURN int(1)

PhpBench\Expression\{closure}:
     ; (lines=8, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Tokens.php:116-118
     ; return  [] RANGE[0..0]
0000 CV0($token) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_R CV0($token) string("type")
0003 T2 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_WHITESPACE")
0004 T3 = IS_NOT_IDENTICAL T1 T2
0005 RETURN T3
0006 EXT_STMT
0007 RETURN null
LIVE RANGES:
     1: 0003 - 0004 (tmp/var)

PhpBench\Expression\Tokens::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Tokens.php:28-31
     ; return  [] RANGE[0..0]
0000 CV0($tokens) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("tokens")
0003 OP_DATA CV0($tokens)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\Tokens::toArray:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Tokens.php:36-39
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("tokens")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Tokens::getIterator:
     ; (lines=11, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Tokens.php:44-47
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 1 string("ArrayIterator")
0002 CHECK_FUNC_ARG 1
0003 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("tokens")
0004 SEND_FUNC_ARG V1 1
0005 DO_FCALL
0006 VERIFY_RETURN_TYPE V0
0007 RETURN V0
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     0: 0002 - 0006 (new)
     0: 0006 - 0007 (tmp/var)

PhpBench\Expression\Tokens::chomp:
     ; (lines=39, args=1, vars=3, tmps=12)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Tokens.php:52-66
     ; return  [] RANGE[0..0]
0000 CV0($type) = RECV_INIT 1 null
0001 EXT_STMT
0002 INIT_METHOD_CALL 0 THIS string("previous")
0003 V3 = DO_FCALL
0004 ASSIGN CV1($previous) V3
0005 EXT_STMT
0006 INIT_METHOD_CALL 1 THIS string("atPosition")
0007 T5 = POST_INC_OBJ THIS string("position")
0008 SEND_VAL_EX T5 1
0009 V6 = DO_FCALL
0010 ASSIGN CV2($token) V6
0011 EXT_STMT
0012 T8 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] CV0($type)
0013 T8 = JMPZ_EX T8 0017
0014 T9 = FETCH_OBJ_R CV2($token) string("type")
0015 T10 = IS_NOT_IDENTICAL CV0($type) T9
0016 T8 = BOOL T10
0017 JMPZ T8 0033
0018 EXT_STMT
0019 INIT_STATIC_METHOD_CALL 3 string("PhpBench\Expression\Exception\SyntaxError") string("forToken")
0020 V11 = FETCH_THIS
0021 SEND_VAR_EX V11 1
0022 SEND_VAR_EX CV1($previous) 2
0023 INIT_NS_FCALL_BY_NAME 3 string("PhpBench\Expression\sprintf")
0024 SEND_VAL_EX string("Expected type "%s" after, got "%s"") 1
0025 SEND_VAR_EX CV0($type) 2
0026 CHECK_FUNC_ARG 3
0027 V12 = FETCH_OBJ_FUNC_ARG (ref) CV2($token) string("type")
0028 SEND_FUNC_ARG V12 3
0029 V13 = DO_FCALL
0030 SEND_VAR_NO_REF_EX V13 3
0031 V14 = DO_FCALL
0032 THROW V14
0033 EXT_STMT
0034 VERIFY_RETURN_TYPE CV2($token)
0035 RETURN CV2($token)
0036 EXT_STMT
0037 VERIFY_RETURN_TYPE
0038 RETURN null

PhpBench\Expression\Tokens::count:
     ; (lines=11, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Tokens.php:68-71
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\count")
0002 CHECK_FUNC_ARG 1
0003 V0 = FETCH_OBJ_FUNC_ARG (ref) THIS string("tokens")
0004 SEND_FUNC_ARG V0 1
0005 V1 = DO_FCALL
0006 VERIFY_RETURN_TYPE V1
0007 RETURN V1
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     1: 0006 - 0007 (tmp/var)

PhpBench\Expression\Tokens::toString:
     ; (lines=50, args=0, vars=3, tmps=18)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Tokens.php:73-88
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\count")
0002 CHECK_FUNC_ARG 1
0003 V4 = FETCH_OBJ_FUNC_ARG (ref) THIS string("tokens")
0004 SEND_FUNC_ARG V4 1
0005 V5 = DO_FCALL
0006 T6 = SUB V5 int(1)
0007 T3 = FETCH_OBJ_R THIS string("tokens")
0008 T7 = FETCH_DIM_R T3 T6
0009 ASSIGN CV0($last) T7
0010 EXT_STMT
0011 T9 = INSTANCEOF CV0($last) string("PhpBench\Expression\Token")
0012 T10 = BOOL_NOT T9
0013 JMPZ T10 0016
0014 EXT_STMT
0015 RETURN string("")
0016 EXT_STMT
0017 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\str_repeat")
0018 SEND_VAL_EX string(" ") 1
0019 INIT_METHOD_CALL 0 CV0($last) string("end")
0020 V11 = DO_FCALL
0021 SEND_VAR_NO_REF_EX V11 2
0022 V12 = DO_FCALL
0023 ASSIGN CV1($out) V12
0024 EXT_STMT
0025 T14 = FETCH_THIS
0026 V15 = FE_RESET_R T14 0043
0027 FE_FETCH_R V15 CV2($token) 0043
0028 EXT_STMT
0029 INIT_NS_FCALL_BY_NAME 4 string("PhpBench\Expression\substr_replace")
0030 SEND_VAR_EX CV1($out) 1
0031 CHECK_FUNC_ARG 2
0032 V16 = FETCH_OBJ_FUNC_ARG (ref) CV2($token) string("value")
0033 SEND_FUNC_ARG V16 2
0034 INIT_METHOD_CALL 0 CV2($token) string("start")
0035 V17 = DO_FCALL
0036 SEND_VAR_NO_REF_EX V17 3
0037 INIT_METHOD_CALL 0 CV2($token) string("length")
0038 V18 = DO_FCALL
0039 SEND_VAR_NO_REF_EX V18 4
0040 V19 = DO_FCALL
0041 ASSIGN CV1($out) V19
0042 JMP 0027
0043 FE_FREE V15
0044 EXT_STMT
0045 VERIFY_RETURN_TYPE CV1($out)
0046 RETURN CV1($out)
0047 EXT_STMT
0048 VERIFY_RETURN_TYPE
0049 RETURN null
LIVE RANGES:
     6: 0007 - 0008 (tmp/var)
     15: 0027 - 0043 (loop)

PhpBench\Expression\Tokens::atPosition:
     ; (lines=22, args=1, vars=1, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Tokens.php:90-97
     ; return  [] RANGE[0..0]
0000 CV0($position) = RECV 1
0001 EXT_STMT
0002 T1 = FETCH_OBJ_IS THIS string("tokens")
0003 T2 = ISSET_ISEMPTY_DIM_OBJ (isset) T1 CV0($position)
0004 JMPZ T2 0010
0005 EXT_STMT
0006 T3 = FETCH_OBJ_R THIS string("tokens")
0007 T4 = FETCH_DIM_R T3 CV0($position)
0008 VERIFY_RETURN_TYPE T4
0009 RETURN T4
0010 EXT_STMT
0011 V5 = NEW 3 string("PhpBench\Expression\Token")
0012 T6 = FETCH_CLASS_CONSTANT string("PhpBench\Expression\Token") string("T_EOF")
0013 SEND_VAL_EX T6 1
0014 SEND_VAL_EX string("") 2
0015 SEND_VAR_EX CV0($position) 3
0016 DO_FCALL
0017 VERIFY_RETURN_TYPE V5
0018 RETURN V5
0019 EXT_STMT
0020 VERIFY_RETURN_TYPE
0021 RETURN null
LIVE RANGES:
     4: 0008 - 0009 (tmp/var)
     5: 0012 - 0017 (new)
     5: 0017 - 0018 (tmp/var)

PhpBench\Expression\Tokens::current:
     ; (lines=10, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Tokens.php:99-102
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_METHOD_CALL 1 THIS string("atPosition")
0002 T0 = FETCH_OBJ_R THIS string("position")
0003 SEND_VAL T0 1
0004 V1 = DO_FCALL
0005 VERIFY_RETURN_TYPE V1
0006 RETURN V1
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     1: 0005 - 0006 (tmp/var)

PhpBench\Expression\Tokens::previous:
     ; (lines=11, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Tokens.php:104-107
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_METHOD_CALL 1 THIS string("atPosition")
0002 T0 = FETCH_OBJ_R THIS string("position")
0003 T1 = SUB T0 int(1)
0004 SEND_VAL T1 1
0005 V2 = DO_FCALL
0006 VERIFY_RETURN_TYPE V2
0007 RETURN V2
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     2: 0006 - 0007 (tmp/var)

PhpBench\Expression\Tokens::hasMore:
     ; (lines=13, args=0, vars=0, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Tokens.php:109-112
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("position")
0002 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\count")
0003 CHECK_FUNC_ARG 1
0004 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("tokens")
0005 SEND_FUNC_ARG V1 1
0006 V2 = DO_FCALL
0007 T3 = IS_SMALLER T0 V2
0008 VERIFY_RETURN_TYPE T3
0009 RETURN T3
0010 EXT_STMT
0011 VERIFY_RETURN_TYPE
0012 RETURN null
LIVE RANGES:
     0: 0002 - 0007 (tmp/var)
     3: 0008 - 0009 (tmp/var)

PhpBench\Expression\Tokens::withoutWhitespace:
     ; (lines=19, args=0, vars=0, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Tokens.php:114-119
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 1 (self) (exception)
0002 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\array_values")
0003 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\array_filter")
0004 CHECK_FUNC_ARG 1
0005 V1 = FETCH_OBJ_FUNC_ARG (ref) THIS string("tokens")
0006 SEND_FUNC_ARG V1 1
0007 T2 = DECLARE_LAMBDA_FUNCTION string("")
0008 SEND_VAL_EX T2 2
0009 V3 = DO_FCALL
0010 SEND_VAR_NO_REF_EX V3 1
0011 V4 = DO_FCALL
0012 SEND_VAR_NO_REF_EX V4 1
0013 DO_FCALL
0014 VERIFY_RETURN_TYPE V0
0015 RETURN V0
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null
LIVE RANGES:
     0: 0002 - 0014 (new)
     0: 0014 - 0015 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/VariableNode.php:1-22
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\variablenode") string("phpbench\expression\ast\node")
0003 RETURN int(1)

PhpBench\Expression\Ast\VariableNode::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/VariableNode.php:12-15
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("name")
0003 OP_DATA CV0($name)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\Ast\VariableNode::name:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/VariableNode.php:17-20
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("name")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/Node.php:1-8
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN int(1)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/AccessNode.php:1-32
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\accessnode") string("phpbench\expression\ast\node")
0004 RETURN int(1)

PhpBench\Expression\Ast\AccessNode::__construct:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/AccessNode.php:16-20
     ; return  [] RANGE[0..0]
0000 CV0($expression) = RECV 1
0001 CV1($access) = RECV 2
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("expression")
0004 OP_DATA CV0($expression)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("access")
0007 OP_DATA CV1($access)
0008 EXT_STMT
0009 RETURN null

PhpBench\Expression\Ast\AccessNode::access:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/AccessNode.php:22-25
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("access")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Ast\AccessNode::expression:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/AccessNode.php:27-30
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("expression")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/StringNode.php:1-25
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\stringnode") string("phpbench\expression\ast\scalarvalue")
0003 RETURN int(1)

PhpBench\Expression\Ast\StringNode::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/StringNode.php:12-15
     ; return  [] RANGE[0..0]
0000 CV0($string) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("string")
0003 OP_DATA CV0($string)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\Ast\StringNode::value:
     ; (lines=5, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/StringNode.php:20-23
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("string")
0002 RETURN T0
0003 EXT_STMT
0004 RETURN null

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/ScalarValue.php:1-8
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\scalarvalue") string("phpbench\expression\ast\phpvalue")
0002 RETURN int(1)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/PhpValue.php:1-12
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\phpvalue") string("phpbench\expression\ast\node")
0002 RETURN int(1)

PhpBench\Expression\Ast\PhpValue::value:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/PhpValue.php:10-10
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN null

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/ArgumentListNode.php:1-8
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\argumentlistnode") string("phpbench\expression\ast\delimitedlistnode")
0002 RETURN int(1)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/DelimitedListNode.php:1-53
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\delimitedlistnode") string("phpbench\expression\ast\phpvalue")
0003 RETURN int(1)

PhpBench\Expression\Ast\{closure}:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/DelimitedListNode.php:48-50
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 T1 = TYPE_CHECK TYPE [bool, long, double, string, array, object, resource] CV0($value)
0003 RETURN T1
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\Ast\DelimitedListNode::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/DelimitedListNode.php:15-18
     ; return  [] RANGE[0..0]
0000 CV0($nodes) = RECV_INIT 1 array(...)
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("nodes")
0003 OP_DATA CV0($nodes)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\Ast\DelimitedListNode::nodes:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/DelimitedListNode.php:23-26
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("nodes")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Ast\DelimitedListNode::value:
     ; (lines=21, args=0, vars=3, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/DelimitedListNode.php:31-41
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 ASSIGN CV0($values) array(...)
0002 EXT_STMT
0003 T4 = FETCH_OBJ_R THIS string("nodes")
0004 V5 = FE_RESET_R T4 0014
0005 T6 = FE_FETCH_R V5 CV1($node) 0014
0006 ASSIGN CV2($key) T6
0007 NOP
0008 EXT_STMT
0009 INIT_METHOD_CALL 0 CV1($node) string("value")
0010 V9 = DO_FCALL
0011 ASSIGN_DIM CV0($values) CV2($key)
0012 OP_DATA V9
0013 JMP 0005
0014 FE_FREE V5
0015 EXT_STMT
0016 VERIFY_RETURN_TYPE CV0($values)
0017 RETURN CV0($values)
0018 EXT_STMT
0019 VERIFY_RETURN_TYPE
0020 RETURN null
LIVE RANGES:
     5: 0005 - 0014 (loop)

PhpBench\Expression\Ast\DelimitedListNode::nonNullPhpValues:
     ; (lines=16, args=0, vars=0, tmps=4)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/DelimitedListNode.php:46-51
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Ast\array_values")
0002 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\Ast\array_filter")
0003 INIT_METHOD_CALL 0 THIS string("value")
0004 V0 = DO_FCALL
0005 SEND_VAR_NO_REF_EX V0 1
0006 T1 = DECLARE_LAMBDA_FUNCTION string("")
0007 SEND_VAL_EX T1 2
0008 V2 = DO_FCALL
0009 SEND_VAR_NO_REF_EX V2 1
0010 V3 = DO_FCALL
0011 VERIFY_RETURN_TYPE V3
0012 RETURN V3
0013 EXT_STMT
0014 VERIFY_RETURN_TYPE
0015 RETURN null
LIVE RANGES:
     3: 0011 - 0012 (tmp/var)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/FunctionNode.php:1-33
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\functionnode") string("phpbench\expression\ast\node")
0004 RETURN int(1)

PhpBench\Expression\Ast\FunctionNode::__construct:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/FunctionNode.php:17-21
     ; return  [] RANGE[0..0]
0000 CV0($name) = RECV 1
0001 CV1($arguments) = RECV_INIT 2 null
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("name")
0004 OP_DATA CV0($name)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("arguments")
0007 OP_DATA CV1($arguments)
0008 EXT_STMT
0009 RETURN null

PhpBench\Expression\Ast\FunctionNode::args:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/FunctionNode.php:23-26
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("arguments")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Ast\FunctionNode::name:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/FunctionNode.php:28-31
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("name")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/TolerableNode.php:1-33
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\tolerablenode") string("phpbench\expression\ast\node")
0004 RETURN int(1)

PhpBench\Expression\Ast\TolerableNode::__construct:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/TolerableNode.php:17-21
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 CV1($tolerance) = RECV 2
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("value")
0004 OP_DATA CV0($value)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("tolerance")
0007 OP_DATA CV1($tolerance)
0008 EXT_STMT
0009 RETURN null

PhpBench\Expression\Ast\TolerableNode::tolerance:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/TolerableNode.php:23-26
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("tolerance")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Ast\TolerableNode::value:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/TolerableNode.php:28-31
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("value")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/IntegerNode.php:1-22
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\integernode") string("phpbench\expression\ast\numbernode")
0003 RETURN int(1)

PhpBench\Expression\Ast\IntegerNode::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/IntegerNode.php:12-15
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("value")
0003 OP_DATA CV0($value)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\Ast\IntegerNode::value:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/IntegerNode.php:17-20
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("value")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/NumberNode.php:1-12
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\numbernode") string("phpbench\expression\ast\numbervalue")
0002 RETURN int(1)

PhpBench\Expression\Ast\NumberNode::value:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/NumberNode.php:10-10
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN null

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/NumberValue.php:1-8
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\numbervalue") string("phpbench\expression\ast\scalarvalue")
0002 RETURN int(1)

$_main:
     ; (lines=5, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/PercentageNode.php:1-38
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\percentagenode") string("phpbench\expression\ast\numbernode")
0004 RETURN int(1)

PhpBench\Expression\Ast\PercentageNode::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/PercentageNode.php:14-17
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("value")
0003 OP_DATA CV0($value)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\Ast\PercentageNode::valueNode:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/PercentageNode.php:19-22
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("value")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Ast\PercentageNode::value:
     ; (lines=36, args=0, vars=1, tmps=14)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/PercentageNode.php:24-36
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T1 = FETCH_OBJ_R THIS string("value")
0002 ASSIGN CV0($value) T1
0003 EXT_STMT
0004 T3 = INSTANCEOF CV0($value) string("PhpBench\Expression\Ast\FloatNode")
0005 T4 = BOOL_NOT T3
0006 T4 = JMPZ_EX T4 0010
0007 T5 = INSTANCEOF CV0($value) string("PhpBench\Expression\Ast\IntegerNode")
0008 T6 = BOOL_NOT T5
0009 T4 = BOOL T6
0010 JMPZ T4 0027
0011 EXT_STMT
0012 V7 = NEW 2 string("PhpBench\Expression\Exception\EvaluationError")
0013 V8 = FETCH_THIS
0014 SEND_VAR_EX V8 1
0015 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Expression\Ast\sprintf")
0016 SEND_VAL_EX string("Percentage node has not been evaluated, its value is a "%s"") 1
0017 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Ast\get_class")
0018 CHECK_FUNC_ARG 1
0019 V9 = FETCH_OBJ_FUNC_ARG (ref) THIS string("value")
0020 SEND_FUNC_ARG V9 1
0021 V10 = DO_FCALL
0022 SEND_VAR_NO_REF_EX V10 2
0023 V11 = DO_FCALL
0024 SEND_VAR_NO_REF_EX V11 2
0025 DO_FCALL
0026 THROW V7
0027 EXT_STMT
0028 INIT_METHOD_CALL 0 CV0($value) string("value")
0029 V13 = DO_FCALL
0030 T14 = CAST (double) V13
0031 VERIFY_RETURN_TYPE T14
0032 RETURN T14
0033 EXT_STMT
0034 VERIFY_RETURN_TYPE
0035 RETURN null
LIVE RANGES:
     7: 0013 - 0026 (new)
     14: 0031 - 0032 (tmp/var)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/ComparisonNode.php:1-8
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\comparisonnode") string("phpbench\expression\ast\binaryoperatornode")
0002 RETURN int(1)

$_main:
     ; (lines=6, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/BinaryOperatorNode.php:1-42
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 NOP
0003 EXT_STMT
0004 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\binaryoperatornode") string("phpbench\expression\ast\node")
0005 RETURN int(1)

PhpBench\Expression\Ast\BinaryOperatorNode::__construct:
     ; (lines=14, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/BinaryOperatorNode.php:20-25
     ; return  [] RANGE[0..0]
0000 CV0($left) = RECV 1
0001 CV1($operator) = RECV 2
0002 CV2($right) = RECV 3
0003 EXT_STMT
0004 ASSIGN_OBJ THIS string("left")
0005 OP_DATA CV0($left)
0006 EXT_STMT
0007 ASSIGN_OBJ THIS string("operator")
0008 OP_DATA CV1($operator)
0009 EXT_STMT
0010 ASSIGN_OBJ THIS string("right")
0011 OP_DATA CV2($right)
0012 EXT_STMT
0013 RETURN null

PhpBench\Expression\Ast\BinaryOperatorNode::left:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/BinaryOperatorNode.php:27-30
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("left")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Ast\BinaryOperatorNode::operator:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/BinaryOperatorNode.php:32-35
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("operator")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

PhpBench\Expression\Ast\BinaryOperatorNode::right:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/BinaryOperatorNode.php:37-40
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("right")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/PhpValueFactory.php:1-52
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 RETURN int(1)

PhpBench\Expression\Ast\PhpValueFactory::fromValue:
     ; (lines=96, args=1, vars=4, tmps=29)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/PhpValueFactory.php:13-50
     ; return  [] RANGE[0..0]
0000 CV0($value) = RECV 1
0001 EXT_STMT
0002 T4 = TYPE_CHECK (double) CV0($value)
0003 JMPZ T4 0010
0004 EXT_STMT
0005 V5 = NEW 1 string("PhpBench\Expression\Ast\FloatNode")
0006 SEND_VAR_EX CV0($value) 1
0007 DO_FCALL
0008 VERIFY_RETURN_TYPE V5
0009 RETURN V5
0010 EXT_STMT
0011 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Ast\is_int")
0012 SEND_VAR_EX CV0($value) 1
0013 V7 = DO_FCALL
0014 JMPZ V7 0021
0015 EXT_STMT
0016 V8 = NEW 1 string("PhpBench\Expression\Ast\IntegerNode")
0017 SEND_VAR_EX CV0($value) 1
0018 DO_FCALL
0019 VERIFY_RETURN_TYPE V8
0020 RETURN V8
0021 EXT_STMT
0022 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Ast\is_string")
0023 SEND_VAR_EX CV0($value) 1
0024 V10 = DO_FCALL
0025 JMPZ V10 0032
0026 EXT_STMT
0027 V11 = NEW 1 string("PhpBench\Expression\Ast\StringNode")
0028 SEND_VAR_EX CV0($value) 1
0029 DO_FCALL
0030 VERIFY_RETURN_TYPE V11
0031 RETURN V11
0032 EXT_STMT
0033 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Ast\is_null")
0034 SEND_VAR_EX CV0($value) 1
0035 V13 = DO_FCALL
0036 JMPZ V13 0042
0037 EXT_STMT
0038 V14 = NEW 0 string("PhpBench\Expression\Ast\NullNode")
0039 DO_FCALL
0040 VERIFY_RETURN_TYPE V14
0041 RETURN V14
0042 EXT_STMT
0043 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Ast\is_bool")
0044 SEND_VAR_EX CV0($value) 1
0045 V16 = DO_FCALL
0046 JMPZ V16 0053
0047 EXT_STMT
0048 V17 = NEW 1 string("PhpBench\Expression\Ast\BooleanNode")
0049 SEND_VAR_EX CV0($value) 1
0050 DO_FCALL
0051 VERIFY_RETURN_TYPE V17
0052 RETURN V17
0053 EXT_STMT
0054 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Ast\is_array")
0055 SEND_VAR_EX CV0($value) 1
0056 V19 = DO_FCALL
0057 JMPZ V19 0078
0058 EXT_STMT
0059 ASSIGN CV1($listValues) array(...)
0060 EXT_STMT
0061 V21 = FE_RESET_R CV0($value) 0071
0062 T22 = FE_FETCH_R V21 CV2($listValue) 0071
0063 ASSIGN CV3($key) T22
0064 EXT_STMT
0065 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("fromValue")
0066 SEND_VAR CV2($listValue) 1
0067 V25 = DO_FCALL
0068 ASSIGN_DIM CV1($listValues) CV3($key)
0069 OP_DATA V25
0070 JMP 0062
0071 FE_FREE V21
0072 EXT_STMT
0073 V26 = NEW 1 string("PhpBench\Expression\Ast\ListNode")
0074 SEND_VAR_EX CV1($listValues) 1
0075 DO_FCALL
0076 VERIFY_RETURN_TYPE V26
0077 RETURN V26
0078 EXT_STMT
0079 T28 = INSTANCEOF CV0($value) string("PhpBench\Data\DataFrame")
0080 JMPZ T28 0087
0081 EXT_STMT
0082 V29 = NEW 1 string("PhpBench\Expression\Ast\DataFrameNode")
0083 SEND_VAR_EX CV0($value) 1
0084 DO_FCALL
0085 VERIFY_RETURN_TYPE V29
0086 RETURN V29
0087 EXT_STMT
0088 V31 = NEW 1 string("PhpBench\Expression\Ast\UnrepresentableValueNode")
0089 SEND_VAR_EX CV0($value) 1
0090 DO_FCALL
0091 VERIFY_RETURN_TYPE V31
0092 RETURN V31
0093 EXT_STMT
0094 VERIFY_RETURN_TYPE
0095 RETURN null
LIVE RANGES:
     5: 0006 - 0008 (new)
     5: 0008 - 0009 (tmp/var)
     8: 0017 - 0019 (new)
     8: 0019 - 0020 (tmp/var)
     11: 0028 - 0030 (new)
     11: 0030 - 0031 (tmp/var)
     14: 0039 - 0040 (new)
     14: 0040 - 0041 (tmp/var)
     17: 0049 - 0051 (new)
     17: 0051 - 0052 (tmp/var)
     21: 0062 - 0071 (loop)
     26: 0074 - 0076 (new)
     26: 0076 - 0077 (tmp/var)
     29: 0083 - 0085 (new)
     29: 0085 - 0086 (tmp/var)
     31: 0089 - 0091 (new)
     31: 0091 - 0092 (tmp/var)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/ListNode.php:1-24
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\listnode") string("phpbench\expression\ast\delimitedlistnode")
0002 RETURN int(1)

PhpBench\Expression\Ast\ListNode::fromValues:
     ; (lines=35, args=1, vars=4, tmps=11)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/ListNode.php:10-22
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 EXT_STMT
0002 ASSIGN CV1($listValues) array(...)
0003 EXT_STMT
0004 V5 = FE_RESET_R CV0($values) 0025
0005 T6 = FE_FETCH_R V5 CV2($value) 0025
0006 ASSIGN CV3($key) T6
0007 EXT_STMT
0008 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Expression\Ast\is_array")
0009 SEND_VAR_EX CV2($value) 1
0010 V8 = DO_FCALL
0011 JMPZ V8 0018
0012 EXT_STMT
0013 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Ast\ListNode") string("fromValues")
0014 SEND_VAR CV2($value) 1
0015 V10 = DO_FCALL
0016 ASSIGN_DIM CV1($listValues) CV3($key)
0017 OP_DATA V10
0018 EXT_STMT
0019 INIT_STATIC_METHOD_CALL 1 string("PhpBench\Expression\Ast\PhpValueFactory") string("fromValue")
0020 SEND_VAR CV2($value) 1
0021 V12 = DO_FCALL
0022 ASSIGN_DIM CV1($listValues) CV3($key)
0023 OP_DATA V12
0024 JMP 0005
0025 FE_FREE V5
0026 EXT_STMT
0027 V13 = NEW 1 (self) (exception)
0028 SEND_VAR_EX CV1($listValues) 1
0029 DO_FCALL
0030 VERIFY_RETURN_TYPE V13
0031 RETURN V13
0032 EXT_STMT
0033 VERIFY_RETURN_TYPE
0034 RETURN null
LIVE RANGES:
     5: 0005 - 0025 (loop)
     13: 0028 - 0030 (new)
     13: 0030 - 0031 (tmp/var)

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/FloatNode.php:1-22
     ; return  [] RANGE[0..0]
0000 NOP
0001 EXT_STMT
0002 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\floatnode") string("phpbench\expression\ast\numbernode")
0003 RETURN int(1)

PhpBench\Expression\Ast\FloatNode::__construct:
     ; (lines=6, args=1, vars=1, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/FloatNode.php:12-15
     ; return  [] RANGE[0..0]
0000 CV0($number) = RECV 1
0001 EXT_STMT
0002 ASSIGN_OBJ THIS string("number")
0003 OP_DATA CV0($number)
0004 EXT_STMT
0005 RETURN null

PhpBench\Expression\Ast\FloatNode::value:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/FloatNode.php:17-20
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("number")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)

$_main:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/Statistics.php:1-224
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN int(1)

PhpBench\Math\Statistics::stdev:
     ; (lines=17, args=2, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/Statistics.php:24-29
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 CV1($sample) = RECV_INIT 2 bool(false)
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 (self) (exception) string("variance")
0004 SEND_VAR_EX CV0($values) 1
0005 SEND_VAR_EX CV1($sample) 2
0006 V3 = DO_FCALL
0007 ASSIGN CV2($variance) V3
0008 EXT_STMT
0009 INIT_FCALL 1 96 string("sqrt")
0010 SEND_VAR CV2($variance) 1
0011 V5 = DO_FCALL
0012 VERIFY_RETURN_TYPE V5
0013 RETURN V5
0014 EXT_STMT
0015 VERIFY_RETURN_TYPE
0016 RETURN null
LIVE RANGES:
     5: 0012 - 0013 (tmp/var)

PhpBench\Math\Statistics::variance:
     ; (lines=46, args=2, vars=7, tmps=15)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/Statistics.php:37-54
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 CV1($sample) = RECV_INIT 2 bool(false)
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("mean")
0004 SEND_VAR_EX CV0($values) 1
0005 V7 = DO_FCALL
0006 ASSIGN CV2($average) V7
0007 EXT_STMT
0008 ASSIGN CV3($sum) int(0)
0009 EXT_STMT
0010 V10 = FE_RESET_R CV0($values) 0022
0011 FE_FETCH_R V10 CV4($value) 0022
0012 EXT_STMT
0013 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Math\pow")
0014 T11 = SUB CV4($value) CV2($average)
0015 SEND_VAL_EX T11 1
0016 SEND_VAL_EX int(2) 2
0017 V12 = DO_FCALL
0018 ASSIGN CV5($diff) V12
0019 EXT_STMT
0020 ASSIGN_OP (ADD) CV3($sum) CV5($diff)
0021 JMP 0011
0022 FE_FREE V10
0023 EXT_STMT
0024 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\count")
0025 SEND_VAR_EX CV0($values) 1
0026 V15 = DO_FCALL
0027 T16 = IS_IDENTICAL V15 int(0)
0028 JMPZ T16 0031
0029 EXT_STMT
0030 RETURN int(0)
0031 EXT_STMT
0032 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\count")
0033 SEND_VAR_EX CV0($values) 1
0034 V17 = DO_FCALL
0035 JMPZ CV1($sample) 0038
0036 T18 = QM_ASSIGN int(1)
0037 JMP 0039
0038 T18 = QM_ASSIGN int(0)
0039 T19 = SUB V17 T18
0040 T20 = DIV CV3($sum) T19
0041 ASSIGN CV6($variance) T20
0042 EXT_STMT
0043 RETURN CV6($variance)
0044 EXT_STMT
0045 RETURN null
LIVE RANGES:
     10: 0011 - 0022 (loop)
     17: 0035 - 0039 (tmp/var)

PhpBench\Math\Statistics::mean:
     ; (lines=26, args=1, vars=3, tmps=7)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/Statistics.php:61-76
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 EXT_STMT
0002 T3 = ISSET_ISEMPTY_CV (empty) CV0($values)
0003 JMPZ T3 0006
0004 EXT_STMT
0005 RETURN int(0)
0006 EXT_STMT
0007 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\array_sum")
0008 SEND_VAR_EX CV0($values) 1
0009 V4 = DO_FCALL
0010 ASSIGN CV1($sum) V4
0011 EXT_STMT
0012 T6 = IS_EQUAL CV1($sum) int(0)
0013 JMPZ T6 0016
0014 EXT_STMT
0015 RETURN int(0)
0016 EXT_STMT
0017 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\count")
0018 SEND_VAR_EX CV0($values) 1
0019 V7 = DO_FCALL
0020 ASSIGN CV2($count) V7
0021 EXT_STMT
0022 T9 = DIV CV1($sum) CV2($count)
0023 RETURN T9
0024 EXT_STMT
0025 RETURN null

PhpBench\Math\Statistics::kdeMode:
     ; (lines=98, args=3, vars=9, tmps=29)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/Statistics.php:95-123
     ; return  [] RANGE[0..0]
0000 CV0($population) = RECV 1
0001 CV1($space) = RECV_INIT 2 int(512)
0002 CV2($bandwidth) = RECV_INIT 3 null
0003 EXT_STMT
0004 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\count")
0005 SEND_VAR_EX CV0($population) 1
0006 V9 = DO_FCALL
0007 T10 = IS_IDENTICAL V9 int(1)
0008 JMPZ T10 0015
0009 EXT_STMT
0010 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\current")
0011 SEND_VAR_EX CV0($population) 1
0012 V11 = DO_FCALL
0013 VERIFY_RETURN_TYPE V11
0014 RETURN V11
0015 EXT_STMT
0016 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\count")
0017 SEND_VAR_EX CV0($population) 1
0018 V12 = DO_FCALL
0019 T13 = IS_IDENTICAL V12 int(0)
0020 JMPZ T13 0023
0021 EXT_STMT
0022 RETURN float(0)
0023 EXT_STMT
0024 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\min")
0025 SEND_VAR_EX CV0($population) 1
0026 V14 = DO_FCALL
0027 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\max")
0028 SEND_VAR_EX CV0($population) 1
0029 V15 = DO_FCALL
0030 T16 = IS_EQUAL V14 V15
0031 JMPZ T16 0038
0032 EXT_STMT
0033 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\min")
0034 SEND_VAR_EX CV0($population) 1
0035 V17 = DO_FCALL
0036 VERIFY_RETURN_TYPE V17
0037 RETURN V17
0038 EXT_STMT
0039 V18 = NEW 2 string("PhpBench\Math\Kde")
0040 SEND_VAR_EX CV0($population) 1
0041 SEND_VAR_EX CV2($bandwidth) 2
0042 DO_FCALL
0043 ASSIGN CV3($kde) V18
0044 EXT_STMT
0045 INIT_STATIC_METHOD_CALL 4 (self) (exception) string("linspace")
0046 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\min")
0047 SEND_VAR_EX CV0($population) 1
0048 V21 = DO_FCALL
0049 SEND_VAR_NO_REF_EX V21 1
0050 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\max")
0051 SEND_VAR_EX CV0($population) 1
0052 V22 = DO_FCALL
0053 SEND_VAR_NO_REF_EX V22 2
0054 SEND_VAR_EX CV1($space) 3
0055 SEND_VAL_EX bool(true) 4
0056 V23 = DO_FCALL
0057 ASSIGN CV1($space) V23
0058 EXT_STMT
0059 INIT_METHOD_CALL 1 CV3($kde) string("evaluate")
0060 SEND_VAR_EX CV1($space) 1
0061 V25 = DO_FCALL
0062 ASSIGN CV4($dist) V25
0063 EXT_STMT
0064 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Math\array_keys")
0065 SEND_VAR_EX CV4($dist) 1
0066 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\max")
0067 SEND_VAR_EX CV4($dist) 1
0068 V27 = DO_FCALL
0069 SEND_VAR_NO_REF_EX V27 2
0070 V28 = DO_FCALL
0071 ASSIGN CV5($maxKeys) V28
0072 EXT_STMT
0073 ASSIGN CV6($modes) array(...)
0074 EXT_STMT
0075 V31 = FE_RESET_R CV5($maxKeys) 0082
0076 FE_FETCH_R V31 CV7($maxKey) 0082
0077 EXT_STMT
0078 T33 = FETCH_DIM_R CV1($space) CV7($maxKey)
0079 ASSIGN_DIM CV6($modes) NEXT
0080 OP_DATA T33
0081 JMP 0076
0082 FE_FREE V31
0083 EXT_STMT
0084 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\array_sum")
0085 SEND_VAR_EX CV6($modes) 1
0086 V34 = DO_FCALL
0087 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\count")
0088 SEND_VAR_EX CV6($modes) 1
0089 V35 = DO_FCALL
0090 T36 = DIV V34 V35
0091 ASSIGN CV8($mode) T36
0092 EXT_STMT
0093 VERIFY_RETURN_TYPE CV8($mode)
0094 RETURN CV8($mode)
0095 EXT_STMT
0096 VERIFY_RETURN_TYPE
0097 RETURN null
LIVE RANGES:
     11: 0013 - 0014 (tmp/var)
     14: 0027 - 0030 (tmp/var)
     17: 0036 - 0037 (tmp/var)
     18: 0040 - 0043 (new)
     31: 0076 - 0082 (loop)
     34: 0087 - 0090 (tmp/var)

PhpBench\Math\Statistics::linspace:
     ; (lines=52, args=4, vars=8, tmps=17)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/Statistics.php:131-153
     ; return  [] RANGE[0..0]
0000 CV0($min) = RECV 1
0001 CV1($max) = RECV 2
0002 CV2($num) = RECV_INIT 3 int(50)
0003 CV3($endpoint) = RECV_INIT 4 bool(true)
0004 EXT_STMT
0005 T8 = SUB CV1($max) CV0($min)
0006 ASSIGN CV4($range) T8
0007 EXT_STMT
0008 T10 = IS_EQUAL CV1($max) CV0($min)
0009 JMPZ T10 0019
0010 EXT_STMT
0011 V11 = NEW 1 string("InvalidArgumentException")
0012 INIT_NS_FCALL_BY_NAME 2 string("PhpBench\Math\sprintf")
0013 SEND_VAL_EX string("Min and max cannot be the same number: %s") 1
0014 SEND_VAR_EX CV1($max) 2
0015 V12 = DO_FCALL
0016 SEND_VAR_NO_REF_EX V12 1
0017 DO_FCALL
0018 THROW V11
0019 EXT_STMT
0020 JMPZ CV3($endpoint) 0024
0021 T14 = SUB CV2($num) int(1)
0022 T15 = QM_ASSIGN T14
0023 JMP 0025
0024 T15 = QM_ASSIGN CV2($num)
0025 T16 = DIV CV4($range) T15
0026 ASSIGN CV5($unit) T16
0027 EXT_STMT
0028 ASSIGN CV6($space) array(...)
0029 EXT_STMT
0030 ASSIGN CV7($value) CV0($min)
0031 JMP 0036
0032 EXT_STMT
0033 ASSIGN_DIM CV6($space) NEXT
0034 OP_DATA CV7($value)
0035 ASSIGN_OP (ADD) CV7($value) CV5($unit)
0036 T22 = IS_SMALLER_OR_EQUAL CV7($value) CV1($max)
0037 EXT_STMT
0038 JMPNZ T22 0032
0039 EXT_STMT
0040 T23 = TYPE_CHECK (false) CV3($endpoint)
0041 JMPZ T23 0046
0042 EXT_STMT
0043 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\array_pop")
0044 SEND_VAR_EX CV6($space) 1
0045 DO_FCALL
0046 EXT_STMT
0047 VERIFY_RETURN_TYPE CV6($space)
0048 RETURN CV6($space)
0049 EXT_STMT
0050 VERIFY_RETURN_TYPE
0051 RETURN null
LIVE RANGES:
     11: 0012 - 0018 (new)
     22: 0037 - 0038 (tmp/var)

PhpBench\Math\Statistics::histogram:
     ; (lines=74, args=4, vars=13, tmps=31)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/Statistics.php:167-199
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 CV1($steps) = RECV_INIT 2 int(10)
0002 CV2($lowerBound) = RECV_INIT 3 null
0003 CV3($upperBound) = RECV_INIT 4 null
0004 EXT_STMT
0005 T13 = JMP_SET CV2($lowerBound) 0010
0006 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\min")
0007 SEND_VAR_EX CV0($values) 1
0008 V14 = DO_FCALL
0009 T13 = QM_ASSIGN V14
0010 ASSIGN CV4($min) T13
0011 EXT_STMT
0012 T16 = JMP_SET CV3($upperBound) 0017
0013 INIT_NS_FCALL_BY_NAME 1 string("PhpBench\Math\max")
0014 SEND_VAR_EX CV0($values) 1
0015 V17 = DO_FCALL
0016 T16 = QM_ASSIGN V17
0017 ASSIGN CV5($max) T16
0018 EXT_STMT
0019 T19 = SUB CV5($max) CV4($min)
0020 ASSIGN CV6($range) T19
0021 EXT_STMT
0022 T21 = DIV CV6($range) CV1($steps)
0023 ASSIGN CV7($step) T21
0024 EXT_STMT
0025 PRE_INC CV1($steps)
0026 EXT_STMT
0027 ASSIGN CV8($histogram) array(...)
0028 EXT_STMT
0029 ASSIGN CV9($floor) CV4($min)
0030 EXT_STMT
0031 ASSIGN CV10($i) int(0)
0032 JMP 0065
0033 EXT_STMT
0034 T27 = ADD CV9($floor) CV7($step)
0035 ASSIGN CV11($ceil) T27
0036 EXT_STMT
0037 T29 = CAST (string) CV9($floor)
0038 T30 = ISSET_ISEMPTY_DIM_OBJ (isset) CV8($histogram) T29
0039 T31 = BOOL_NOT T30
0040 JMPZ T31 0045
0041 EXT_STMT
0042 T32 = CAST (string) CV9($floor)
0043 ASSIGN_DIM CV8($histogram) T32
0044 OP_DATA int(0)
0045 EXT_STMT
0046 V34 = FE_RESET_R CV0($values) 0059
0047 FE_FETCH_R V34 CV12($value) 0059
0048 EXT_STMT
0049 T35 = IS_SMALLER_OR_EQUAL CV9($floor) CV12($value)
0050 T35 = JMPZ_EX T35 0053
0051 T36 = IS_SMALLER CV12($value) CV11($ceil)
0052 T35 = BOOL T36
0053 JMPZ T35 0058
0054 EXT_STMT
0055 T37 = CAST (string) CV9($floor)
0056 V38 = FETCH_DIM_RW CV8($histogram) T37
0057 PRE_INC V38
0058 JMP 0047
0059 FE_FREE V34
0060 EXT_STMT
0061 ASSIGN_OP (ADD) CV9($floor) CV7($step)
0062 EXT_STMT
0063 ASSIGN_OP (ADD) CV11($ceil) CV7($step)
0064 PRE_INC CV10($i)
0065 T43 = IS_SMALLER CV10($i) CV1($steps)
0066 EXT_STMT
0067 JMPNZ T43 0033
0068 EXT_STMT
0069 VERIFY_RETURN_TYPE CV8($histogram)
0070 RETURN CV8($histogram)
0071 EXT_STMT
0072 VERIFY_RETURN_TYPE
0073 RETURN null
LIVE RANGES:
     34: 0047 - 0059 (loop)
     43: 0066 - 0067 (tmp/var)

PhpBench\Math\Statistics::percentageDifference:
     ; (lines=27, args=2, vars=2, tmps=8)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/Statistics.php:201-212
     ; return  [] RANGE[0..0]
0000 CV0($value1) = RECV 1
0001 CV1($value2) = RECV 2
0002 EXT_STMT
0003 T2 = IS_EQUAL CV0($value1) int(0)
0004 T2 = JMPZ_EX T2 0007
0005 T3 = IS_EQUAL CV1($value2) int(0)
0006 T2 = BOOL T3
0007 JMPZ T2 0011
0008 EXT_STMT
0009 T4 = VERIFY_RETURN_TYPE int(0)
0010 RETURN T4
0011 EXT_STMT
0012 T5 = IS_EQUAL CV0($value1) int(0)
0013 JMPZ T5 0018
0014 EXT_STMT
0015 T6 = FETCH_CONSTANT (unqualified-in-namespace) string("PhpBench\Math\INF")
0016 VERIFY_RETURN_TYPE T6
0017 RETURN T6
0018 EXT_STMT
0019 T7 = DIV CV1($value2) CV0($value1)
0020 T8 = SUB T7 int(1)
0021 T9 = MUL T8 int(100)
0022 VERIFY_RETURN_TYPE T9
0023 RETURN T9
0024 EXT_STMT
0025 VERIFY_RETURN_TYPE
0026 RETURN null
LIVE RANGES:
     6: 0016 - 0017 (tmp/var)
     9: 0022 - 0023 (tmp/var)

PhpBench\Math\Statistics::rstdev:
     ; (lines=23, args=2, vars=3, tmps=6)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/Statistics.php:217-222
     ; return  [] RANGE[0..0]
0000 CV0($values) = RECV 1
0001 CV1($sample) = RECV_INIT 2 bool(false)
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 1 (self) (exception) string("mean")
0004 SEND_VAR CV0($values) 1
0005 V3 = DO_FCALL
0006 ASSIGN CV2($mean) V3
0007 EXT_STMT
0008 JMPZ CV2($mean) 0017
0009 INIT_STATIC_METHOD_CALL 2 (self) (exception) string("stdev")
0010 SEND_VAR CV0($values) 1
0011 SEND_VAR CV1($sample) 2
0012 V5 = DO_FCALL
0013 T6 = DIV V5 CV2($mean)
0014 T7 = MUL T6 int(100)
0015 T8 = QM_ASSIGN T7
0016 JMP 0018
0017 T8 = QM_ASSIGN int(0)
0018 VERIFY_RETURN_TYPE T8
0019 RETURN T8
0020 EXT_STMT
0021 VERIFY_RETURN_TYPE
0022 RETURN null
LIVE RANGES:
     8: 0018 - 0019 (tmp/var)

$_main:
     ; (lines=2, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/FloatNumber.php:1-35
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN int(1)

PhpBench\Math\FloatNumber::isLessThanOrEqual:
     ; (lines=17, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/FloatNumber.php:7-14
     ; return  [] RANGE[0..0]
0000 CV0($left) = RECV 1
0001 CV1($right) = RECV 2
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 (self) (exception) string("isEqual")
0004 SEND_VAR_EX CV0($left) 1
0005 SEND_VAR_EX CV1($right) 2
0006 V2 = DO_FCALL
0007 JMPZ V2 0010
0008 EXT_STMT
0009 RETURN bool(true)
0010 EXT_STMT
0011 T3 = IS_SMALLER CV0($left) CV1($right)
0012 VERIFY_RETURN_TYPE T3
0013 RETURN T3
0014 EXT_STMT
0015 VERIFY_RETURN_TYPE
0016 RETURN null
LIVE RANGES:
     3: 0012 - 0013 (tmp/var)

PhpBench\Math\FloatNumber::isEqual:
     ; (lines=11, args=2, vars=2, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/FloatNumber.php:16-19
     ; return  [] RANGE[0..0]
0000 CV0($left) = RECV 1
0001 CV1($right) = RECV 2
0002 EXT_STMT
0003 T2 = CAST (string) CV0($left)
0004 T3 = CAST (string) CV1($right)
0005 T4 = IS_IDENTICAL T2 T3
0006 VERIFY_RETURN_TYPE T4
0007 RETURN T4
0008 EXT_STMT
0009 VERIFY_RETURN_TYPE
0010 RETURN null
LIVE RANGES:
     2: 0004 - 0005 (tmp/var)
     4: 0006 - 0007 (tmp/var)

PhpBench\Math\FloatNumber::isWithin:
     ; (lines=19, args=3, vars=3, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/FloatNumber.php:21-24
     ; return  [] RANGE[0..0]
0000 CV0($number) = RECV 1
0001 CV1($lower) = RECV 2
0002 CV2($upper) = RECV 3
0003 EXT_STMT
0004 INIT_STATIC_METHOD_CALL 2 (self) (exception) string("isGreaterThanOrEqual")
0005 SEND_VAR_EX CV0($number) 1
0006 SEND_VAR_EX CV1($lower) 2
0007 V3 = DO_FCALL
0008 T4 = JMPZ_EX V3 0014
0009 INIT_STATIC_METHOD_CALL 2 (self) (exception) string("isLessThanOrEqual")
0010 SEND_VAR CV0($number) 1
0011 SEND_VAR CV2($upper) 2
0012 V5 = DO_FCALL
0013 T4 = BOOL V5
0014 VERIFY_RETURN_TYPE T4
0015 RETURN T4
0016 EXT_STMT
0017 VERIFY_RETURN_TYPE
0018 RETURN null

PhpBench\Math\FloatNumber::isGreaterThanOrEqual:
     ; (lines=17, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Math/FloatNumber.php:26-33
     ; return  [] RANGE[0..0]
0000 CV0($left) = RECV 1
0001 CV1($right) = RECV 2
0002 EXT_STMT
0003 INIT_STATIC_METHOD_CALL 2 (self) (exception) string("isEqual")
0004 SEND_VAR CV0($left) 1
0005 SEND_VAR CV1($right) 2
0006 V2 = DO_FCALL
0007 JMPZ V2 0010
0008 EXT_STMT
0009 RETURN bool(true)
0010 EXT_STMT
0011 T3 = IS_SMALLER CV1($right) CV0($left)
0012 VERIFY_RETURN_TYPE T3
0013 RETURN T3
0014 EXT_STMT
0015 VERIFY_RETURN_TYPE
0016 RETURN null
LIVE RANGES:
     3: 0012 - 0013 (tmp/var)

$_main:
     ; (lines=3, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/ToleratedTrue.php:1-15
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 DECLARE_CLASS_DELAYED string("phpbench\expression\ast\toleratedtrue") string("phpbench\expression\ast\phpvalue")
0002 RETURN int(1)

PhpBench\Expression\Ast\ToleratedTrue::value:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Expression/Ast/ToleratedTrue.php:10-13
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 RETURN bool(true)
0002 EXT_STMT
0003 RETURN null

$_main:
     ; (lines=4, args=0, vars=0, tmps=0)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/AssertionResult.php:1-72
     ; return  [] RANGE[0..0]
0000 NOP
0001 NOP
0002 EXT_STMT
0003 RETURN int(1)

PhpBench\Assertion\AssertionResult::__construct:
     ; (lines=10, args=2, vars=2, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/AssertionResult.php:31-35
     ; return  [] RANGE[0..0]
0000 CV0($type) = RECV 1
0001 CV1($message) = RECV_INIT 2 null
0002 EXT_STMT
0003 ASSIGN_OBJ THIS string("type")
0004 OP_DATA CV0($type)
0005 EXT_STMT
0006 ASSIGN_OBJ THIS string("message")
0007 OP_DATA CV1($message)
0008 EXT_STMT
0009 RETURN null

PhpBench\Assertion\AssertionResult::tolerated:
     ; (lines=12, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/AssertionResult.php:37-40
     ; return  [] RANGE[0..0]
0000 CV0($message) = RECV_INIT 1 string("")
0001 EXT_STMT
0002 V1 = NEW 2 (self) (exception)
0003 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("TOLERATED")
0004 SEND_VAL_EX T2 1
0005 SEND_VAR_EX CV0($message) 2
0006 DO_FCALL
0007 VERIFY_RETURN_TYPE V1
0008 RETURN V1
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     1: 0003 - 0007 (new)
     1: 0007 - 0008 (tmp/var)

PhpBench\Assertion\AssertionResult::fail:
     ; (lines=12, args=1, vars=1, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/AssertionResult.php:42-45
     ; return  [] RANGE[0..0]
0000 CV0($message) = RECV_INIT 1 string("")
0001 EXT_STMT
0002 V1 = NEW 2 (self) (exception)
0003 T2 = FETCH_CLASS_CONSTANT (self) (exception) string("FAIL")
0004 SEND_VAL_EX T2 1
0005 SEND_VAR_EX CV0($message) 2
0006 DO_FCALL
0007 VERIFY_RETURN_TYPE V1
0008 RETURN V1
0009 EXT_STMT
0010 VERIFY_RETURN_TYPE
0011 RETURN null
LIVE RANGES:
     1: 0003 - 0007 (new)
     1: 0007 - 0008 (tmp/var)

PhpBench\Assertion\AssertionResult::ok:
     ; (lines=10, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/AssertionResult.php:47-50
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 V0 = NEW 1 (self) (exception)
0002 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("OK")
0003 SEND_VAL_EX T1 1
0004 DO_FCALL
0005 VERIFY_RETURN_TYPE V0
0006 RETURN V0
0007 EXT_STMT
0008 VERIFY_RETURN_TYPE
0009 RETURN null
LIVE RANGES:
     0: 0002 - 0005 (new)
     0: 0005 - 0006 (tmp/var)

PhpBench\Assertion\AssertionResult::isTolerated:
     ; (lines=9, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/AssertionResult.php:52-55
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("type")
0002 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("TOLERATED")
0003 T2 = IS_IDENTICAL T0 T1
0004 VERIFY_RETURN_TYPE T2
0005 RETURN T2
0006 EXT_STMT
0007 VERIFY_RETURN_TYPE
0008 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)
     2: 0004 - 0005 (tmp/var)

PhpBench\Assertion\AssertionResult::isFail:
     ; (lines=9, args=0, vars=0, tmps=3)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/AssertionResult.php:57-60
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("type")
0002 T1 = FETCH_CLASS_CONSTANT (self) (exception) string("FAIL")
0003 T2 = IS_IDENTICAL T0 T1
0004 VERIFY_RETURN_TYPE T2
0005 RETURN T2
0006 EXT_STMT
0007 VERIFY_RETURN_TYPE
0008 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)
     2: 0004 - 0005 (tmp/var)

PhpBench\Assertion\AssertionResult::getMessage:
     ; (lines=9, args=0, vars=0, tmps=2)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/AssertionResult.php:62-65
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_IS THIS string("message")
0002 T1 = COALESCE T0 0004
0003 T1 = QM_ASSIGN string("<no message>")
0004 VERIFY_RETURN_TYPE T1
0005 RETURN T1
0006 EXT_STMT
0007 VERIFY_RETURN_TYPE
0008 RETURN null
LIVE RANGES:
     1: 0004 - 0005 (tmp/var)

PhpBench\Assertion\AssertionResult::type:
     ; (lines=7, args=0, vars=0, tmps=1)
     ; (before optimizer)
     ; /home/daniel/www/phpbench/phpbench/lib/Assertion/AssertionResult.php:67-70
     ; return  [] RANGE[0..0]
0000 EXT_STMT
0001 T0 = FETCH_OBJ_R THIS string("type")
0002 VERIFY_RETURN_TYPE T0
0003 RETURN T0
0004 EXT_STMT
0005 VERIFY_RETURN_TYPE
0006 RETURN null
LIVE RANGES:
     0: 0002 - 0003 (tmp/var)
